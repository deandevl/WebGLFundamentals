"undefined"!=typeof Float32Array&&Float32Array,Math.random;Math.PI;Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});class t{constructor(t,e,r,n){this.gl=t,this.type=e,this.attributeLocation=this.gl.getAttribLocation(r,n),this.buffer=this.gl.createBuffer()}bufferFormat(t,e,r,n){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.gl.vertexAttribPointer(this.attributeLocation,t,this.type,e,r,n),this.gl.enableVertexAttribArray(this.attributeLocation)}setData(t,e){switch(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.type){case this.gl.FLOAT:this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),e);break;case this.gl.UNSIGNED_BYTE:this.gl.bufferData(this.gl.ARRAY_BUFFER,new Uint8Array(t),e)}}}function e(t,e,r){const n=t.createShader(e);t.shaderSource(n,r),t.compileShader(n);if(t.getShaderParameter(n,t.COMPILE_STATUS))return n;{const e=t.getShaderInfoLog(n);throw t.deleteShader(n),new Error("createShader: "+e)}}try{const n=function(t,e="webgl2",r){const n=document.getElementById(t);if(!n)throw new Error(`createGLContext: Could not locate canvas element with id ${t}`);return{gl:n.getContext(e,r),canvas:n}}("my_canvas"),a=n.gl;!function(t){const e=t.clientWidth,r=t.clientHeight,n=t.width!==e||t.height!==r;n&&(t.width=e,t.height=r)}(n.canvas),a.viewport(0,0,a.canvas.width,a.canvas.height);const i=e(a,a.VERTEX_SHADER,"#version 300 es\n\n// Vertex Shader\n// An attribute is an input (in) to a vertex shader.\nin vec4 a_position_v4;\n\n// All shaders have a main function\nvoid main() {\n  // gl_position is a special variable a vertex shader is responsible for setting.\n  gl_Position = a_position_v4;\n}"),o=e(a,a.FRAGMENT_SHADER,'#version 300 es\n\n// Fragment shaders don\'t have a default precision so we need\n//   to pick one. highp is a good default. It means "high precision"\n\nprecision highp float;\n\n// We need to declare an output for the fragment shader\nout vec4 outColor_v4;\n\nvoid main() {\n  // outColor variable is responsible for setting (red, green, blue)\n  outColor_v4 = vec4(1, 0, 0.5, 1); // return reddish-purple\n}'),s=function(t,e,r){const n=t.createProgram();if(t.attachShader(n,e),t.attachShader(n,r),t.linkProgram(n),t.getProgramParameter(n,t.LINK_STATUS))return n;{const e=t.getProgramInfoLog(n);throw t.deleteProgram(n),new Error("createProgram: "+e)}}(a,i,o);a.useProgram(s);const c=[-1,0,0,1,-1,1],h=[-1,-1,1,1,-1,1],l=[-.5,-.5,.5,.5,-.5,.5];let d=c;const g=a.FLOAT,u=new t(a,g,s,"a_position_v4"),f=a.createVertexArray();a.bindVertexArray(f);{const t=2,e=!1,r=0,n=0;u.bufferFormat(t,e,r,n)}function r(){!function(t,e=[0,0,0,1]){t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.clearColor(e[0],e[1],e[2],e[3]),t.clearDepth(1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}(a),u.setData(d,a.STATIC_DRAW);const t=a.TRIANGLES;a.drawArrays(t,0,3)}document.getElementById("corner").addEventListener("click",(()=>{d=c,r()}));document.getElementById("bigger").addEventListener("click",(()=>{d=h,r()}));document.getElementById("center").addEventListener("click",(()=>{d=l,r()})),r()}catch(t){console.log(t)}
//# sourceMappingURL=index.dcb82e97.js.map
