"undefined"!=typeof Float32Array&&Float32Array,Math.random;Math.PI;Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});function t(t,e,r){const o=t.createShader(e);t.shaderSource(o,r),t.compileShader(o);if(t.getShaderParameter(o,t.COMPILE_STATUS))return o;{const e=t.getShaderInfoLog(o);throw t.deleteShader(o),new Error(`HelperFunctions-createShader-Error: ${e}`)}}class e{constructor(t,e,r,o){this.gl=t,this.buffer_type="ARRAY",this.data_type=e,this.attributeLocation=this.gl.getAttribLocation(r,o),this.arrayBuffer=this.gl.createBuffer()}bufferFormat(t,e,r,o){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.arrayBuffer),this.gl.vertexAttribPointer(this.attributeLocation,t,this.data_type,e,r,o),this.gl.enableVertexAttribArray(this.attributeLocation)}setData(t,e){let r;if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.arrayBuffer),r=t,"number"==typeof t[0]){r=new Array(t.length);for(let e=0;e<t.length;e++)r[e]=t[e]}else if(Array.isArray(t)){r=new Array(t.length*t[0].length);for(let e=0;e<t.length;e++)for(let o=0;o<t[0].length;o++)r[e*t[0].length+o]=t[e][o]}switch(this.data_type){case this.gl.FLOAT:this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(r),e);break;case this.gl.UNSIGNED_BYTE:this.gl.bufferData(this.gl.ARRAY_BUFFER,new Uint8Array(r),e)}}delete(){this.gl.deleteBuffer(this.arrayBuffer)}}class r{constructor(t,e,r,o){this.gl=t,this.data_type=o,this.data=null,this.uniformLocation=t.getUniformLocation(e,r)}setData(...t){switch(this.data_type){case"uniform1i":this.gl.uniform1i(this.uniformLocation,t[0]),this.data=t[0];break;case"uniform1f":this.gl.uniform1f(this.uniformLocation,t[0]),this.data=t[0];break;case"uniform2f":this.gl.uniform2f(this.uniformLocation,t[0],t[1]),this.data=[t[0],t[1]];break;case"uniform4f":this.gl.uniform4f(this.uniformLocation,t[0],t[1],t[2],t[3]),this.data=[t[0],t[1],t[2],t[3]];break;case"uniform2fv":this.gl.uniform2fv(this.uniformLocation,t[0]),this.data=t[0];break;case"uniform3fv":this.gl.uniform3fv(this.uniformLocation,t[0]),this.data=t[0];break;case"uniform4fv":this.gl.uniform4fv(this.uniformLocation,t[0]),this.data=t[0];break;case"uniformMatrix3fv":this.gl.uniformMatrix3fv(this.uniformLocation,!1,t[0]),this.data=t[0];break;case"uniformMatrix4fv":this.gl.uniformMatrix4fv(this.uniformLocation,!1,t[0]),this.data=t[0];break;default:throw new Error(`UniformClass: function ${this.type} has not been implemented.`)}}}try{const o=function(t,e="webgl2",r){const o=document.getElementById(t);if(!o)throw new Error(`HelperFunctions-createGLContext-Error: Could not locate canvas element with id ${t}`);return{gl:o.getContext(e,r),canvas:o}}("my_canvas"),n=o.gl;!function(t){const e=t.clientWidth,r=t.clientHeight,o=t.width!==e||t.height!==r;o&&(t.width=e,t.height=r)}(o.canvas),n.viewport(0,0,n.canvas.width,n.canvas.height);const i=t(n,n.VERTEX_SHADER,"#version 300 es\n\n// Receive position data from the buffer\nin vec2 a_position_v2;\n\n// Used to pass in the resolution of the canvas\nuniform vec2 u_resolution_v2;\n\nvoid main() {\n  // convert the position from pixels to 0.0 to 1.0\n  vec2 zeroToOne_v2 = a_position_v2 / u_resolution_v2;\n\n  // convert from 0->1 to 0->2\n  vec2 zeroToTwo_v2 = zeroToOne_v2 * 2.0;\n\n  // convert from 0->2 to -1 -> +1 (clip space)\n  vec2 clipSpace_v2 = zeroToTwo_v2 - 1.0;\n\n  // flip and assign position\n  gl_Position = vec4(clipSpace_v2 * vec2(1, -1), 0, 1);\n}"),a=function(t,e,r){const o=t.createProgram();if(t.attachShader(o,e),t.attachShader(o,r),t.linkProgram(o),t.getProgramParameter(o,t.LINK_STATUS))return o;{const e=t.getProgramInfoLog(o);throw t.deleteProgram(o),new Error(`HelperFunctions-createProgram-Error: ${e}`)}}(n,i,t(n,n.FRAGMENT_SHADER,'#version 300 es\n\n// Fragment shaders don\'t have a default precision so we need\n//   to pick one. highp is a good default. It means "high precision"\n\nprecision highp float;\n\n// We need to declare an output for the fragment shader\nout vec4 outColor_v4;\n\nvoid main() {\n  // outColor variable is responsible for setting (red, green, blue)\n  outColor_v4 = vec4(1, 0, 0.5, 1); // return reddish-purple\n}'));n.useProgram(a);const s=[10,20,80,20,10,30,10,30,80,20,80,30],h=new e(n,n.FLOAT,a,"a_position_v2");h.setData(s,n.STATIC_DRAW);const c=n.createVertexArray();n.bindVertexArray(c);{const t=2,e=!1,r=0,o=0;h.bufferFormat(t,e,r,o)}new r(n,a,"u_resolution_v2","uniform2f").setData(n.canvas.width,n.canvas.height),function(t,e=[.9,.9,.9,1]){t.clearColor(e[0],e[1],e[2],e[3]),t.clearDepth(1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL)}(n);const f=n.TRIANGLES,l=0,u=s.length/2;n.drawArrays(f,l,u)}catch(t){console.log(t.message)}
//# sourceMappingURL=index.dedc7104.js.map
