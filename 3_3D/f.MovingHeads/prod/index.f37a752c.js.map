{"mappings":"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WACzB,WAAa,YAAY,YACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,WACzB,WAAa,WAAY,WACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,WACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,WACzB,WAAa,WAAY,YACzB,UAAa,WAAY,YACzB,WAAa,YAAY,WACzB,WAAa,WAAY,WACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,WAAY,YACzB,WAAa,YAAY,WACzB,WAAa,YAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,UAAa,WAAY,YACzB,YAAa,YAAa,YAC1B,WAAa,WAAa,YAC1B,UAAa,WAAY,YACzB,WAAa,WAAY,WACzB,WAAa,YAAY,WACzB,UAAa,WAAY,YACzB,YAAa,WAAa,YAC1B,WAAa,WAAY,WACzB,WAAa,WAAY,YACzB,YAAa,YAAa,YAC1B,UAAa,WAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,WAAa,WAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,WAAa,YAC1B,WAAa,WAAa,YAC1B,WAAa,WAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,WAAa,WAAa,YAC1B,YAAa,WAAa,YAC1B,UAAa,WAAY,YACzB,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,WAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,WAAa,UAAY,YACzB,YAAa,WAAa,YAC1B,YAAa,YAAa,YAC1B,WAAa,WAAa,YAC1B,WAAa,UAAY,YACzB,YAAa,WAAa,YAC1B,YAAa,WAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,WAAa,YAC1B,WAAa,UAAY,YACzB,WAAa,WAAY,YACzB,YAAa,WAAa,YAC1B,YAAa,WAAa,YAC1B,YAAa,WAAa,YAC1B,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,UAAa,WAAY,WACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,UAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,UAAa,YAAY,YACzB,WAAa,WAAY,YACzB,WAAa,YAAY,YACzB,UAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,WAAY,YACzB,UAAa,YAAY,YACzB,WAAa,WAAY,WACzB,WAAa,WAAY,YACzB,WAAa,YAAY,YACzB,YAAa,WAAa,YAC1B,WAAa,WAAY,YACzB,WAAa,WAAY,WACzB,WAAa,WAAY,YACzB,WAAa,UAAY,YACzB,WAAa,YAAY,YACzB,WAAa,WAAY,YACzB,YAAa,WAAa,YAC1B,YAAa,WAAa,YAC1B,WAAa,WAAY,YACzB,SAAa,YAAc,YAC3B,YAAa,WAAa,YAC1B,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,SAAa,YAAc,YAC3B,WAAa,UAAY,YACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,YAAa,WAAa,YAC1B,SAAa,YAAc,YAC3B,YAAa,WAAa,YAC1B,SAAa,YAAc,YAC3B,WAAa,WAAY,YACzB,YAAa,WAAa,YAC1B,UAAa,YAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,WAAa,YAAY,YACzB,UAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,UAAa,YAAY,YACzB,UAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,UAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,WAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,WAAa,WAAY,YACzB,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,WAAa,WAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,WAAa,UAC1B,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,UAAa,YACzB,YAAa,WAAa,WAC1B,WAAa,WAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,WAAa,WAC1B,WAAa,UAAa,WAC1B,WAAa,WAAa,YAC1B,YAAa,WAAa,WAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,WAC1B,WAAa,WAAa,YAC1B,WAAa,WAAY,WACzB,WAAa,UAAY,YACzB,WAAa,WAAa,YAC1B,WAAa,UAAa,WAC1B,WAAa,WAAY,WACzB,WAAa,WAAY,WACzB,UAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,WAAY,WACzB,WAAa,UAAa,WAC1B,UAAa,WAAY,WACzB,UAAa,WAAY,WACzB,WAAa,UAAa,WAC1B,WAAa,UAAY,YACzB,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,WAC1B,UAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,WAAY,WACzB,UAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,UAAa,WAAY,WACzB,WAAa,UAAY,YACzB,WAAa,YAAY,WACzB,YAAc,WAAY,YAC1B,WAAa,WAAY,YACzB,WAAa,WAAY,WACzB,YAAc,WAAY,YAC1B,WAAa,WAAY,YACzB,WAAa,WAAY,WACzB,YAAc,WAAY,WAC1B,WAAY,WAAY,YACxB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,WAAa,UAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,WAAa,UAAY,YACzB,WAAa,UAAY,YACzB,WAAa,UAAY,YACzB,UAAa,WAAY,WACzB,WAAa,UAAY,YACzB,WAAa,WAAY,YACzB,WAAa,UAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,WACzB,WAAY,WAAY,WACxB,YAAc,YAAa,WAC3B,YAAc,YAAa,YAC3B,WAAa,WAAY,WACzB,WAAa,WAAY,WACzB,YAAc,YAAa,YAC3B,WAAa,YAAY,YACzB,WAAa,WAAY,UACzB,YAAc,YAAa,WAC3B,WAAY,YAAY,YACxB,WAAa,YAAY,YACzB,WAAa,WAAY,WACzB,WAAa,WAAY,YACzB,WAAa,WAAY,WACzB,WAAa,WAAY,WACzB,WAAa,WAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,WAAY,YACzB,WAAa,YAAY,YACzB,WAAa,UAAY,YACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,SAAY,YACzB,WAAa,YAAY,YACzB,WAAa,WAAY,WACzB,WAAa,WAAY,YACzB,WAAa,YAAY,YACzB,WAAa,WAAY,WACzB,WAAa,UAAY,YACzB,WAAa,WAAY,WACzB,WAAa,WAAY,YACzB,WAAa,SAAY,YACzB,WAAa,YAAY,YACzB,WAAa,UAAY,YACzB,WAAa,WAAY,YACzB,WAAa,WAAY,WACzB,WAAa,YAAY,YACzB,WAAa,YAAY,WACzB,WAAa,WAAY,YACzB,WAAa,YAAY,WACzB,YAAc,YAAY,YAC1B,WAAa,YAAY,WACzB,WAAa,YAAY,WACzB,WAAY,YAAY,WACxB,YAAc,YAAY,YAC1B,WAAa,YAAY,WACzB,WAAa,SAAY,YACzB,WAAa,WAAY,YACzB,WAAa,YAAY,WACzB,WAAa,YAAY,YACzB,WAAa,SAAY,YACzB,WAAa,YAAY,UACzB,WAAc,YAAY,YAC1B,WAAa,YAAY,YACzB,WAAa,YAAY,UACzB,WAAY,YAAY,UACxB,WAAc,YAAY,YAC1B,WAAa,SAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAY,YACzB,WAAa,SAAY,YACzB,YAAa,YAAe,YAC5B,WAAa,YAAY,YACzB,WAAa,SAAY,YACzB,WAAa,YAAY,YACzB,YAAa,YAAe,WAC5B,YAAc,YAAY,WAC1B,WAAY,YAAY,WACxB,WAAa,YAAY,WACzB,WAAa,YAAY,YACzB,YAAa,YAAe,YAC5B,WAAa,WAAY,YACzB,YAAa,YAAe,YAC5B,YAAa,YAAa,YAC1B,WAAa,WAAY,YACzB,WAAa,YAAY,YACzB,WAAa,YAAa,YAC1B,YAAa,YAAe,YAC5B,WAAa,YAAY,WACzB,WAAc,WAAY,YAC1B,WAAa,YAAa,WAC1B,WAAc,YAAY,WAC1B,WAAc,WAAY,YAC1B,WAAa,YAAY,YACzB,WAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAe,YAC5B,WAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,WAAa,YAAa,YAC1B,YAAa,YAAa,aAC1B,YAAa,YAAa,YAC1B,WAAa,YAAa,WAC1B,WAAc,WAAY,WAC1B,YAAc,YAAa,YAC3B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,WAC1B,YAAc,YAAa,YAC3B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAa,YAAa,YAC1B,YAAc,YAAa,YAC3B,WAAa,WAAa,WAC1B,WAAY,WAAa,YACzB,WAAa,WAAa,UAC1B,YAAc,YAAa,YAC3B,YAAa,YAAa,aAC1B,WAAa,YAAa,WAC1B,WAAY,UAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,YAAY,WAAa,WACzB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,UAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,UACzB,WAAY,UAAY,WACxB,UAAY,WAAc,WAC1B,WAAY,UAAa,WACzB,YAAY,SAAa,WACzB,UAAY,WAAc,WAC1B,UAAY,UAAY,WACxB,UAAY,QAAY,WACxB,YAAY,SAAa,WACzB,WAAY,UAAY,WACxB,UAAY,WAAc,WAC1B,YAAY,SAAa,WACzB,YAAY,WAAa,WACzB,WAAY,UAAY,WACxB,YAAY,SAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,SAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,UACzB,WAAY,UAAY,WACxB,UAAY,UAAY,WACxB,UAAY,WAAc,WAC1B,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,UAAY,UAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,UACzB,YAAY,WAAa,WACzB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,SAAY,WAAY,WACxB,UAAY,WAAY,WACxB,WAAY,UAAa,WACzB,YAAY,UAAa,WACzB,YAAY,SAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,YAAY,YAAa,UACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,YAAY,YAAa,UACzB,YAAY,WAAa,UACzB,YAAY,UAAa,WACzB,YAAY,YAAa,UACzB,YAAY,YAAa,WACzB,YAAY,WAAa,UACzB,YAAY,YAAa,UACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,UACzB,YAAY,WAAa,WACzB,UAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,UAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,SAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,SAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,UACxB,WAAY,UAAY,WACxB,YAAY,UAAa,UACzB,WAAY,WAAY,UACxB,YAAY,WAAa,WACzB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,aAAc,WAAa,WAC3B,WAAY,WAAa,WACzB,YAAY,UAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,UAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,SAAY,WAAY,WACxB,UAAY,WAAY,WACxB,UAAY,WAAY,WACxB,SAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,SAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,UAAY,WAAY,UACxB,UAAY,WAAY,WACxB,UAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,UACxB,UAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,UAAY,WACxB,UAAY,WAAY,WACxB,UAAY,QAAY,WACxB,UAAY,UAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,UAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,UACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,WAAY,WAAY,UACxB,WAAY,UAAY,UACxB,WAAY,UAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,WACxB,WAAY,UAAY,UACxB,WAAY,WAAY,UACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,UACxB,WAAY,UAAY,WACxB,WAAY,UAAY,UACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,UAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,UACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,UACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,UACzB,WAAY,WAAa,WACzB,YAAY,SAAa,WACzB,YAAY,WAAa,UACzB,YAAY,UAAa,WACzB,WAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,SAAa,WACzB,WAAY,WAAa,WACzB,YAAY,UAAa,WACzB,WAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,UAAY,WAAY,UACxB,WAAY,WAAY,WACxB,UAAY,WAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,WAAY,UAAY,UACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,WAAY,UACxB,WAAY,WAAY,WACxB,UAAY,UAAY,WACxB,WAAY,WAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,YAAY,UAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAa,WACzB,YAAY,UAAa,WACzB,WAAY,UAAa,WACzB,WAAY,WAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,YAAY,WAAa,UACzB,WAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,UAAY,UAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,UACxB,WAAY,YAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,UACxB,WAAY,WAAY,WACxB,WAAY,WAAY,UACxB,WAAY,YAAY,WACxB,WAAY,WAAY,UACxB,UAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,UAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,UAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,WAAY,UACxB,UAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,UACxB,WAAY,WAAY,UACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,UACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,WAAY,UACxB,WAAY,YAAY,UACxB,UAAY,YAAY,WACxB,WAAY,WAAY,UACxB,UAAY,WAAY,UACxB,WAAY,YAAY,UACxB,WAAY,YAAY,UACxB,WAAY,YAAY,WACxB,WAAY,WAAY,UACxB,WAAY,YAAY,UACxB,WAAY,YAAY,WACxB,UAAY,YAAY,WACxB,WAAY,YAAY,UACxB,WAAY,WAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,UACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,YAAY,UACxB,UAAY,WAAY,UACxB,WAAY,WAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,UAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,WAAY,WACxB,WAAY,YAAY,WACxB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,WAAY,YAAY,WACxB,WAAY,WAAY,WACxB,YAAY,YAAa,WACzB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,YAAa,WACzB,WAAY,WAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,WAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,WAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,WAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,WAAY,WAAY,WACxB,WAAY,WAAY,WACxB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,WAAY,WAAY,WACxB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,WAAa,UACzB,YAAY,YAAa,WACzB,YAAY,YAAa,WACzB,YAAY,WAAa,WACzB,YAAY,WAAa,UACzB,YAAY,WAAa,WACzB,WAAY,UAAY,WACxB,YAAY,YAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAY,WACxB,WAAY,UAAY,WACxB,YAAY,WAAa,WACzB,YAAY,WAAa,WACzB,WAAY,WAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,UACxB,WAAY,YAAY,WACxB,WAAY,UAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,YAAY,WACxB,WAAY,WAAY,UACxB,WAAY,YAAY,WACxB,WAAY,WAAY,UACxB,WAAY,UAAY,WACxB,WAAY,YAAY,WACxB,WAAY,WAAY,UACxB,WAAY,WAAY,UACxB,WAAY,YAAY,WACxB,WAAY,YAAY,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","sources":["../../positions-colors/HeadData.js","node_modules/gl-matrix/esm/common.js","node_modules/gl-matrix/esm/mat4.js","node_modules/web-gl-helpers/dist/src/HelperFunctions.js","node_modules/web-gl-helpers/dist/src/ArrayBufferClass.js","node_modules/web-gl-helpers/dist/src/TransformsClass.js","node_modules/web-gl-helpers/dist/src/UniformClass.js","main.js"],"sourcesContent":["/*\nTitle:            Heads\nFiles:            piratehead.obj/rastahead.obj/swathead.obj\nAuthor:           Julius Krischan Makowka\nE-mail address:   wm_jkm@yahoo.com\n\nDescription:      Three different heads\n\n====================================================\nFurther informations:\n\nSome old heads originally build for UT2003 models. Untextured and no UV map.\nThe piratehead and the swathead are supposed to be male, the rastahead female.\nYeah I know hard to tell, but it is old unpolished work ;)\n\n====================================================\nConstruction\n\nEditor:         MilkShape 3d/Wings3d\n\n====================================================\n\nDistribution / Copyright / Permissions\n\nCopyright (C) 2005  Julius Krischan Makowka\n\nThis content is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License\nas published by the Free Software Foundation; either version 2\nof the License, or any later version.\n\nThis content is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\nAlternativly you can use this models also under the\nCreative Commons Share Alike 3.0 (or later) license.\n*/\nconst HeadData = {\n  positions: [\n-4.77733631, -2.57349567, 2.38198674,\n-4.43534870, -3.71830147, 2.91800034,\n-3.52158375, -2.53822189, 4.25702375,\n-4.77733631, -2.57349567, 2.38198674,\n-4.88058491, -2.09152036, 0.30170847,\n-4.24237842, -4.28676290, 1.55180815,\n-4.77733631, -2.57349567, 2.38198674,\n-5.13185520, -0.58584472, 0.25635381,\n-4.88058491, -2.09152036, 0.30170847,\n-3.52158375, -2.53822189, 4.25702375,\n-4.33628101, 0.30028285, 3.65909524,\n-4.77733631, -2.57349567, 2.38198674,\n-3.52158375, -2.53822189, 4.25702375,\n-2.99106617, -1.54440269, 5.00398198,\n-4.33628101, 0.30028285, 3.65909524,\n-3.52158375, -2.53822189, 4.25702375,\n-1.82579441, -2.66396744, 5.43207067,\n-2.99106617, -1.54440269, 5.00398198,\n-4.33628101, 0.30028285, 3.65909524,\n-5.09022922, 0.46642608, 1.91582271,\n-4.77733631, -2.57349567, 2.38198674,\n-4.33628101, 0.30028285, 3.65909524,\n-4.62917347, 1.25883622, 3.54182669,\n-5.09022922, 0.46642608, 1.91582271,\n-4.33628101, 0.30028285, 3.65909524,\n-3.50642795, 0.55193538, 5.04555276,\n-4.62917347, 1.25883622, 3.54182669,\n-2.76318378, 0.44706926, 5.36636101,\n-2.99106617, -1.54440269, 5.00398198,\n-1.30823536, -1.69101600, 5.19558185,\n-2.76318378, 0.44706926, 5.36636101,\n-3.50642795, 0.55193538, 5.04555276,\n-2.99106617, -1.54440269, 5.00398198,\n-2.76318378, 0.44706926, 5.36636101,\n-3.06030292, 0.86287318, 5.16803205,\n-3.50642795, 0.55193538, 5.04555276,\n-2.76318378, 0.44706926, 5.36636101,\n-1.99552555, 1.05859415, 5.18166669,\n-3.06030292, 0.86287318, 5.16803205,\n-1.30823536, -1.69101600, 5.19558185,\n-0.91922779, 5.1486574e-2, 5.80569119,\n-2.76318378, 0.44706926, 5.36636101,\n-1.30823536, -1.69101600, 5.19558185,\n-0.87041492, -0.53831865, 6.31695632,\n-0.91922779, 5.1486574e-2, 5.80569119,\n-1.30823536, -1.69101600, 5.19558185,\n-0.96805210, -2.09270625, 5.42081552,\n-1.32043857, -2.06694341, 6.11403260,\n-1.30823536, -1.69101600, 5.19558185,\n-1.82579441, -2.66396744, 5.43207067,\n-0.96805210, -2.09270625, 5.42081552,\n-1.30823536, -1.69101600, 5.19558185,\n-1.48315830, -1.67957290, 6.22618621,\n-0.87041492, -0.53831865, 6.31695632,\n-0.91922779, 5.1486574e-2, 5.80569119,\n-0.79719562, 0.66678334, 5.71280038,\n-2.76318378, 0.44706926, 5.36636101,\n-2.03669376, -6.71502678, 4.49679476,\n-1.81651325, -5.64586620, 5.26413372,\n-2.91618747, -4.96385889, 4.34518206,\n-2.03669376, -6.71502678, 4.49679476,\n-0.59107609, -7.17103477, 5.19983683,\n-1.05619831, -6.59458312, 5.55495413,\n-2.03669376, -6.71502678, 4.49679476,\n-0.75203342, -7.31512648, 4.01405630,\n-0.59107609, -7.17103477, 5.19983683,\n-2.03669376, -6.71502678, 4.49679476,\n-1.36663074, -7.06850747, 3.08911380,\n-0.75203342, -7.31512648, 4.01405630,\n-2.91618747, -4.96385889, 4.34518206,\n-4.00349445, -4.62255948, 3.07858152,\n-2.03669376, -6.71502678, 4.49679476,\n-2.91618747, -4.96385889, 4.34518206,\n-3.21176166, -4.27788433, 4.50388815,\n-4.00349445, -4.62255948, 3.07858152,\n-2.91618747, -4.96385889, 4.34518206,\n-2.11520405, -4.39019348, 5.17342316,\n-3.21176166, -4.27788433, 4.50388815,\n-2.91618747, -4.96385889, 4.34518206,\n-1.21212024, -5.02162334, 5.39606852,\n-2.11520405, -4.39019348, 5.17342316,\n-4.00349445, -4.62255948, 3.07858152,\n-2.41276569, -6.02263476, 1.34825288,\n-2.03669376, -6.71502678, 4.49679476,\n-4.00349445, -4.62255948, 3.07858152,\n-4.43534870, -3.71830147, 2.91800034,\n-4.24237842, -4.28676290, 1.55180815,\n-4.00349445, -4.62255948, 3.07858152,\n-3.21176166, -4.27788433, 4.50388815,\n-4.43534870, -3.71830147, 2.91800034,\n-1.16509266, 3.49385849, 6.38150634,\n-2.72539158, 2.90984206, 5.81731199,\n-1.23653049, 2.31301201, 6.54874512,\n-1.16509266, 3.49385849, 6.38150634,\n-2.38368244, 4.22089296, 5.48170809,\n-2.72539158, 2.90984206, 5.81731199,\n-1.16509266, 3.49385849, 6.38150634,\n9.3839668e-3, 4.72361885, 6.28695193,\n-2.38368244, 4.22089296, 5.48170809,\n-1.23653049, 2.31301201, 6.54874512,\n9.3839668e-3, 2.86741592, 6.32971393,\n-1.16509266, 3.49385849, 6.38150634,\n-1.23653049, 2.31301201, 6.54874512,\n-3.18913288, 2.59722673, 4.68475835,\n-1.60500736, 2.01134470, 5.18629417,\n-1.23653049, 2.31301201, 6.54874512,\n-2.72539158, 2.90984206, 5.81731199,\n-3.18913288, 2.59722673, 4.68475835,\n-1.23653049, 2.31301201, 6.54874512,\n-0.33523578, 1.95472063, 6.20464150,\n9.3839668e-3, 2.86741592, 6.32971393,\n9.3839668e-3, 2.86741592, 6.32971393,\n1.18004971, 3.49385849, 6.38150634,\n-1.16509266, 3.49385849, 6.38150634,\n9.3839668e-3, 2.86741592, 6.32971393,\n-0.33523578, 1.95472063, 6.20464150,\n0.35018902, 1.95472063, 6.20464150,\n9.3839668e-3, 2.86741592, 6.32971393,\n1.25529461, 2.31301201, 6.54874512,\n1.18004971, 3.49385849, 6.38150634,\n-0.87041492, -0.53831865, 6.31695632,\n-0.28643055, -0.50599091, 7.23054725,\n-0.91922779, 5.1486574e-2, 5.80569119,\n-0.87041492, -0.53831865, 6.31695632,\n-0.67707081, -1.54700918, 7.18096889,\n-0.28643055, -0.50599091, 7.23054725,\n-0.87041492, -0.53831865, 6.31695632,\n-1.48315830, -1.67957290, 6.22618621,\n-0.67707081, -1.54700918, 7.18096889,\n-0.28643055, -0.50599091, 7.23054725,\n-0.21320362, 0.93610700, 6.55821877,\n-0.91922779, 5.1486574e-2, 5.80569119,\n-0.28643055, -0.50599091, 7.23054725,\n0.22815685, 0.93610700, 6.55821877,\n-0.21320362, 0.93610700, 6.55821877,\n-0.28643055, -0.50599091, 7.23054725,\n0.30137997, -0.50599091, 7.23054725,\n0.22815685, 0.93610700, 6.55821877,\n-0.28643055, -0.50599091, 7.23054725,\n9.3839668e-3, -1.00675699, 7.48343824,\n0.30137997, -0.50599091, 7.23054725,\n-1.05619831, -6.59458312, 5.55495413,\n-1.81651325, -5.64586620, 5.26413372,\n-2.03669376, -6.71502678, 4.49679476,\n-1.05619831, -6.59458312, 5.55495413,\n9.3839668e-3, -6.43208197, 5.85173990,\n-0.89917774, -5.70292042, 5.88735079,\n-1.05619831, -6.59458312, 5.55495413,\n-0.59107609, -7.17103477, 5.19983683,\n9.3839668e-3, -6.43208197, 5.85173990,\n-0.89917774, -5.70292042, 5.88735079,\n-1.81651325, -5.64586620, 5.26413372,\n-1.05619831, -6.59458312, 5.55495413,\n-0.89917774, -5.70292042, 5.88735079,\n-1.21212024, -5.02162334, 5.39606852,\n-1.81651325, -5.64586620, 5.26413372,\n-0.89917774, -5.70292042, 5.88735079,\n9.3839668e-3, -5.03982394, 5.63993044,\n-1.21212024, -5.02162334, 5.39606852,\n-0.89917774, -5.70292042, 5.88735079,\n0.91539746, -5.70292042, 5.88735079,\n9.3839668e-3, -5.03982394, 5.63993044,\n-1.81651325, -5.64586620, 5.26413372,\n-1.21212024, -5.02162334, 5.39606852,\n-2.91618747, -4.96385889, 4.34518206,\n-4.24237842, -4.28676290, 1.55180815,\n-2.41276569, -6.02263476, 1.34825288,\n-4.00349445, -4.62255948, 3.07858152,\n-4.24237842, -4.28676290, 1.55180815,\n-4.43534870, -3.71830147, 2.91800034,\n-4.77733631, -2.57349567, 2.38198674,\n-4.24237842, -4.28676290, 1.55180815,\n-4.88058491, -2.09152036, 0.30170847,\n-3.28860874, -4.75891349, -0.50693407,\n-3.28860874, -4.75891349, -0.50693407,\n-2.41276569, -6.02263476, 1.34825288,\n-4.24237842, -4.28676290, 1.55180815,\n-2.41276569, -6.02263476, 1.34825288,\n-1.36663074, -7.06850747, 3.08911380,\n-2.03669376, -6.71502678, 4.49679476,\n-2.41276569, -6.02263476, 1.34825288,\n-0.62176914, -6.96930954, 1.99071486,\n-1.36663074, -7.06850747, 3.08911380,\n-1.60500736, 2.01134470, 5.18629417,\n-0.77278538, 1.98811307, 6.06547553,\n-1.23653049, 2.31301201, 6.54874512,\n-1.60500736, 2.01134470, 5.18629417,\n-0.35786075, 1.19720797, 5.94846938,\n-0.77278538, 1.98811307, 6.06547553,\n-1.60500736, 2.01134470, 5.18629417,\n-1.39430256, 1.08346056, 5.17266512,\n-0.35786075, 1.19720797, 5.94846938,\n-1.60500736, 2.01134470, 5.18629417,\n-1.83135624, 1.75331020, 5.30387620,\n-1.39430256, 1.08346056, 5.17266512,\n-0.77278538, 1.98811307, 6.06547553,\n-0.33523578, 1.95472063, 6.20464150,\n-1.23653049, 2.31301201, 6.54874512,\n-5.09022922, 0.46642608, 1.91582271,\n-4.62917347, 1.25883622, 3.54182669,\n-4.48027057, 2.07649315, 3.76401418,\n-5.09022922, 0.46642608, 1.91582271,\n-5.13185520, -0.58584472, 0.25635381,\n-4.77733631, -2.57349567, 2.38198674,\n-0.18879337, -1.93776693, 7.36010234,\n-0.52870960, -2.12102948, 6.27241797,\n-0.21320362, -2.27558665, 6.36687342,\n-0.18879337, -1.93776693, 7.36010234,\n-0.59164448, -1.93814481, 7.15015297,\n-0.52870960, -2.12102948, 6.27241797,\n-0.18879337, -1.93776693, 7.36010234,\n-0.67707081, -1.54700918, 7.18096889,\n-0.59164448, -1.93814481, 7.15015297,\n-0.18879337, -1.93776693, 7.36010234,\n-0.21320362, -1.55905110, 7.64130329,\n-0.67707081, -1.54700918, 7.18096889,\n-0.18879337, -1.93776693, 7.36010234,\n0.22815685, -1.55905110, 7.64130329,\n-0.21320362, -1.55905110, 7.64130329,\n-0.18879337, -1.93776693, 7.36010234,\n0.20119839, -1.93742517, 7.36102563,\n0.22815685, -1.55905110, 7.64130329,\n-0.21320362, -2.27558665, 6.36687342,\n0.22815685, -2.27558665, 6.36687342,\n-0.18879337, -1.93776693, 7.36010234,\n-0.21320362, -2.27558665, 6.36687342,\n9.3839668e-3, -2.94975053, 6.00900452,\n0.22815685, -2.27558665, 6.36687342,\n0.22815685, -2.27558665, 6.36687342,\n0.20119839, -1.93742517, 7.36102563,\n-0.18879337, -1.93776693, 7.36010234,\n0.22815685, -2.27558665, 6.36687342,\n0.54747753, -2.12102948, 6.27241797,\n0.20119839, -1.93742517, 7.36102563,\n0.22815685, -2.27558665, 6.36687342,\n0.47425823, -2.90917801, 6.18326529,\n0.54747753, -2.12102948, 6.27241797,\n-2.99106617, -1.54440269, 5.00398198,\n-3.50642795, 0.55193538, 5.04555276,\n-4.33628101, 0.30028285, 3.65909524,\n-2.99106617, -1.54440269, 5.00398198,\n-1.82579441, -2.66396744, 5.43207067,\n-1.30823536, -1.69101600, 5.19558185,\n-0.82160587, -3.64246924, 6.18835567,\n-1.52941532, -3.80810596, 5.85467023,\n-0.67515964, -3.87820263, 5.80867296,\n-0.82160587, -3.64246924, 6.18835567,\n0.83744793, -3.64246924, 6.18835567,\n9.3839668e-3, -3.48349178, 6.29514563,\n-0.82160587, -3.64246924, 6.18835567,\n9.3839668e-3, -3.99074843, 5.91792396,\n0.83744793, -3.64246924, 6.18835567,\n9.3839668e-3, -3.48349178, 6.29514563,\n-0.55312366, -3.23338409, 6.32089205,\n-0.82160587, -3.64246924, 6.18835567,\n9.3839668e-3, -3.48349178, 6.29514563,\n-0.45549030, -2.90917801, 6.18326529,\n-0.55312366, -3.23338409, 6.32089205,\n9.3839668e-3, -3.48349178, 6.29514563,\n9.3839668e-3, -2.94975053, 6.00900452,\n-0.45549030, -2.90917801, 6.18326529,\n9.3839668e-3, -3.48349178, 6.29514563,\n0.47425823, -2.90917801, 6.18326529,\n9.3839668e-3, -2.94975053, 6.00900452,\n-0.55312366, -3.23338409, 6.32089205,\n-0.45549030, -2.90917801, 6.18326529,\n-1.99315662, -3.55702680, 5.64003666,\n-0.55312366, -3.23338409, 6.32089205,\n-1.52941532, -3.80810596, 5.85467023,\n-0.82160587, -3.64246924, 6.18835567,\n9.3839668e-3, -6.43208197, 5.85173990,\n0.91539746, -5.70292042, 5.88735079,\n-0.89917774, -5.70292042, 5.88735079,\n9.3839668e-3, -6.43208197, 5.85173990,\n1.07496243, -6.59458312, 5.55495413,\n0.91539746, -5.70292042, 5.88735079,\n-0.59107609, -7.17103477, 5.19983683,\n0.60912686, -7.17155298, 5.19981216,\n9.3839668e-3, -6.43208197, 5.85173990,\n-0.59107609, -7.17103477, 5.19983683,\n-0.75203342, -7.31512648, 4.01405630,\n0.60912686, -7.17155298, 5.19981216,\n0.60912686, -7.17155298, 5.19981216,\n1.07496243, -6.59458312, 5.55495413,\n9.3839668e-3, -6.43208197, 5.85173990,\n-4.68611927, 2.72371162, 3.63192463,\n-3.50032444, 1.97198957, 4.95950538,\n-3.18913288, 2.59722673, 4.68475835,\n-4.68611927, 2.72371162, 3.63192463,\n-5.16345615, 2.74943405, 2.20776777,\n-4.48027057, 2.07649315, 3.76401418,\n-3.18913288, 2.59722673, 4.68475835,\n-2.72539158, 2.90984206, 5.81731199,\n-4.68611927, 2.72371162, 3.63192463,\n-3.18913288, 2.59722673, 4.68475835,\n-2.79861469, 2.02801342, 5.25836199,\n-1.60500736, 2.01134470, 5.18629417,\n-2.72539158, 2.90984206, 5.81731199,\n-4.31187458, 3.21775684, 4.65321140,\n-4.68611927, 2.72371162, 3.63192463,\n-2.72539158, 2.90984206, 5.81731199,\n-3.40031452, 4.89063323, 4.49545614,\n-4.31187458, 3.21775684, 4.65321140,\n-2.38368244, 4.22089296, 5.48170809,\n-3.40031452, 4.89063323, 4.49545614,\n-2.72539158, 2.90984206, 5.81731199,\n-0.21320362, 0.93610700, 6.55821877,\n-0.79719562, 0.66678334, 5.71280038,\n-0.91922779, 5.1486574e-2, 5.80569119,\n-0.21320362, 0.93610700, 6.55821877,\n9.3839668e-3, 1.53380413, 6.24747448,\n-0.35786075, 1.19720797, 5.94846938,\n-0.35786075, 1.19720797, 5.94846938,\n-0.79719562, 0.66678334, 5.71280038,\n-0.21320362, 0.93610700, 6.55821877,\n-0.35786075, 1.19720797, 5.94846938,\n-1.39430256, 1.08346056, 5.17266512,\n-0.79719562, 0.66678334, 5.71280038,\n-0.35786075, 1.19720797, 5.94846938,\n-0.33523578, 1.95472063, 6.20464150,\n-0.77278538, 1.98811307, 6.06547553,\n-0.35786075, 1.19720797, 5.94846938,\n9.3839668e-3, 1.53380413, 6.24747448,\n-0.33523578, 1.95472063, 6.20464150,\n-0.79719562, 0.66678334, 5.71280038,\n-1.39430256, 1.08346056, 5.17266512,\n-2.76318378, 0.44706926, 5.36636101,\n-1.39430256, 1.08346056, 5.17266512,\n-1.83135624, 1.75331020, 5.30387620,\n-1.55862446, 1.20559670, 4.90359224,\n-1.39430256, 1.08346056, 5.17266512,\n-1.99552555, 1.05859415, 5.18166669,\n-2.76318378, 0.44706926, 5.36636101,\n-4.48027057, 2.07649315, 3.76401418,\n-3.50032444, 1.97198957, 4.95950538,\n-4.68611927, 2.72371162, 3.63192463,\n-4.48027057, 2.07649315, 3.76401418,\n-4.62917347, 1.25883622, 3.54182669,\n-4.04329319, 1.38976939, 4.32019436,\n-4.48027057, 2.07649315, 3.76401418,\n-5.16345615, 2.74943405, 2.20776777,\n-5.09022922, 0.46642608, 1.91582271,\n-4.04329319, 1.38976939, 4.32019436,\n-3.50032444, 1.97198957, 4.95950538,\n-4.48027057, 2.07649315, 3.76401418,\n-4.04329319, 1.38976939, 4.32019436,\n-3.53454227, 1.76018751, 4.55235748,\n-3.50032444, 1.97198957, 4.95950538,\n-4.04329319, 1.38976939, 4.32019436,\n-3.18795032, 1.44845368, 5.02340724,\n-3.07818622, 1.86898957, 4.95952863,\n-3.50032444, 1.97198957, 4.95950538,\n-2.79861469, 2.02801342, 5.25836199,\n-3.18913288, 2.59722673, 4.68475835,\n-3.50032444, 1.97198957, 4.95950538,\n-3.07818622, 1.86898957, 4.95952863,\n-2.79861469, 2.02801342, 5.25836199,\n-3.50032444, 1.97198957, 4.95950538,\n-3.53454227, 1.76018751, 4.55235748,\n-3.07818622, 1.86898957, 4.95952863,\n-2.02560825, 1.18455253, 5.02475889,\n-1.99552555, 1.05859415, 5.18166669,\n-1.55862446, 1.20559670, 4.90359224,\n-1.55862446, 1.20559670, 4.90359224,\n-2.45274372, 1.81694946, 5.09033880,\n-2.02560825, 1.18455253, 5.02475889,\n-1.55862446, 1.20559670, 4.90359224,\n-1.83135624, 1.75331020, 5.30387620,\n-2.45274372, 1.81694946, 5.09033880,\n-1.55862446, 1.20559670, 4.90359224,\n-1.99552555, 1.05859415, 5.18166669,\n-1.39430256, 1.08346056, 5.17266512,\n-2.45274372, 1.81694946, 5.09033880,\n-1.83135624, 1.75331020, 5.30387620,\n-2.79861469, 2.02801342, 5.25836199,\n-2.45274372, 1.81694946, 5.09033880,\n-2.71263523, 1.45346191, 5.13937906,\n-2.02560825, 1.18455253, 5.02475889,\n-1.32043857, -2.06694341, 6.11403260,\n-0.96805210, -2.09270625, 5.42081552,\n-0.52870960, -2.12102948, 6.27241797,\n-1.32043857, -2.06694341, 6.11403260,\n-1.48315830, -1.67957290, 6.22618621,\n-1.30823536, -1.69101600, 5.19558185,\n-0.52870960, -2.12102948, 6.27241797,\n-0.59164448, -1.93814481, 7.15015297,\n-1.32043857, -2.06694341, 6.11403260,\n-0.52870960, -2.12102948, 6.27241797,\n-0.45549030, -2.90917801, 6.18326529,\n-0.21320362, -2.27558665, 6.36687342,\n-0.52870960, -2.12102948, 6.27241797,\n-0.96805210, -2.09270625, 5.42081552,\n-0.45549030, -2.90917801, 6.18326529,\n-0.59164448, -1.93814481, 7.15015297,\n-1.48315830, -1.67957290, 6.22618621,\n-1.32043857, -2.06694341, 6.11403260,\n-1.99315662, -3.55702680, 5.64003666,\n-1.52941532, -3.80810596, 5.85467023,\n-0.55312366, -3.23338409, 6.32089205,\n-1.99315662, -3.55702680, 5.64003666,\n-1.82579441, -2.66396744, 5.43207067,\n-2.89097996, -3.28565859, 5.03594699,\n-1.99315662, -3.55702680, 5.64003666,\n-2.45341892, -4.24799890, 4.92711366,\n-1.96875400, -4.09765414, 4.99535213,\n-0.45549030, -2.90917801, 6.18326529,\n-0.96805210, -2.09270625, 5.42081552,\n-1.99315662, -3.55702680, 5.64003666,\n-0.45549030, -2.90917801, 6.18326529,\n9.3839668e-3, -2.94975053, 6.00900452,\n-0.21320362, -2.27558665, 6.36687342,\n-0.96805210, -2.09270625, 5.42081552,\n-1.82579441, -2.66396744, 5.43207067,\n-1.99315662, -3.55702680, 5.64003666,\n-1.96875400, -4.09765414, 4.99535213,\n-2.11520405, -4.39019348, 5.17342316,\n-1.60263843, -4.31153917, 5.72404311,\n-1.96875400, -4.09765414, 4.99535213,\n-1.52941532, -3.80810596, 5.85467023,\n-1.99315662, -3.55702680, 5.64003666,\n-1.96875400, -4.09765414, 4.99535213,\n-2.45341892, -4.24799890, 4.92711366,\n-2.11520405, -4.39019348, 5.17342316,\n-1.60263843, -4.31153917, 5.72404311,\n-0.67515964, -3.87820263, 5.80867296,\n-1.96875400, -4.09765414, 4.99535213,\n-1.60263843, -4.31153917, 5.72404311,\n9.3839668e-3, -4.39035546, 6.13934803,\n-0.67515964, -3.87820263, 5.80867296,\n-0.67515964, -3.87820263, 5.80867296,\n-1.52941532, -3.80810596, 5.85467023,\n-1.96875400, -4.09765414, 4.99535213,\n-0.67515964, -3.87820263, 5.80867296,\n9.3839668e-3, -3.99074843, 5.91792396,\n-0.82160587, -3.64246924, 6.18835567,\n-4.43534870, -3.71830147, 2.91800034,\n-3.21176166, -4.27788433, 4.50388815,\n-3.52158375, -2.53822189, 4.25702375,\n-3.21176166, -4.27788433, 4.50388815,\n-2.89097996, -3.28565859, 5.03594699,\n-3.52158375, -2.53822189, 4.25702375,\n-3.21176166, -4.27788433, 4.50388815,\n-2.45341892, -4.24799890, 4.92711366,\n-2.89097996, -3.28565859, 5.03594699,\n1.18004971, 3.49385849, 6.38150634,\n9.3839668e-3, 4.72361885, 6.28695193,\n-1.16509266, 3.49385849, 6.38150634,\n1.18004971, 3.49385849, 6.38150634,\n2.40244656, 4.22089296, 5.48170809,\n9.3839668e-3, 4.72361885, 6.28695193,\n0.22815685, 0.93610700, 6.55821877,\n9.3839668e-3, 1.53380413, 6.24747448,\n-0.21320362, 0.93610700, 6.55821877,\n0.22815685, 0.93610700, 6.55821877,\n0.37662869, 1.19720797, 5.94846938,\n9.3839668e-3, 1.53380413, 6.24747448,\n0.30137997, -0.50599091, 7.23054725,\n0.93799191, 5.1486574e-2, 5.80569119,\n0.22815685, 0.93610700, 6.55821877,\n0.30137997, -0.50599091, 7.23054725,\n0.88917904, -0.53831865, 6.31695632,\n0.93799191, 5.1486574e-2, 5.80569119,\n0.30137997, -0.50599091, 7.23054725,\n0.69583874, -1.54700918, 7.18096889,\n0.88917904, -0.53831865, 6.31695632,\n-4.31187458, 3.21775684, 4.65321140,\n-4.88741321, 4.24157235, 3.31728873,\n-4.68611927, 2.72371162, 3.63192463,\n-4.31187458, 3.21775684, 4.65321140,\n-3.40031452, 4.89063323, 4.49545614,\n-4.88741321, 4.24157235, 3.31728873,\n-0.75203342, -7.31512648, 4.01405630,\n0.77008419, -7.31564088, 4.01403181,\n0.60912686, -7.17155298, 5.19981216,\n-0.75203342, -7.31512648, 4.01405630,\n0.64053326, -6.96930954, 1.99071486,\n0.77008419, -7.31564088, 4.01403181,\n0.77008419, -7.31564088, 4.01403181,\n2.05546170, -6.71502678, 4.49679476,\n0.60912686, -7.17155298, 5.19981216,\n0.77008419, -7.31564088, 4.01403181,\n1.38539486, -7.06850747, 3.08911380,\n2.05546170, -6.71502678, 4.49679476,\n0.77008419, -7.31564088, 4.01403181,\n0.64053326, -6.96930954, 1.99071486,\n1.38539486, -7.06850747, 3.08911380,\n-2.11520405, -4.39019348, 5.17342316,\n-0.50609226, -4.74706678, 5.84781202,\n-1.60263843, -4.31153917, 5.72404311,\n-2.11520405, -4.39019348, 5.17342316,\n-2.45341892, -4.24799890, 4.92711366,\n-3.21176166, -4.27788433, 4.50388815,\n-1.21212024, -5.02162334, 5.39606852,\n-0.50609226, -4.74706678, 5.84781202,\n-2.11520405, -4.39019348, 5.17342316,\n-1.21212024, -5.02162334, 5.39606852,\n9.3839668e-3, -5.03982394, 5.63993044,\n-0.50609226, -4.74706678, 5.84781202,\n-0.50609226, -4.74706678, 5.84781202,\n9.3839668e-3, -5.03982394, 5.63993044,\n0.52104931, -4.74706678, 5.84781202,\n-0.50609226, -4.74706678, 5.84781202,\n9.3839668e-3, -4.39035546, 6.13934803,\n-1.60263843, -4.31153917, 5.72404311,\n-2.79861469, 2.02801342, 5.25836199,\n-1.83135624, 1.75331020, 5.30387620,\n-1.60500736, 2.01134470, 5.18629417,\n-2.79861469, 2.02801342, 5.25836199,\n-3.07818622, 1.86898957, 4.95952863,\n-2.45274372, 1.81694946, 5.09033880,\n-4.62917347, 1.25883622, 3.54182669,\n-3.50642795, 0.55193538, 5.04555276,\n-4.04329319, 1.38976939, 4.32019436,\n-3.50642795, 0.55193538, 5.04555276,\n-3.06030292, 0.86287318, 5.16803205,\n-4.04329319, 1.38976939, 4.32019436,\n-3.06030292, 0.86287318, 5.16803205,\n-3.21548099, 1.12285868, 4.84781609,\n-4.04329319, 1.38976939, 4.32019436,\n-3.06030292, 0.86287318, 5.16803205,\n-1.99552555, 1.05859415, 5.18166669,\n-3.21548099, 1.12285868, 4.84781609,\n-4.88741321, 4.24157235, 3.31728873,\n-5.16345615, 2.74943405, 2.20776777,\n-4.68611927, 2.72371162, 3.63192463,\n-4.88741321, 4.24157235, 3.31728873,\n-5.44868107, 3.17349375, 0.73430489,\n-5.16345615, 2.74943405, 2.20776777,\n-4.88741321, 4.24157235, 3.31728873,\n-5.68296070, 4.56450469, 1.46492560,\n-5.44868107, 3.17349375, 0.73430489,\n-4.88741321, 4.24157235, 3.31728873,\n-4.68811817, 5.47919760, 3.82381723,\n-5.68296070, 4.56450469, 1.46492560,\n0.52104931, -4.74706678, 5.84781202,\n9.3839668e-3, -4.39035546, 6.13934803,\n-0.50609226, -4.74706678, 5.84781202,\n0.52104931, -4.74706678, 5.84781202,\n1.62140637, -4.31153917, 5.72404311,\n9.3839668e-3, -4.39035546, 6.13934803,\n0.52104931, -4.74706678, 5.84781202,\n2.13396816, -4.39019348, 5.17342316,\n1.62140637, -4.31153917, 5.72404311,\n9.3839668e-3, -5.03982394, 5.63993044,\n1.23088818, -5.02162334, 5.39606852,\n0.52104931, -4.74706678, 5.84781202,\n9.3839668e-3, 4.72361885, 6.28695193,\n-1.44564457, 5.28147027, 6.03826024,\n-2.38368244, 4.22089296, 5.48170809,\n9.3839668e-3, 4.72361885, 6.28695193,\n1.46059399, 5.28147027, 6.03826024,\n-1.44564457, 5.28147027, 6.03826024,\n9.3839668e-3, 4.72361885, 6.28695193,\n2.40244656, 4.22089296, 5.48170809,\n1.46059399, 5.28147027, 6.03826024,\n-1.44564457, 5.28147027, 6.03826024,\n-3.40031452, 4.89063323, 4.49545614,\n-2.38368244, 4.22089296, 5.48170809,\n-1.44564457, 5.28147027, 6.03826024,\n-3.23418445, 6.09859583, 5.06994118,\n-3.40031452, 4.89063323, 4.49545614,\n1.46059399, 5.28147027, 6.03826024,\n9.3839668e-3, 6.47051256, 6.14674558,\n-1.44564457, 5.28147027, 6.03826024,\n1.46059399, 5.28147027, 6.03826024,\n3.25294857, 6.09859583, 5.06994118,\n9.3839668e-3, 6.47051256, 6.14674558,\n-2.89097996, -3.28565859, 5.03594699,\n-1.82579441, -2.66396744, 5.43207067,\n-3.52158375, -2.53822189, 4.25702375,\n-2.89097996, -3.28565859, 5.03594699,\n-2.45341892, -4.24799890, 4.92711366,\n-1.99315662, -3.55702680, 5.64003666,\n9.3839668e-3, -2.94975053, 6.00900452,\n0.47425823, -2.90917801, 6.18326529,\n0.22815685, -2.27558665, 6.36687342,\n0.91539746, -5.70292042, 5.88735079,\n1.07496243, -6.59458312, 5.55495413,\n1.83527737, -5.64586620, 5.26413372,\n0.91539746, -5.70292042, 5.88735079,\n1.23088818, -5.02162334, 5.39606852,\n9.3839668e-3, -5.03982394, 5.63993044,\n-0.67707081, -1.54700918, 7.18096889,\n9.3839668e-3, -1.00675699, 7.48343824,\n-0.28643055, -0.50599091, 7.23054725,\n-0.67707081, -1.54700918, 7.18096889,\n-1.48315830, -1.67957290, 6.22618621,\n-0.59164448, -1.93814481, 7.15015297,\n-0.21320362, -1.55905110, 7.64130329,\n9.3839668e-3, -1.00675699, 7.48343824,\n-0.67707081, -1.54700918, 7.18096889,\n-0.21320362, -1.55905110, 7.64130329,\n0.22815685, -1.55905110, 7.64130329,\n9.3839668e-3, -1.00675699, 7.48343824,\n9.3839668e-3, -1.00675699, 7.48343824,\n0.69583874, -1.54700918, 7.18096889,\n0.30137997, -0.50599091, 7.23054725,\n9.3839668e-3, -4.39035546, 6.13934803,\n9.3839668e-3, -3.99074843, 5.91792396,\n-0.67515964, -3.87820263, 5.80867296,\n9.3839668e-3, -4.39035546, 6.13934803,\n0.69392376, -3.87820263, 5.80867296,\n9.3839668e-3, -3.99074843, 5.91792396,\n9.3839668e-3, -4.39035546, 6.13934803,\n1.62140637, -4.31153917, 5.72404311,\n0.69392376, -3.87820263, 5.80867296,\n-5.16345615, 2.74943405, 2.20776777,\n-5.44868107, 3.17349375, 0.73430489,\n-5.09022922, 0.46642608, 1.91582271,\n-3.07818622, 1.86898957, 4.95952863,\n-2.71263523, 1.45346191, 5.13937906,\n-2.45274372, 1.81694946, 5.09033880,\n-3.07818622, 1.86898957, 4.95952863,\n-3.53454227, 1.76018751, 4.55235748,\n-4.04329319, 1.38976939, 4.32019436,\n-3.07818622, 1.86898957, 4.95952863,\n-3.18795032, 1.44845368, 5.02340724,\n-2.71263523, 1.45346191, 5.13937906,\n-2.71263523, 1.45346191, 5.13937906,\n-3.21548099, 1.12285868, 4.84781609,\n-2.02560825, 1.18455253, 5.02475889,\n-2.71263523, 1.45346191, 5.13937906,\n-3.18795032, 1.44845368, 5.02340724,\n-3.21548099, 1.12285868, 4.84781609,\n-1.36663074, -7.06850747, 3.08911380,\n-0.62176914, -6.96930954, 1.99071486,\n-0.75203342, -7.31512648, 4.01405630,\n-3.21548099, 1.12285868, 4.84781609,\n-1.99552555, 1.05859415, 5.18166669,\n-2.02560825, 1.18455253, 5.02475889,\n-3.21548099, 1.12285868, 4.84781609,\n-3.18795032, 1.44845368, 5.02340724,\n-4.04329319, 1.38976939, 4.32019436,\n0.22815685, -1.55905110, 7.64130329,\n0.69583874, -1.54700918, 7.18096889,\n9.3839668e-3, -1.00675699, 7.48343824,\n0.35018902, 1.95472063, 6.20464150,\n1.25529461, 2.31301201, 6.54874512,\n9.3839668e-3, 2.86741592, 6.32971393,\n0.35018902, 1.95472063, 6.20464150,\n0.79155331, 1.98811307, 6.06547553,\n1.25529461, 2.31301201, 6.54874512,\n0.35018902, 1.95472063, 6.20464150,\n0.37662869, 1.19720797, 5.94846938,\n0.79155331, 1.98811307, 6.06547553,\n-0.33523578, 1.95472063, 6.20464150,\n9.3839668e-3, 1.53380413, 6.24747448,\n0.35018902, 1.95472063, 6.20464150,\n9.3839668e-3, 1.53380413, 6.24747448,\n0.37662869, 1.19720797, 5.94846938,\n0.35018902, 1.95472063, 6.20464150,\n0.83744793, -3.64246924, 6.18835567,\n0.57188778, -3.23338409, 6.32089205,\n9.3839668e-3, -3.48349178, 6.29514563,\n0.83744793, -3.64246924, 6.18835567,\n1.54818707, -3.80810596, 5.85467023,\n0.57188778, -3.23338409, 6.32089205,\n9.3839668e-3, -3.99074843, 5.91792396,\n0.69392376, -3.87820263, 5.80867296,\n0.83744793, -3.64246924, 6.18835567,\n-3.40031452, 4.89063323, 4.49545614,\n-4.68811817, 5.47919760, 3.82381723,\n-4.88741321, 4.24157235, 3.31728873,\n-5.44868107, 3.17349375, 0.73430489,\n-5.59969349, 2.11773287, -2.17585973,\n-5.56430454, 1.47903965, -1.08897473,\n-5.44868107, 3.17349375, 0.73430489,\n-5.53161640, 1.48580954, 0.36221512,\n-5.09022922, 0.46642608, 1.91582271,\n-5.44868107, 3.17349375, 0.73430489,\n-6.21995945, 3.15392131, -2.41110064,\n-5.59969349, 2.11773287, -2.17585973,\n-6.58464832, 2.33778820, -2.85863690,\n-6.43791981, 2.11194384, -2.09845650,\n-6.05709095, 2.38400454, -1.87322124,\n-6.58464832, 2.33778820, -2.85863690,\n-6.00692386, 1.22392216, -2.40994639,\n-6.43791981, 2.11194384, -2.09845650,\n-6.58464832, 2.33778820, -2.85863690,\n-6.25762958, 0.87015003, -2.92158520,\n-6.00692386, 1.22392216, -2.40994639,\n-6.05709095, 2.38400454, -1.87322124,\n-6.20382328, 2.62312354, -2.91209263,\n-6.58464832, 2.33778820, -2.85863690,\n-6.05709095, 2.38400454, -1.87322124,\n-5.59969349, 2.11773287, -2.17585973,\n-6.20382328, 2.62312354, -2.91209263,\n-6.20382328, 2.62312354, -2.91209263,\n-6.77672214, 1.91114085, -3.42641680,\n-6.58464832, 2.33778820, -2.85863690,\n-6.20382328, 2.62312354, -2.91209263,\n-6.37263889, 2.07215796, -3.64221188,\n-6.77672214, 1.91114085, -3.42641680,\n-6.20382328, 2.62312354, -2.91209263,\n-5.73417682, 2.03316244, -3.28121578,\n-6.37263889, 2.07215796, -3.64221188,\n-6.43791981, 2.11194384, -2.09845650,\n-5.56430454, 1.47903965, -1.08897473,\n-6.05709095, 2.38400454, -1.87322124,\n-6.43791981, 2.11194384, -2.09845650,\n-5.95647831, 1.28318174, -1.56117866,\n-5.56430454, 1.47903965, -1.08897473,\n-6.43791981, 2.11194384, -2.09845650,\n-6.00692386, 1.22392216, -2.40994639,\n-5.95647831, 1.28318174, -1.56117866,\n-6.77672214, 1.91114085, -3.42641680,\n-6.35928745, 0.46748784, -3.96440511,\n-6.79049320, 0.45007583, -3.52948986,\n-6.77672214, 1.91114085, -3.42641680,\n-6.25762958, 0.87015003, -2.92158520,\n-6.58464832, 2.33778820, -2.85863690,\n-6.37263889, 2.07215796, -3.64221188,\n-6.35928745, 0.46748784, -3.96440511,\n-6.77672214, 1.91114085, -3.42641680,\n-6.37263889, 2.07215796, -3.64221188,\n-5.73400898, 0.63273769, -3.61922374,\n-6.35928745, 0.46748784, -3.96440511,\n-6.79049320, 0.45007583, -3.52948986,\n-5.84944172, -1.31400314, -3.02130483,\n-6.32135410, -1.09661860, -2.66459818,\n-6.79049320, 0.45007583, -3.52948986,\n-6.25762958, 0.87015003, -2.92158520,\n-6.77672214, 1.91114085, -3.42641680,\n-6.79049320, 0.45007583, -3.52948986,\n-6.09196491, -0.60087821, -2.59258684,\n-6.25762958, 0.87015003, -2.92158520,\n-6.35928745, 0.46748784, -3.96440511,\n-5.84944172, -1.31400314, -3.02130483,\n-6.79049320, 0.45007583, -3.52948986,\n-6.35928745, 0.46748784, -3.96440511,\n-5.73400898, 0.63273769, -3.61922374,\n-5.84944172, -1.31400314, -3.02130483,\n-5.59612674, -2.15744941, -2.00003736,\n-5.11624546, -1.57727076, -1.13870185,\n-6.15912266, -1.40763479, -1.96434267,\n-5.59612674, -2.15744941, -2.00003736,\n-4.85474415, -1.76779488, -1.31982605,\n-5.11624546, -1.57727076, -1.13870185,\n-6.15912266, -1.40763479, -1.96434267,\n-6.32135410, -1.09661860, -2.66459818,\n-5.59612674, -2.15744941, -2.00003736,\n-6.15912266, -1.40763479, -1.96434267,\n-6.09196491, -0.60087821, -2.59258684,\n-6.32135410, -1.09661860, -2.66459818,\n-6.32135410, -1.09661860, -2.66459818,\n-5.84944172, -1.31400314, -3.02130483,\n-5.59612674, -2.15744941, -2.00003736,\n-6.32135410, -1.09661860, -2.66459818,\n-6.09196491, -0.60087821, -2.59258684,\n-6.79049320, 0.45007583, -3.52948986,\n-5.84944172, -1.31400314, -3.02130483,\n-5.05556888, -1.88468887, -1.98332341,\n-5.59612674, -2.15744941, -2.00003736,\n-5.11624546, -1.57727076, -1.13870185,\n-5.68007297, -0.81365687, -1.29388351,\n-6.15912266, -1.40763479, -1.96434267,\n-5.11624546, -1.57727076, -1.13870185,\n-5.40403385, 0.70289360, -1.33888087,\n-5.68007297, -0.81365687, -1.29388351,\n-5.11624546, -1.57727076, -1.13870185,\n-5.40583820, -1.59566137, 7.1192451e-2,\n-5.40403385, 0.70289360, -1.33888087,\n-5.68007297, -0.81365687, -1.29388351,\n-6.09196491, -0.60087821, -2.59258684,\n-6.15912266, -1.40763479, -1.96434267,\n-5.68007297, -0.81365687, -1.29388351,\n-5.40403385, 0.70289360, -1.33888087,\n-5.74381275, 0.47268113, -1.79129746,\n-5.68007297, -0.81365687, -1.29388351,\n-5.39741535, -0.46941089, -1.68930042,\n-6.09196491, -0.60087821, -2.59258684,\n-5.56430454, 1.47903965, -1.08897473,\n-5.59969349, 2.11773287, -2.17585973,\n-6.05709095, 2.38400454, -1.87322124,\n-5.56430454, 1.47903965, -1.08897473,\n-5.53161640, 1.48580954, 0.36221512,\n-5.44868107, 3.17349375, 0.73430489,\n-5.95647831, 1.28318174, -1.56117866,\n-5.40403385, 0.70289360, -1.33888087,\n-5.56430454, 1.47903965, -1.08897473,\n-5.95647831, 1.28318174, -1.56117866,\n-5.65599460, 1.00950767, -1.91577782,\n-5.74381275, 0.47268113, -1.79129746,\n-6.00692386, 1.22392216, -2.40994639,\n-5.65599460, 1.00950767, -1.91577782,\n-5.95647831, 1.28318174, -1.56117866,\n-6.00692386, 1.22392216, -2.40994639,\n-5.72143574, 0.62655324, -2.28515543,\n-5.65599460, 1.00950767, -1.91577782,\n-6.25762958, 0.87015003, -2.92158520,\n-5.72143574, 0.62655324, -2.28515543,\n-6.00692386, 1.22392216, -2.40994639,\n-6.09196491, -0.60087821, -2.59258684,\n-5.72143574, 0.62655324, -2.28515543,\n-6.25762958, 0.87015003, -2.92158520,\n-5.74381275, 0.47268113, -1.79129746,\n-5.40403385, 0.70289360, -1.33888087,\n-5.95647831, 1.28318174, -1.56117866,\n-5.74381275, 0.47268113, -1.79129746,\n-5.39741535, -0.46941089, -1.68930042,\n-5.68007297, -0.81365687, -1.29388351,\n-5.74381275, 0.47268113, -1.79129746,\n-5.55305500, 4.5003902e-2, -2.04149872,\n-5.39741535, -0.46941089, -1.68930042,\n-5.74381275, 0.47268113, -1.79129746,\n-5.72143574, 0.62655324, -2.28515543,\n-5.55305500, 4.5003902e-2, -2.04149872,\n-5.40403385, 0.70289360, -1.33888087,\n-5.47993107, 0.40042847, -0.20036988,\n-5.56430454, 1.47903965, -1.08897473,\n-5.39741535, -0.46941089, -1.68930042,\n-5.55305500, 4.5003902e-2, -2.04149872,\n-6.09196491, -0.60087821, -2.59258684,\n-5.55305500, 4.5003902e-2, -2.04149872,\n-5.72143574, 0.62655324, -2.28515543,\n-6.09196491, -0.60087821, -2.59258684,\n-5.65599460, 1.00950767, -1.91577782,\n-5.72143574, 0.62655324, -2.28515543,\n-5.74381275, 0.47268113, -1.79129746,\n-5.59969349, 2.11773287, -2.17585973,\n-5.75649280, 2.26748979, -2.83910561,\n-6.20382328, 2.62312354, -2.91209263,\n-5.59969349, 2.11773287, -2.17585973,\n-6.21995945, 3.15392131, -2.41110064,\n-5.75649280, 2.26748979, -2.83910561,\n-5.75649280, 2.26748979, -2.83910561,\n-5.73417682, 2.03316244, -3.28121578,\n-6.20382328, 2.62312354, -2.91209263,\n-5.75649280, 2.26748979, -2.83910561,\n-6.21995945, 3.15392131, -2.41110064,\n-5.73417682, 2.03316244, -3.28121578,\n-5.73417682, 2.03316244, -3.28121578,\n-5.73400898, 0.63273769, -3.61922374,\n-6.37263889, 2.07215796, -3.64221188,\n-5.73417682, 2.03316244, -3.28121578,\n-6.17749042, 1.86490752, -4.56622659,\n-5.73400898, 0.63273769, -3.61922374,\n-5.73400898, 0.63273769, -3.61922374,\n-5.39492054, -1.07456012, -2.79070609,\n-5.84944172, -1.31400314, -3.02130483,\n-5.73400898, 0.63273769, -3.61922374,\n-3.51747532, -2.33069543, -5.22558332,\n-5.39492054, -1.07456012, -2.79070609,\n-5.39492054, -1.07456012, -2.79070609,\n-5.05556888, -1.88468887, -1.98332341,\n-5.84944172, -1.31400314, -3.02130483,\n-5.39492054, -1.07456012, -2.79070609,\n-3.51747532, -2.33069543, -5.22558332,\n-5.05556888, -1.88468887, -1.98332341,\n-5.05556888, -1.88468887, -1.98332341,\n-4.85474415, -1.76779488, -1.31982605,\n-5.59612674, -2.15744941, -2.00003736,\n-5.05556888, -1.88468887, -1.98332341,\n-4.33648319, -2.64957601, -1.38126468,\n-4.85474415, -1.76779488, -1.31982605,\n-5.05556888, -1.88468887, -1.98332341,\n-4.48767109, -3.68390401, -2.30053296,\n-4.33648319, -2.64957601, -1.38126468,\n-4.85474415, -1.76779488, -1.31982605,\n-4.88058491, -2.09152036, 0.30170847,\n-5.11624546, -1.57727076, -1.13870185,\n-4.85474415, -1.76779488, -1.31982605,\n-4.33648319, -2.64957601, -1.38126468,\n-4.88058491, -2.09152036, 0.30170847,\n0.20119839, -1.93742517, 7.36102563,\n0.54747753, -2.12102948, 6.27241797,\n0.61041241, -1.93814481, 7.15015297,\n0.20119839, -1.93742517, 7.36102563,\n0.69583874, -1.54700918, 7.18096889,\n0.22815685, -1.55905110, 7.64130329,\n-4.88058491, -2.09152036, 0.30170847,\n-5.40583820, -1.59566137, 7.1192451e-2,\n-5.11624546, -1.57727076, -1.13870185,\n-4.88058491, -2.09152036, 0.30170847,\n-5.13185520, -0.58584472, 0.25635381,\n-5.40583820, -1.59566137, 7.1192451e-2,\n-4.88058491, -2.09152036, 0.30170847,\n-4.33648319, -2.64957601, -1.38126468,\n-3.28860874, -4.75891349, -0.50693407,\n-5.40583820, -1.59566137, 7.1192451e-2,\n-5.47993107, 0.40042847, -0.20036988,\n-5.40403385, 0.70289360, -1.33888087,\n-5.40583820, -1.59566137, 7.1192451e-2,\n-5.13185520, -0.58584472, 0.25635381,\n-5.47993107, 0.40042847, -0.20036988,\n-5.47993107, 0.40042847, -0.20036988,\n-5.53161640, 1.48580954, 0.36221512,\n-5.56430454, 1.47903965, -1.08897473,\n-5.47993107, 0.40042847, -0.20036988,\n-5.13185520, -0.58584472, 0.25635381,\n-5.53161640, 1.48580954, 0.36221512,\n-5.53161640, 1.48580954, 0.36221512,\n-5.13185520, -0.58584472, 0.25635381,\n-5.09022922, 0.46642608, 1.91582271,\n-4.33648319, -2.64957601, -1.38126468,\n-4.48767109, -3.68390401, -2.30053296,\n-3.28860874, -4.75891349, -0.50693407,\n-5.68296070, 4.56450469, 1.46492560,\n-6.21995945, 3.15392131, -2.41110064,\n-5.44868107, 3.17349375, 0.73430489,\n-5.68296070, 4.56450469, 1.46492560,\n-5.99698658, 6.37535075, -1.34582338,\n-6.21995945, 3.15392131, -2.41110064,\n-5.68296070, 4.56450469, 1.46492560,\n-5.25447483, 6.94691330, 2.26293645,\n-5.99698658, 6.37535075, -1.34582338,\n9.3839668e-3, 6.47051256, 6.14674558,\n-3.23418445, 6.09859583, 5.06994118,\n-1.44564457, 5.28147027, 6.03826024,\n9.3839668e-3, 6.47051256, 6.14674558,\n-1.46915836, 8.52717874, 4.44497692,\n-3.23418445, 6.09859583, 5.06994118,\n9.3839668e-3, 6.47051256, 6.14674558,\n1.48792248, 8.52717874, 4.44497692,\n-1.46915836, 8.52717874, 4.44497692,\n-3.23418445, 6.09859583, 5.06994118,\n-4.68811817, 5.47919760, 3.82381723,\n-3.40031452, 4.89063323, 4.49545614,\n-3.23418445, 6.09859583, 5.06994118,\n-3.70197696, 7.56499111, 3.47494528,\n-4.68811817, 5.47919760, 3.82381723,\n-4.68811817, 5.47919760, 3.82381723,\n-5.25447483, 6.94691330, 2.26293645,\n-5.68296070, 4.56450469, 1.46492560,\n-4.68811817, 5.47919760, 3.82381723,\n-3.70197696, 7.56499111, 3.47494528,\n-5.25447483, 6.94691330, 2.26293645,\n-6.21995945, 3.15392131, -2.41110064,\n-6.17749042, 1.86490752, -4.56622659,\n-5.73417682, 2.03316244, -3.28121578,\n-1.46915836, 8.52717874, 4.44497692,\n-3.70197696, 7.56499111, 3.47494528,\n-3.23418445, 6.09859583, 5.06994118,\n-1.46915836, 8.52717874, 4.44497692,\n1.48792248, 8.52717874, 4.44497692,\n9.3839668e-3, 10.03831167, 1.24130272,\n9.3839668e-3, 10.03831167, 1.24130272,\n-3.19496555, 9.53616373, 0.55267717,\n-1.46915836, 8.52717874, 4.44497692,\n9.3839668e-3, 10.03831167, 1.24130272,\n-1.67697544, 9.64076487, -3.83711946,\n-3.19496555, 9.53616373, 0.55267717,\n9.3839668e-3, 10.03831167, 1.24130272,\n1.69573956, 9.64076487, -3.83711946,\n-1.67697544, 9.64076487, -3.83711946,\n-3.19496555, 9.53616373, 0.55267717,\n-5.45698948, 7.56328390, -3.82339065,\n-5.05198307, 8.17978610, -0.21249148,\n-3.19496555, 9.53616373, 0.55267717,\n-3.70197696, 7.56499111, 3.47494528,\n-1.46915836, 8.52717874, 4.44497692,\n-3.19496555, 9.53616373, 0.55267717,\n-1.67697544, 9.64076487, -3.83711946,\n-5.45698948, 7.56328390, -3.82339065,\n-5.99698658, 6.37535075, -1.34582338,\n-5.25447483, 6.94691330, 2.26293645,\n-5.05198307, 8.17978610, -0.21249148,\n-5.99698658, 6.37535075, -1.34582338,\n-5.25447483, 4.12447000, -6.08836534,\n-6.21995945, 3.15392131, -2.41110064,\n-5.05198307, 8.17978610, -0.21249148,\n-5.45698948, 7.56328390, -3.82339065,\n-5.99698658, 6.37535075, -1.34582338,\n-5.05198307, 8.17978610, -0.21249148,\n-5.25447483, 6.94691330, 2.26293645,\n-3.19496555, 9.53616373, 0.55267717,\n-5.45698948, 7.56328390, -3.82339065,\n-5.25447483, 4.12447000, -6.08836534,\n-5.99698658, 6.37535075, -1.34582338,\n-5.25447483, 6.94691330, 2.26293645,\n-3.70197696, 7.56499111, 3.47494528,\n-3.19496555, 9.53616373, 0.55267717,\n-1.67697544, 9.64076487, -3.83711946,\n-3.02697391, 6.50299035, -7.83800360,\n-5.45698948, 7.56328390, -3.82339065,\n-1.67697544, 9.64076487, -3.83711946,\n9.3839668e-3, 8.11064103, -6.07061919,\n-3.02697391, 6.50299035, -7.83800360,\n-1.67697544, 9.64076487, -3.83711946,\n1.69573956, 9.64076487, -3.83711946,\n9.3839668e-3, 8.11064103, -6.07061919,\n-3.02697391, 6.50299035, -7.83800360,\n-5.25447483, 4.12447000, -6.08836534,\n-5.45698948, 7.56328390, -3.82339065,\n-3.02697391, 6.50299035, -7.83800360,\n-3.57046146, 1.54556986, -8.36202365,\n-5.25447483, 4.12447000, -6.08836534,\n-3.02697391, 6.50299035, -7.83800360,\n1.0516932e-2, 3.86536988, -8.48025395,\n-3.57046146, 1.54556986, -8.36202365,\n-3.02697391, 6.50299035, -7.83800360,\n3.04574185, 6.50299035, -7.83800360,\n1.0516932e-2, 3.86536988, -8.48025395,\n-5.25447483, 4.12447000, -6.08836534,\n-6.17749042, 1.86490752, -4.56622659,\n-6.21995945, 3.15392131, -2.41110064,\n-5.25447483, 4.12447000, -6.08836534,\n-5.52793903, -4.9222892e-2, -6.31580606,\n-6.17749042, 1.86490752, -4.56622659,\n-5.25447483, 4.12447000, -6.08836534,\n-3.57046146, 1.54556986, -8.36202365,\n-5.52793903, -4.9222892e-2, -6.31580606,\n9.3839668e-3, 8.11064103, -6.07061919,\n3.04574185, 6.50299035, -7.83800360,\n-3.02697391, 6.50299035, -7.83800360,\n-6.17749042, 1.86490752, -4.56622659,\n-5.52793903, -4.9222892e-2, -6.31580606,\n-5.73400898, 0.63273769, -3.61922374,\n-5.52793903, -4.9222892e-2, -6.31580606,\n-3.51747532, -2.33069543, -5.22558332,\n-5.73400898, 0.63273769, -3.61922374,\n-3.57046146, 1.54556986, -8.36202365,\n-3.28122730, -1.27072118, -8.83344328,\n-5.52793903, -4.9222892e-2, -6.31580606,\n-3.57046146, 1.54556986, -8.36202365,\n1.0524561e-2, 0.16940271, -7.75353734,\n-3.28122730, -1.27072118, -8.83344328,\n1.0516932e-2, 3.86536988, -8.48025395,\n1.0524561e-2, 0.16940271, -7.75353734,\n-3.57046146, 1.54556986, -8.36202365,\n-3.28122730, -1.27072118, -8.83344328,\n-3.51747532, -2.33069543, -5.22558332,\n-5.52793903, -4.9222892e-2, -6.31580606,\n-3.28122730, -1.27072118, -8.83344328,\n-4.36404438, -3.12288176, -7.47160364,\n-3.51747532, -2.33069543, -5.22558332,\n-3.28122730, -1.27072118, -8.83344328,\n-4.65541477, -3.63201213, -10.04345072,\n-4.36404438, -3.12288176, -7.47160364,\n-3.28122730, -1.27072118, -8.83344328,\n1.0524561e-2, 0.16940271, -7.75353734,\n1.0524561e-2, -2.89929107, -6.55542295,\n-3.51747532, -2.33069543, -5.22558332,\n-4.48767109, -3.68390401, -2.30053296,\n-5.05556888, -1.88468887, -1.98332341,\n-4.36404438, -3.12288176, -7.47160364,\n1.0524561e-2, -2.89929107, -6.55542295,\n-3.51747532, -2.33069543, -5.22558332,\n-4.36404438, -3.12288176, -7.47160364,\n-4.65541477, -3.63201213, -10.04345072,\n1.0524561e-2, -2.89929107, -6.55542295,\n-0.62176914, -6.96930954, 1.99071486,\n0.64053326, -6.96930954, 1.99071486,\n-0.75203342, -7.31512648, 4.01405630,\n1.0524561e-2, -2.89929107, -6.55542295,\n-4.65541477, -3.63201213, -10.04345072,\n-3.28122730, -1.27072118, -8.83344328,\n4.35504894, 0.30028285, 3.65909524,\n3.00983029, -1.54440269, 5.00398198,\n3.54034786, -2.53822189, 4.25702375,\n4.35504894, 0.30028285, 3.65909524,\n3.52519589, 0.55193538, 5.04555276,\n3.00983029, -1.54440269, 5.00398198,\n4.35504894, 0.30028285, 3.65909524,\n4.64793759, 1.25883622, 3.54182669,\n3.52519589, 0.55193538, 5.04555276,\n3.54034786, -2.53822189, 4.25702375,\n4.79610043, -2.57349567, 2.38198674,\n4.35504894, 0.30028285, 3.65909524,\n3.54034786, -2.53822189, 4.25702375,\n4.45411282, -3.71830147, 2.91800034,\n4.79610043, -2.57349567, 2.38198674,\n3.54034786, -2.53822189, 4.25702375,\n2.90974789, -3.28565859, 5.03594699,\n3.23052578, -4.27788433, 4.50388815,\n3.54034786, -2.53822189, 4.25702375,\n1.84455853, -2.66396744, 5.43207067,\n2.90974789, -3.28565859, 5.03594699,\n4.79610043, -2.57349567, 2.38198674,\n5.10899334, 0.46642608, 1.91582271,\n4.35504894, 0.30028285, 3.65909524,\n4.79610043, -2.57349567, 2.38198674,\n4.45411282, -3.71830147, 2.91800034,\n4.26114636, -4.28676290, 1.55180815,\n4.79610043, -2.57349567, 2.38198674,\n5.15062313, -0.58584472, 0.25635381,\n5.10899334, 0.46642608, 1.91582271,\n0.93799191, 5.1486574e-2, 5.80569119,\n0.88917904, -0.53831865, 6.31695632,\n1.32699948, -1.69101600, 5.19558185,\n0.93799191, 5.1486574e-2, 5.80569119,\n0.81596356, 0.66678334, 5.71280038,\n0.22815685, 0.93610700, 6.55821877,\n1.32699948, -1.69101600, 5.19558185,\n2.78195172, 0.44706926, 5.36636101,\n0.93799191, 5.1486574e-2, 5.80569119,\n1.32699948, -1.69101600, 5.19558185,\n3.00983029, -1.54440269, 5.00398198,\n2.78195172, 0.44706926, 5.36636101,\n1.32699948, -1.69101600, 5.19558185,\n1.84455853, -2.66396744, 5.43207067,\n3.00983029, -1.54440269, 5.00398198,\n1.32699948, -1.69101600, 5.19558185,\n1.50192242, -1.67957290, 6.22618621,\n1.33920269, -2.06694341, 6.11403260,\n2.78195172, 0.44706926, 5.36636101,\n0.81596356, 0.66678334, 5.71280038,\n0.93799191, 5.1486574e-2, 5.80569119,\n2.78195172, 0.44706926, 5.36636101,\n1.41306668, 1.08346056, 5.17266512,\n0.81596356, 0.66678334, 5.71280038,\n2.78195172, 0.44706926, 5.36636101,\n2.01429348, 1.05859415, 5.18166669,\n1.41306668, 1.08346056, 5.17266512,\n4.02226238, -4.62255948, 3.07858152,\n3.23052578, -4.27788433, 4.50388815,\n2.93495541, -4.96385889, 4.34518206,\n4.02226238, -4.62255948, 3.07858152,\n4.45411282, -3.71830147, 2.91800034,\n3.23052578, -4.27788433, 4.50388815,\n2.93495541, -4.96385889, 4.34518206,\n2.05546170, -6.71502678, 4.49679476,\n4.02226238, -4.62255948, 3.07858152,\n2.93495541, -4.96385889, 4.34518206,\n1.83527737, -5.64586620, 5.26413372,\n2.05546170, -6.71502678, 4.49679476,\n2.93495541, -4.96385889, 4.34518206,\n1.23088818, -5.02162334, 5.39606852,\n1.83527737, -5.64586620, 5.26413372,\n2.93495541, -4.96385889, 4.34518206,\n2.13396816, -4.39019348, 5.17342316,\n1.23088818, -5.02162334, 5.39606852,\n2.05546170, -6.71502678, 4.49679476,\n1.07496243, -6.59458312, 5.55495413,\n0.60912686, -7.17155298, 5.19981216,\n2.05546170, -6.71502678, 4.49679476,\n2.43152981, -6.02263476, 1.34825288,\n4.02226238, -4.62255948, 3.07858152,\n2.05546170, -6.71502678, 4.49679476,\n1.38539486, -7.06850747, 3.08911380,\n2.43152981, -6.02263476, 1.34825288,\n1.25529461, 2.31301201, 6.54874512,\n2.74415570, 2.90984206, 5.81731199,\n1.18004971, 3.49385849, 6.38150634,\n1.25529461, 2.31301201, 6.54874512,\n3.20789700, 2.59722673, 4.68475835,\n2.74415570, 2.90984206, 5.81731199,\n0.88917904, -0.53831865, 6.31695632,\n1.50192242, -1.67957290, 6.22618621,\n1.32699948, -1.69101600, 5.19558185,\n1.83527737, -5.64586620, 5.26413372,\n1.07496243, -6.59458312, 5.55495413,\n2.05546170, -6.71502678, 4.49679476,\n1.83527737, -5.64586620, 5.26413372,\n1.23088818, -5.02162334, 5.39606852,\n0.91539746, -5.70292042, 5.88735079,\n2.43152981, -6.02263476, 1.34825288,\n4.26114636, -4.28676290, 1.55180815,\n4.02226238, -4.62255948, 3.07858152,\n3.30737667, -4.75891349, -0.50693407,\n4.26114636, -4.28676290, 1.55180815,\n2.43152981, -6.02263476, 1.34825288,\n3.30737667, -4.75891349, -0.50693407,\n4.89934902, -2.09152036, 0.30170847,\n4.26114636, -4.28676290, 1.55180815,\n3.30737667, -4.75891349, -0.50693407,\n4.35524731, -2.64957601, -1.38126468,\n4.89934902, -2.09152036, 0.30170847,\n3.30737667, -4.75891349, -0.50693407,\n4.50643902, -3.68390401, -2.30053296,\n4.35524731, -2.64957601, -1.38126468,\n4.26114636, -4.28676290, 1.55180815,\n4.45411282, -3.71830147, 2.91800034,\n4.02226238, -4.62255948, 3.07858152,\n4.26114636, -4.28676290, 1.55180815,\n4.89934902, -2.09152036, 0.30170847,\n4.79610043, -2.57349567, 2.38198674,\n0.79155331, 1.98811307, 6.06547553,\n1.62377529, 2.01134470, 5.18629417,\n1.25529461, 2.31301201, 6.54874512,\n0.79155331, 1.98811307, 6.06547553,\n0.37662869, 1.19720797, 5.94846938,\n1.62377529, 2.01134470, 5.18629417,\n1.62377529, 2.01134470, 5.18629417,\n3.20789700, 2.59722673, 4.68475835,\n1.25529461, 2.31301201, 6.54874512,\n1.62377529, 2.01134470, 5.18629417,\n2.81737881, 2.02801342, 5.25836199,\n3.20789700, 2.59722673, 4.68475835,\n5.10899334, 0.46642608, 1.91582271,\n4.64793759, 1.25883622, 3.54182669,\n4.35504894, 0.30028285, 3.65909524,\n5.10899334, 0.46642608, 1.91582271,\n5.18222027, 2.74943405, 2.20776777,\n4.49903851, 2.07649315, 3.76401418,\n5.10899334, 0.46642608, 1.91582271,\n5.46744519, 3.17349375, 0.73430489,\n5.18222027, 2.74943405, 2.20776777,\n5.10899334, 0.46642608, 1.91582271,\n5.55038052, 1.48580954, 0.36221512,\n5.46744519, 3.17349375, 0.73430489,\n5.10899334, 0.46642608, 1.91582271,\n5.15062313, -0.58584472, 0.25635381,\n5.55038052, 1.48580954, 0.36221512,\n3.00983029, -1.54440269, 5.00398198,\n3.52519589, 0.55193538, 5.04555276,\n2.78195172, 0.44706926, 5.36636101,\n3.00983029, -1.54440269, 5.00398198,\n1.84455853, -2.66396744, 5.43207067,\n3.54034786, -2.53822189, 4.25702375,\n0.57188778, -3.23338409, 6.32089205,\n0.47425823, -2.90917801, 6.18326529,\n9.3839668e-3, -3.48349178, 6.29514563,\n0.57188778, -3.23338409, 6.32089205,\n2.01192074, -3.55702680, 5.64003666,\n0.47425823, -2.90917801, 6.18326529,\n0.57188778, -3.23338409, 6.32089205,\n1.54818707, -3.80810596, 5.85467023,\n2.01192074, -3.55702680, 5.64003666,\n2.74415570, 2.90984206, 5.81731199,\n2.40244656, 4.22089296, 5.48170809,\n1.18004971, 3.49385849, 6.38150634,\n2.74415570, 2.90984206, 5.81731199,\n3.41908245, 4.89063323, 4.49545614,\n2.40244656, 4.22089296, 5.48170809,\n3.20789700, 2.59722673, 4.68475835,\n4.70488720, 2.72371162, 3.63192463,\n2.74415570, 2.90984206, 5.81731199,\n3.20789700, 2.59722673, 4.68475835,\n3.51908856, 1.97198957, 4.95950538,\n4.70488720, 2.72371162, 3.63192463,\n3.20789700, 2.59722673, 4.68475835,\n2.81737881, 2.02801342, 5.25836199,\n3.51908856, 1.97198957, 4.95950538,\n4.70488720, 2.72371162, 3.63192463,\n4.33063870, 3.21775684, 4.65321140,\n2.74415570, 2.90984206, 5.81731199,\n4.70488720, 2.72371162, 3.63192463,\n4.90618115, 4.24157235, 3.31728873,\n4.33063870, 3.21775684, 4.65321140,\n4.70488720, 2.72371162, 3.63192463,\n5.18222027, 2.74943405, 2.20776777,\n4.90618115, 4.24157235, 3.31728873,\n2.40244656, 4.22089296, 5.48170809,\n3.41908245, 4.89063323, 4.49545614,\n1.46059399, 5.28147027, 6.03826024,\n0.81596356, 0.66678334, 5.71280038,\n0.37662869, 1.19720797, 5.94846938,\n0.22815685, 0.93610700, 6.55821877,\n0.81596356, 0.66678334, 5.71280038,\n1.41306668, 1.08346056, 5.17266512,\n0.37662869, 1.19720797, 5.94846938,\n0.37662869, 1.19720797, 5.94846938,\n1.41306668, 1.08346056, 5.17266512,\n1.62377529, 2.01134470, 5.18629417,\n1.41306668, 1.08346056, 5.17266512,\n1.85012799, 1.75331020, 5.30387620,\n1.62377529, 2.01134470, 5.18629417,\n1.41306668, 1.08346056, 5.17266512,\n2.01429348, 1.05859415, 5.18166669,\n1.57738857, 1.20559670, 4.90359224,\n3.51908856, 1.97198957, 4.95950538,\n4.49903851, 2.07649315, 3.76401418,\n4.70488720, 2.72371162, 3.63192463,\n3.51908856, 1.97198957, 4.95950538,\n3.55331021, 1.76018751, 4.55235748,\n4.06205731, 1.38976939, 4.32019436,\n4.06205731, 1.38976939, 4.32019436,\n4.49903851, 2.07649315, 3.76401418,\n3.51908856, 1.97198957, 4.95950538,\n4.06205731, 1.38976939, 4.32019436,\n4.64793759, 1.25883622, 3.54182669,\n4.49903851, 2.07649315, 3.76401418,\n4.06205731, 1.38976939, 4.32019436,\n3.07907467, 0.86287318, 5.16803205,\n3.52519589, 0.55193538, 5.04555276,\n4.06205731, 1.38976939, 4.32019436,\n3.23424893, 1.12285868, 4.84781609,\n3.07907467, 0.86287318, 5.16803205,\n4.06205731, 1.38976939, 4.32019436,\n3.55331021, 1.76018751, 4.55235748,\n3.09695416, 1.86898957, 4.95952863,\n4.06205731, 1.38976939, 4.32019436,\n3.20671826, 1.44845368, 5.02340724,\n3.23424893, 1.12285868, 4.84781609,\n4.49903851, 2.07649315, 3.76401418,\n4.64793759, 1.25883622, 3.54182669,\n5.10899334, 0.46642608, 1.91582271,\n4.49903851, 2.07649315, 3.76401418,\n5.18222027, 2.74943405, 2.20776777,\n4.70488720, 2.72371162, 3.63192463,\n2.47150784, 1.81694946, 5.09033880,\n1.85012799, 1.75331020, 5.30387620,\n1.57738857, 1.20559670, 4.90359224,\n2.47150784, 1.81694946, 5.09033880,\n2.81737881, 2.02801342, 5.25836199,\n1.85012799, 1.75331020, 5.30387620,\n2.47150784, 1.81694946, 5.09033880,\n3.09695416, 1.86898957, 4.95952863,\n2.81737881, 2.02801342, 5.25836199,\n1.57738857, 1.20559670, 4.90359224,\n2.04437237, 1.18455253, 5.02475889,\n2.47150784, 1.81694946, 5.09033880,\n1.57738857, 1.20559670, 4.90359224,\n1.85012799, 1.75331020, 5.30387620,\n1.41306668, 1.08346056, 5.17266512,\n1.57738857, 1.20559670, 4.90359224,\n2.01429348, 1.05859415, 5.18166669,\n2.04437237, 1.18455253, 5.02475889,\n2.04437237, 1.18455253, 5.02475889,\n2.73140316, 1.45346191, 5.13937906,\n2.47150784, 1.81694946, 5.09033880,\n2.04437237, 1.18455253, 5.02475889,\n3.23424893, 1.12285868, 4.84781609,\n2.73140316, 1.45346191, 5.13937906,\n2.04437237, 1.18455253, 5.02475889,\n2.01429348, 1.05859415, 5.18166669,\n3.23424893, 1.12285868, 4.84781609,\n0.61041241, -1.93814481, 7.15015297,\n0.69583874, -1.54700918, 7.18096889,\n0.20119839, -1.93742517, 7.36102563,\n0.61041241, -1.93814481, 7.15015297,\n1.50192242, -1.67957290, 6.22618621,\n0.69583874, -1.54700918, 7.18096889,\n0.54747753, -2.12102948, 6.27241797,\n1.33920269, -2.06694341, 6.11403260,\n0.61041241, -1.93814481, 7.15015297,\n0.54747753, -2.12102948, 6.27241797,\n0.98681622, -2.09270625, 5.42081552,\n1.33920269, -2.06694341, 6.11403260,\n0.54747753, -2.12102948, 6.27241797,\n0.47425823, -2.90917801, 6.18326529,\n0.98681622, -2.09270625, 5.42081552,\n1.33920269, -2.06694341, 6.11403260,\n0.98681622, -2.09270625, 5.42081552,\n1.32699948, -1.69101600, 5.19558185,\n1.33920269, -2.06694341, 6.11403260,\n1.50192242, -1.67957290, 6.22618621,\n0.61041241, -1.93814481, 7.15015297,\n0.98681622, -2.09270625, 5.42081552,\n1.84455853, -2.66396744, 5.43207067,\n1.32699948, -1.69101600, 5.19558185,\n0.47425823, -2.90917801, 6.18326529,\n2.01192074, -3.55702680, 5.64003666,\n0.98681622, -2.09270625, 5.42081552,\n2.01192074, -3.55702680, 5.64003666,\n1.54818707, -3.80810596, 5.85467023,\n1.98751812, -4.09765414, 4.99535213,\n2.01192074, -3.55702680, 5.64003666,\n1.84455853, -2.66396744, 5.43207067,\n0.98681622, -2.09270625, 5.42081552,\n2.01192074, -3.55702680, 5.64003666,\n2.47218685, -4.24799890, 4.92711366,\n2.90974789, -3.28565859, 5.03594699,\n0.69392376, -3.87820263, 5.80867296,\n1.54818707, -3.80810596, 5.85467023,\n0.83744793, -3.64246924, 6.18835567,\n1.62140637, -4.31153917, 5.72404311,\n1.98751812, -4.09765414, 4.99535213,\n0.69392376, -3.87820263, 5.80867296,\n1.62140637, -4.31153917, 5.72404311,\n2.13396816, -4.39019348, 5.17342316,\n1.98751812, -4.09765414, 4.99535213,\n1.98751812, -4.09765414, 4.99535213,\n1.54818707, -3.80810596, 5.85467023,\n0.69392376, -3.87820263, 5.80867296,\n1.98751812, -4.09765414, 4.99535213,\n2.47218685, -4.24799890, 4.92711366,\n2.01192074, -3.55702680, 5.64003666,\n3.23052578, -4.27788433, 4.50388815,\n4.45411282, -3.71830147, 2.91800034,\n3.54034786, -2.53822189, 4.25702375,\n3.23052578, -4.27788433, 4.50388815,\n2.13396816, -4.39019348, 5.17342316,\n2.93495541, -4.96385889, 4.34518206,\n3.23052578, -4.27788433, 4.50388815,\n2.47218685, -4.24799890, 4.92711366,\n2.13396816, -4.39019348, 5.17342316,\n4.33063870, 3.21775684, 4.65321140,\n3.41908245, 4.89063323, 4.49545614,\n2.74415570, 2.90984206, 5.81731199,\n1.23088818, -5.02162334, 5.39606852,\n2.13396816, -4.39019348, 5.17342316,\n0.52104931, -4.74706678, 5.84781202,\n2.13396816, -4.39019348, 5.17342316,\n2.47218685, -4.24799890, 4.92711366,\n1.98751812, -4.09765414, 4.99535213,\n1.85012799, 1.75331020, 5.30387620,\n2.81737881, 2.02801342, 5.25836199,\n1.62377529, 2.01134470, 5.18629417,\n2.81737881, 2.02801342, 5.25836199,\n3.09695416, 1.86898957, 4.95952863,\n3.51908856, 1.97198957, 4.95950538,\n3.52519589, 0.55193538, 5.04555276,\n4.64793759, 1.25883622, 3.54182669,\n4.06205731, 1.38976939, 4.32019436,\n3.52519589, 0.55193538, 5.04555276,\n3.07907467, 0.86287318, 5.16803205,\n2.78195172, 0.44706926, 5.36636101,\n3.07907467, 0.86287318, 5.16803205,\n2.01429348, 1.05859415, 5.18166669,\n2.78195172, 0.44706926, 5.36636101,\n4.90618115, 4.24157235, 3.31728873,\n3.41908245, 4.89063323, 4.49545614,\n4.33063870, 3.21775684, 4.65321140,\n4.90618115, 4.24157235, 3.31728873,\n4.70688610, 5.47919760, 3.82381723,\n3.41908245, 4.89063323, 4.49545614,\n2.90974789, -3.28565859, 5.03594699,\n1.84455853, -2.66396744, 5.43207067,\n2.01192074, -3.55702680, 5.64003666,\n2.90974789, -3.28565859, 5.03594699,\n2.47218685, -4.24799890, 4.92711366,\n3.23052578, -4.27788433, 4.50388815,\n0.69583874, -1.54700918, 7.18096889,\n1.50192242, -1.67957290, 6.22618621,\n0.88917904, -0.53831865, 6.31695632,\n5.18222027, 2.74943405, 2.20776777,\n5.46744519, 3.17349375, 0.73430489,\n4.90618115, 4.24157235, 3.31728873,\n2.73140316, 1.45346191, 5.13937906,\n3.09695416, 1.86898957, 4.95952863,\n2.47150784, 1.81694946, 5.09033880,\n2.73140316, 1.45346191, 5.13937906,\n3.20671826, 1.44845368, 5.02340724,\n3.09695416, 1.86898957, 4.95952863,\n3.09695416, 1.86898957, 4.95952863,\n3.55331021, 1.76018751, 4.55235748,\n3.51908856, 1.97198957, 4.95950538,\n3.09695416, 1.86898957, 4.95952863,\n3.20671826, 1.44845368, 5.02340724,\n4.06205731, 1.38976939, 4.32019436,\n1.38539486, -7.06850747, 3.08911380,\n0.64053326, -6.96930954, 1.99071486,\n2.43152981, -6.02263476, 1.34825288,\n3.23424893, 1.12285868, 4.84781609,\n2.01429348, 1.05859415, 5.18166669,\n3.07907467, 0.86287318, 5.16803205,\n3.23424893, 1.12285868, 4.84781609,\n3.20671826, 1.44845368, 5.02340724,\n2.73140316, 1.45346191, 5.13937906,\n3.41908245, 4.89063323, 4.49545614,\n3.25294857, 6.09859583, 5.06994118,\n1.46059399, 5.28147027, 6.03826024,\n3.41908245, 4.89063323, 4.49545614,\n4.70688610, 5.47919760, 3.82381723,\n3.25294857, 6.09859583, 5.06994118,\n5.46744519, 3.17349375, 0.73430489,\n5.55038052, 1.48580954, 0.36221512,\n5.58306866, 1.47903965, -1.08897473,\n5.46744519, 3.17349375, 0.73430489,\n5.70172482, 4.56450469, 1.46492560,\n4.90618115, 4.24157235, 3.31728873,\n5.46744519, 3.17349375, 0.73430489,\n6.23872738, 3.15392131, -2.41110064,\n5.70172482, 4.56450469, 1.46492560,\n6.22258740, 2.62312354, -2.91209263,\n5.61845761, 2.11773287, -2.17585973,\n6.07585888, 2.38400454, -1.87322124,\n6.22258740, 2.62312354, -2.91209263,\n5.77525692, 2.26748979, -2.83910561,\n5.61845761, 2.11773287, -2.17585973,\n6.22258740, 2.62312354, -2.91209263,\n5.75294476, 2.03316244, -3.28121578,\n5.77525692, 2.26748979, -2.83910561,\n6.07585888, 2.38400454, -1.87322124,\n6.60341244, 2.33778820, -2.85863690,\n6.22258740, 2.62312354, -2.91209263,\n6.07585888, 2.38400454, -1.87322124,\n6.45668774, 2.11194384, -2.09845650,\n6.60341244, 2.33778820, -2.85863690,\n6.07585888, 2.38400454, -1.87322124,\n5.58306866, 1.47903965, -1.08897473,\n6.45668774, 2.11194384, -2.09845650,\n6.07585888, 2.38400454, -1.87322124,\n5.61845761, 2.11773287, -2.17585973,\n5.58306866, 1.47903965, -1.08897473,\n6.60341244, 2.33778820, -2.85863690,\n6.79548626, 1.91114085, -3.42641680,\n6.22258740, 2.62312354, -2.91209263,\n6.60341244, 2.33778820, -2.85863690,\n6.27639370, 0.87015003, -2.92158520,\n6.79548626, 1.91114085, -3.42641680,\n6.45668774, 2.11194384, -2.09845650,\n6.02568798, 1.22392216, -2.40994639,\n6.60341244, 2.33778820, -2.85863690,\n6.79548626, 1.91114085, -3.42641680,\n6.39140682, 2.07215796, -3.64221188,\n6.22258740, 2.62312354, -2.91209263,\n6.79548626, 1.91114085, -3.42641680,\n6.37805157, 0.46748784, -3.96440511,\n6.39140682, 2.07215796, -3.64221188,\n6.79548626, 1.91114085, -3.42641680,\n6.80926495, 0.45007583, -3.52948986,\n6.37805157, 0.46748784, -3.96440511,\n6.79548626, 1.91114085, -3.42641680,\n6.27639370, 0.87015003, -2.92158520,\n6.80926495, 0.45007583, -3.52948986,\n6.39140682, 2.07215796, -3.64221188,\n5.75294476, 2.03316244, -3.28121578,\n6.22258740, 2.62312354, -2.91209263,\n6.39140682, 2.07215796, -3.64221188,\n5.75277691, 0.63273769, -3.61922374,\n5.75294476, 2.03316244, -3.28121578,\n6.37805157, 0.46748784, -3.96440511,\n5.75277691, 0.63273769, -3.61922374,\n6.39140682, 2.07215796, -3.64221188,\n6.80926495, 0.45007583, -3.52948986,\n5.86821347, -1.31400314, -3.02130483,\n6.37805157, 0.46748784, -3.96440511,\n6.80926495, 0.45007583, -3.52948986,\n6.11072903, -0.60087821, -2.59258684,\n6.34011822, -1.09661860, -2.66459818,\n6.34011822, -1.09661860, -2.66459818,\n5.86821347, -1.31400314, -3.02130483,\n6.80926495, 0.45007583, -3.52948986,\n6.34011822, -1.09661860, -2.66459818,\n6.11072903, -0.60087821, -2.59258684,\n6.17788677, -1.40763479, -1.96434267,\n6.17788677, -1.40763479, -1.96434267,\n5.61489468, -2.15744941, -2.00003736,\n6.34011822, -1.09661860, -2.66459818,\n6.17788677, -1.40763479, -1.96434267,\n5.13501339, -1.57727076, -1.13870185,\n5.61489468, -2.15744941, -2.00003736,\n6.17788677, -1.40763479, -1.96434267,\n5.69883709, -0.81365687, -1.29388351,\n5.13501339, -1.57727076, -1.13870185,\n6.17788677, -1.40763479, -1.96434267,\n6.11072903, -0.60087821, -2.59258684,\n5.69883709, -0.81365687, -1.29388351,\n5.61489468, -2.15744941, -2.00003736,\n5.86821347, -1.31400314, -3.02130483,\n6.34011822, -1.09661860, -2.66459818,\n5.61489468, -2.15744941, -2.00003736,\n5.07433682, -1.88468887, -1.98332341,\n5.86821347, -1.31400314, -3.02130483,\n5.61489468, -2.15744941, -2.00003736,\n4.87351589, -1.76779488, -1.31982605,\n5.07433682, -1.88468887, -1.98332341,\n5.86821347, -1.31400314, -3.02130483,\n5.75277691, 0.63273769, -3.61922374,\n6.37805157, 0.46748784, -3.96440511,\n5.86821347, -1.31400314, -3.02130483,\n5.41368847, -1.07456012, -2.79070609,\n5.75277691, 0.63273769, -3.61922374,\n5.86821347, -1.31400314, -3.02130483,\n5.07433682, -1.88468887, -1.98332341,\n5.41368847, -1.07456012, -2.79070609,\n5.13501339, -1.57727076, -1.13870185,\n4.87351589, -1.76779488, -1.31982605,\n5.61489468, -2.15744941, -2.00003736,\n5.13501339, -1.57727076, -1.13870185,\n4.89934902, -2.09152036, 0.30170847,\n4.87351589, -1.76779488, -1.31982605,\n5.13501339, -1.57727076, -1.13870185,\n5.42460232, -1.59566137, 7.1192451e-2,\n4.89934902, -2.09152036, 0.30170847,\n5.69883709, -0.81365687, -1.29388351,\n5.42280178, 0.70289360, -1.33888087,\n5.13501339, -1.57727076, -1.13870185,\n5.69883709, -0.81365687, -1.29388351,\n5.76257687, 0.47268113, -1.79129746,\n5.42280178, 0.70289360, -1.33888087,\n5.69883709, -0.81365687, -1.29388351,\n5.41617947, -0.46941089, -1.68930042,\n5.76257687, 0.47268113, -1.79129746,\n5.58306866, 1.47903965, -1.08897473,\n5.97524624, 1.28318174, -1.56117866,\n6.45668774, 2.11194384, -2.09845650,\n5.58306866, 1.47903965, -1.08897473,\n5.42280178, 0.70289360, -1.33888087,\n5.97524624, 1.28318174, -1.56117866,\n5.58306866, 1.47903965, -1.08897473,\n5.61845761, 2.11773287, -2.17585973,\n5.46744519, 3.17349375, 0.73430489,\n5.58306866, 1.47903965, -1.08897473,\n5.49869519, 0.40042847, -0.20036988,\n5.42280178, 0.70289360, -1.33888087,\n5.58306866, 1.47903965, -1.08897473,\n5.55038052, 1.48580954, 0.36221512,\n5.49869519, 0.40042847, -0.20036988,\n5.97524624, 1.28318174, -1.56117866,\n6.02568798, 1.22392216, -2.40994639,\n6.45668774, 2.11194384, -2.09845650,\n5.97524624, 1.28318174, -1.56117866,\n5.67476254, 1.00950767, -1.91577782,\n6.02568798, 1.22392216, -2.40994639,\n6.02568798, 1.22392216, -2.40994639,\n6.27639370, 0.87015003, -2.92158520,\n6.60341244, 2.33778820, -2.85863690,\n6.02568798, 1.22392216, -2.40994639,\n5.74020367, 0.62655324, -2.28515543,\n6.27639370, 0.87015003, -2.92158520,\n6.27639370, 0.87015003, -2.92158520,\n6.11072903, -0.60087821, -2.59258684,\n6.80926495, 0.45007583, -3.52948986,\n6.27639370, 0.87015003, -2.92158520,\n5.74020367, 0.62655324, -2.28515543,\n6.11072903, -0.60087821, -2.59258684,\n6.11072903, -0.60087821, -2.59258684,\n5.41617947, -0.46941089, -1.68930042,\n5.69883709, -0.81365687, -1.29388351,\n6.11072903, -0.60087821, -2.59258684,\n5.57182293, 4.5003902e-2, -2.04149872,\n5.41617947, -0.46941089, -1.68930042,\n6.11072903, -0.60087821, -2.59258684,\n5.74020367, 0.62655324, -2.28515543,\n5.57182293, 4.5003902e-2, -2.04149872,\n5.42280178, 0.70289360, -1.33888087,\n5.76257687, 0.47268113, -1.79129746,\n5.97524624, 1.28318174, -1.56117866,\n5.42280178, 0.70289360, -1.33888087,\n5.42460232, -1.59566137, 7.1192451e-2,\n5.13501339, -1.57727076, -1.13870185,\n5.42280178, 0.70289360, -1.33888087,\n5.49869519, 0.40042847, -0.20036988,\n5.42460232, -1.59566137, 7.1192451e-2,\n5.76257687, 0.47268113, -1.79129746,\n5.67476254, 1.00950767, -1.91577782,\n5.97524624, 1.28318174, -1.56117866,\n5.76257687, 0.47268113, -1.79129746,\n5.74020367, 0.62655324, -2.28515543,\n5.67476254, 1.00950767, -1.91577782,\n5.41617947, -0.46941089, -1.68930042,\n5.57182293, 4.5003902e-2, -2.04149872,\n5.76257687, 0.47268113, -1.79129746,\n5.57182293, 4.5003902e-2, -2.04149872,\n5.74020367, 0.62655324, -2.28515543,\n5.76257687, 0.47268113, -1.79129746,\n5.67476254, 1.00950767, -1.91577782,\n5.74020367, 0.62655324, -2.28515543,\n6.02568798, 1.22392216, -2.40994639,\n5.61845761, 2.11773287, -2.17585973,\n6.23872738, 3.15392131, -2.41110064,\n5.46744519, 3.17349375, 0.73430489,\n5.77525692, 2.26748979, -2.83910561,\n6.23872738, 3.15392131, -2.41110064,\n5.61845761, 2.11773287, -2.17585973,\n5.75294476, 2.03316244, -3.28121578,\n6.23872738, 3.15392131, -2.41110064,\n5.77525692, 2.26748979, -2.83910561,\n5.75294476, 2.03316244, -3.28121578,\n6.19625836, 1.86490752, -4.56622659,\n6.23872738, 3.15392131, -2.41110064,\n5.75277691, 0.63273769, -3.61922374,\n6.19625836, 1.86490752, -4.56622659,\n5.75294476, 2.03316244, -3.28121578,\n5.75277691, 0.63273769, -3.61922374,\n5.54670315, -4.9222892e-2, -6.31580606,\n6.19625836, 1.86490752, -4.56622659,\n5.75277691, 0.63273769, -3.61922374,\n3.53624706, -2.33069543, -5.22558332,\n5.54670315, -4.9222892e-2, -6.31580606,\n5.41368847, -1.07456012, -2.79070609,\n3.53624706, -2.33069543, -5.22558332,\n5.75277691, 0.63273769, -3.61922374,\n5.07433682, -1.88468887, -1.98332341,\n3.53624706, -2.33069543, -5.22558332,\n5.41368847, -1.07456012, -2.79070609,\n5.07433682, -1.88468887, -1.98332341,\n4.50643902, -3.68390401, -2.30053296,\n3.53624706, -2.33069543, -5.22558332,\n4.87351589, -1.76779488, -1.31982605,\n4.35524731, -2.64957601, -1.38126468,\n5.07433682, -1.88468887, -1.98332341,\n4.89934902, -2.09152036, 0.30170847,\n5.15062313, -0.58584472, 0.25635381,\n4.79610043, -2.57349567, 2.38198674,\n4.89934902, -2.09152036, 0.30170847,\n4.35524731, -2.64957601, -1.38126468,\n4.87351589, -1.76779488, -1.31982605,\n5.42460232, -1.59566137, 7.1192451e-2,\n5.15062313, -0.58584472, 0.25635381,\n4.89934902, -2.09152036, 0.30170847,\n5.49869519, 0.40042847, -0.20036988,\n5.15062313, -0.58584472, 0.25635381,\n5.42460232, -1.59566137, 7.1192451e-2,\n5.55038052, 1.48580954, 0.36221512,\n5.15062313, -0.58584472, 0.25635381,\n5.49869519, 0.40042847, -0.20036988,\n4.35524731, -2.64957601, -1.38126468,\n4.50643902, -3.68390401, -2.30053296,\n5.07433682, -1.88468887, -1.98332341,\n5.70172482, 4.56450469, 1.46492560,\n4.70688610, 5.47919760, 3.82381723,\n4.90618115, 4.24157235, 3.31728873,\n5.70172482, 4.56450469, 1.46492560,\n5.27324276, 6.94691330, 2.26293645,\n4.70688610, 5.47919760, 3.82381723,\n3.25294857, 6.09859583, 5.06994118,\n1.48792248, 8.52717874, 4.44497692,\n9.3839668e-3, 6.47051256, 6.14674558,\n3.25294857, 6.09859583, 5.06994118,\n3.72074871, 7.56499111, 3.47494528,\n1.48792248, 8.52717874, 4.44497692,\n4.70688610, 5.47919760, 3.82381723,\n3.72074871, 7.56499111, 3.47494528,\n3.25294857, 6.09859583, 5.06994118,\n6.23872738, 3.15392131, -2.41110064,\n6.01575451, 6.37535075, -1.34582338,\n5.70172482, 4.56450469, 1.46492560,\n6.23872738, 3.15392131, -2.41110064,\n5.27324276, 4.12447000, -6.08836534,\n6.01575451, 6.37535075, -1.34582338,\n6.23872738, 3.15392131, -2.41110064,\n6.19625836, 1.86490752, -4.56622659,\n5.27324276, 4.12447000, -6.08836534,\n1.48792248, 8.52717874, 4.44497692,\n3.21373348, 9.53616373, 0.55267717,\n9.3839668e-3, 10.03831167, 1.24130272,\n1.48792248, 8.52717874, 4.44497692,\n3.72074871, 7.56499111, 3.47494528,\n3.21373348, 9.53616373, 0.55267717,\n3.21373348, 9.53616373, 0.55267717,\n5.07074719, 8.17978610, -0.21249148,\n5.47575741, 7.56328390, -3.82339065,\n3.21373348, 9.53616373, 0.55267717,\n5.27324276, 6.94691330, 2.26293645,\n5.07074719, 8.17978610, -0.21249148,\n3.21373348, 9.53616373, 0.55267717,\n3.72074871, 7.56499111, 3.47494528,\n5.27324276, 6.94691330, 2.26293645,\n3.21373348, 9.53616373, 0.55267717,\n1.69573956, 9.64076487, -3.83711946,\n9.3839668e-3, 10.03831167, 1.24130272,\n6.01575451, 6.37535075, -1.34582338,\n5.27324276, 6.94691330, 2.26293645,\n5.70172482, 4.56450469, 1.46492560,\n6.01575451, 6.37535075, -1.34582338,\n5.27324276, 4.12447000, -6.08836534,\n5.47575741, 7.56328390, -3.82339065,\n5.47575741, 7.56328390, -3.82339065,\n5.07074719, 8.17978610, -0.21249148,\n6.01575451, 6.37535075, -1.34582338,\n5.47575741, 7.56328390, -3.82339065,\n1.69573956, 9.64076487, -3.83711946,\n3.21373348, 9.53616373, 0.55267717,\n5.47575741, 7.56328390, -3.82339065,\n3.04574185, 6.50299035, -7.83800360,\n1.69573956, 9.64076487, -3.83711946,\n5.47575741, 7.56328390, -3.82339065,\n5.27324276, 4.12447000, -6.08836534,\n3.04574185, 6.50299035, -7.83800360,\n5.07074719, 8.17978610, -0.21249148,\n5.27324276, 6.94691330, 2.26293645,\n6.01575451, 6.37535075, -1.34582338,\n5.27324276, 6.94691330, 2.26293645,\n3.72074871, 7.56499111, 3.47494528,\n4.70688610, 5.47919760, 3.82381723,\n1.69573956, 9.64076487, -3.83711946,\n3.04574185, 6.50299035, -7.83800360,\n9.3839668e-3, 8.11064103, -6.07061919,\n5.27324276, 4.12447000, -6.08836534,\n3.58922558, 1.54556986, -8.36202365,\n3.04574185, 6.50299035, -7.83800360,\n6.19625836, 1.86490752, -4.56622659,\n5.54670315, -4.9222892e-2, -6.31580606,\n5.27324276, 4.12447000, -6.08836534,\n5.54670315, -4.9222892e-2, -6.31580606,\n3.58922558, 1.54556986, -8.36202365,\n5.27324276, 4.12447000, -6.08836534,\n5.54670315, -4.9222892e-2, -6.31580606,\n3.29998379, -1.27072118, -8.83344328,\n3.58922558, 1.54556986, -8.36202365,\n5.54670315, -4.9222892e-2, -6.31580606,\n3.53624706, -2.33069543, -5.22558332,\n3.29998379, -1.27072118, -8.83344328,\n3.58922558, 1.54556986, -8.36202365,\n8.2510017e-3, 3.86536988, -8.48025395,\n3.04574185, 6.50299035, -7.83800360,\n3.58922558, 1.54556986, -8.36202365,\n8.2433723e-3, 0.16940271, -7.75353734,\n8.2510017e-3, 3.86536988, -8.48025395,\n3.29998379, -1.27072118, -8.83344328,\n4.67417889, -3.63201213, -10.04345072,\n8.2433723e-3, -2.89929107, -6.55542295,\n3.29998379, -1.27072118, -8.83344328,\n8.2433723e-3, 0.16940271, -7.75353734,\n3.58922558, 1.54556986, -8.36202365,\n3.53624706, -2.33069543, -5.22558332,\n4.38280850, -3.12288176, -7.47160364,\n3.29998379, -1.27072118, -8.83344328,\n3.53624706, -2.33069543, -5.22558332,\n8.2433723e-3, -2.89929107, -6.55542295,\n4.38280850, -3.12288176, -7.47160364,\n4.38280850, -3.12288176, -7.47160364,\n4.67417889, -3.63201213, -10.04345072,\n3.29998379, -1.27072118, -8.83344328,\n8.2433723e-3, -2.89929107, -6.55542295,\n4.67417889, -3.63201213, -10.04345072,\n4.38280850, -3.12288176, -7.47160364,\n8.2433723e-3, -2.89929107, -6.55542295,\n8.2433723e-3, 0.16940271, -7.75353734,\n3.29998379, -1.27072118, -8.83344328,\n],\nnormals: [\n-0.96165929, -0.14530741, 0.23258799,\n-0.90621754, -0.22216136, 0.35974172,\n-0.74851071, -3.1398285e-2, 0.66237894,\n-0.96165929, -0.14530741, 0.23258799,\n-0.87895109, -0.47689051, 4.5191036e-3,\n-0.86759978, -0.49001744, -8.4578586e-2,\n-0.96165929, -0.14530741, 0.23258799,\n-0.91568627, -0.11308729, 0.38565519,\n-0.87895109, -0.47689051, 4.5191036e-3,\n-0.74851071, -3.1398285e-2, 0.66237894,\n-0.84896130, -0.14557959, 0.50800718,\n-0.96165929, -0.14530741, 0.23258799,\n-0.74851071, -3.1398285e-2, 0.66237894,\n-0.49571176, -0.10488662, 0.86213030,\n-0.84896130, -0.14557959, 0.50800718,\n-0.74851071, -3.1398285e-2, 0.66237894,\n-0.34873248, 0.21680758, 0.91180049,\n-0.49571176, -0.10488662, 0.86213030,\n-0.84896130, -0.14557959, 0.50800718,\n-0.96400559, -7.2587302e-2, 0.25578174,\n-0.96165929, -0.14530741, 0.23258799,\n-0.84896130, -0.14557959, 0.50800718,\n-0.87814400, -6.3836483e-2, 0.47411815,\n-0.96400559, -7.2587302e-2, 0.25578174,\n-0.84896130, -0.14557959, 0.50800718,\n-0.65542922, 6.6729088e-3, 0.75522713,\n-0.87814400, -6.3836483e-2, 0.47411815,\n-0.21828117, 0.14979000, 0.96432167,\n-0.49571176, -0.10488662, 0.86213030,\n-0.76672221, -4.8510313e-2, 0.64014358,\n-0.21828117, 0.14979000, 0.96432167,\n-0.65542922, 6.6729088e-3, 0.75522713,\n-0.49571176, -0.10488662, 0.86213030,\n-0.21828117, 0.14979000, 0.96432167,\n-0.26619529, 0.49510359, 0.82705049,\n-0.65542922, 6.6729088e-3, 0.75522713,\n-0.21828117, 0.14979000, 0.96432167,\n-4.6439953e-2, 0.67351129, 0.73771666,\n-0.26619529, 0.49510359, 0.82705049,\n-0.76672221, -4.8510313e-2, 0.64014358,\n-0.72341848, 0.17069269, 0.66897661,\n-0.21828117, 0.14979000, 0.96432167,\n-0.76672221, -4.8510313e-2, 0.64014358,\n-0.87465692, 0.33567715, 0.34970862,\n-0.72341848, 0.17069269, 0.66897661,\n-0.76672221, -4.8510313e-2, 0.64014358,\n-0.63735468, -0.21539513, 0.73985401,\n-0.57289336, -0.81668933, 6.9366734e-2,\n-0.76672221, -4.8510313e-2, 0.64014358,\n-0.34873248, 0.21680758, 0.91180049,\n-0.63735468, -0.21539513, 0.73985401,\n-0.76672221, -4.8510313e-2, 0.64014358,\n-0.93700139, -4.2888420e-2, 0.34668283,\n-0.87465692, 0.33567715, 0.34970862,\n-0.72341848, 0.17069269, 0.66897661,\n-0.56940212, 0.37201342, 0.73306701,\n-0.21828117, 0.14979000, 0.96432167,\n-0.64865496, -0.68615855, 0.32929193,\n-0.62337790, -4.3205873e-2, 0.78072610,\n-0.64738889, -0.27848869, 0.70945872,\n-0.64865496, -0.68615855, 0.32929193,\n-0.21062552, -0.83583219, 0.50697282,\n-0.43145164, -0.45194503, 0.78076576,\n-0.64865496, -0.68615855, 0.32929193,\n-0.13339038, -0.99099767, -1.1429040e-2,\n-0.21062552, -0.83583219, 0.50697282,\n-0.64865496, -0.68615855, 0.32929193,\n-0.38765259, -0.91057036, -0.14348201,\n-0.13339038, -0.99099767, -1.1429040e-2,\n-0.64738889, -0.27848869, 0.70945872,\n-0.81339864, -0.51581994, 0.26890973,\n-0.64865496, -0.68615855, 0.32929193,\n-0.64738889, -0.27848869, 0.70945872,\n-0.68936272, -0.18623286, 0.70006883,\n-0.81339864, -0.51581994, 0.26890973,\n-0.64738889, -0.27848869, 0.70945872,\n-0.54211313, -7.1446982e-2, 0.83726261,\n-0.68936272, -0.18623286, 0.70006883,\n-0.64738889, -0.27848869, 0.70945872,\n-0.42498963, -5.6709303e-2, 0.90342010,\n-0.54211313, -7.1446982e-2, 0.83726261,\n-0.81339864, -0.51581994, 0.26890973,\n-0.61976413, -0.77196644, -0.14128070,\n-0.64865496, -0.68615855, 0.32929193,\n-0.81339864, -0.51581994, 0.26890973,\n-0.90621754, -0.22216136, 0.35974172,\n-0.86759978, -0.49001744, -8.4578586e-2,\n-0.81339864, -0.51581994, 0.26890973,\n-0.68936272, -0.18623286, 0.70006883,\n-0.90621754, -0.22216136, 0.35974172,\n-0.18525767, 0.17736123, 0.96655191,\n-0.55895982, -0.19726306, 0.80538885,\n-0.25956776, -0.59798202, 0.75831529,\n-0.18525767, 0.17736123, 0.96655191,\n-0.46174642, 0.20414334, 0.86320087,\n-0.55895982, -0.19726306, 0.80538885,\n-0.18525767, 0.17736123, 0.96655191,\n4.7247561e-5, 0.14452496, 0.98950115,\n-0.46174642, 0.20414334, 0.86320087,\n-0.25956776, -0.59798202, 0.75831529,\n5.0971062e-5, -7.0167664e-2, 0.99753521,\n-0.18525767, 0.17736123, 0.96655191,\n-0.25956776, -0.59798202, 0.75831529,\n-0.52026264, -0.17707227, 0.83544730,\n-0.30173061, -0.23793701, 0.92322512,\n-0.25956776, -0.59798202, 0.75831529,\n-0.55895982, -0.19726306, 0.80538885,\n-0.52026264, -0.17707227, 0.83544730,\n-0.25956776, -0.59798202, 0.75831529,\n-0.12629342, -0.31868853, 0.93940811,\n5.0971062e-5, -7.0167664e-2, 0.99753521,\n5.0971062e-5, -7.0167664e-2, 0.99753521,\n0.18495696, 0.17726974, 0.96662628,\n-0.18525767, 0.17736123, 0.96655191,\n5.0971062e-5, -7.0167664e-2, 0.99753521,\n-0.12629342, -0.31868853, 0.93940811,\n0.12603695, -0.31774285, 0.93976283,\n5.0971062e-5, -7.0167664e-2, 0.99753521,\n0.25931619, -0.59762937, 0.75867928,\n0.18495696, 0.17726974, 0.96662628,\n-0.87465692, 0.33567715, 0.34970862,\n-0.46662016, 0.37312653, 0.80189913,\n-0.72341848, 0.17069269, 0.66897661,\n-0.87465692, 0.33567715, 0.34970862,\n-0.68728655, 5.2129329e-2, 0.72451345,\n-0.46662016, 0.37312653, 0.80189913,\n-0.87465692, 0.33567715, 0.34970862,\n-0.93700139, -4.2888420e-2, 0.34668283,\n-0.68728655, 5.2129329e-2, 0.72451345,\n-0.46662016, 0.37312653, 0.80189913,\n-0.60386440, 0.44093411, 0.66402176,\n-0.72341848, 0.17069269, 0.66897661,\n-0.46662016, 0.37312653, 0.80189913,\n0.52276813, 0.44983316, 0.72412955,\n-0.60386440, 0.44093411, 0.66402176,\n-0.46662016, 0.37312653, 0.80189913,\n0.53982439, 0.35574788, 0.76291092,\n0.52276813, 0.44983316, 0.72412955,\n-0.46662016, 0.37312653, 0.80189913,\n1.0720955e-5, 0.36150178, 0.93237142,\n0.53982439, 0.35574788, 0.76291092,\n-0.43145164, -0.45194503, 0.78076576,\n-0.62337790, -4.3205873e-2, 0.78072610,\n-0.64865496, -0.68615855, 0.32929193,\n-0.43145164, -0.45194503, 0.78076576,\n-1.2103473e-5, -0.43597365, 0.89995943,\n-0.26154764, 0.11801676, 0.95794826,\n-0.43145164, -0.45194503, 0.78076576,\n-0.21062552, -0.83583219, 0.50697282,\n-1.2103473e-5, -0.43597365, 0.89995943,\n-0.26154764, 0.11801676, 0.95794826,\n-0.62337790, -4.3205873e-2, 0.78072610,\n-0.43145164, -0.45194503, 0.78076576,\n-0.26154764, 0.11801676, 0.95794826,\n-0.42498963, -5.6709303e-2, 0.90342010,\n-0.62337790, -4.3205873e-2, 0.78072610,\n-0.26154764, 0.11801676, 0.95794826,\n4.8730933e-5, -0.13129320, 0.99134358,\n-0.42498963, -5.6709303e-2, 0.90342010,\n-0.26154764, 0.11801676, 0.95794826,\n0.26118273, 0.11802798, 0.95804644,\n4.8730933e-5, -0.13129320, 0.99134358,\n-0.62337790, -4.3205873e-2, 0.78072610,\n-0.42498963, -5.6709303e-2, 0.90342010,\n-0.64738889, -0.27848869, 0.70945872,\n-0.86759978, -0.49001744, -8.4578586e-2,\n-0.61976413, -0.77196644, -0.14128070,\n-0.81339864, -0.51581994, 0.26890973,\n-0.86759978, -0.49001744, -8.4578586e-2,\n-0.90621754, -0.22216136, 0.35974172,\n-0.96165929, -0.14530741, 0.23258799,\n-0.86759978, -0.49001744, -8.4578586e-2,\n-0.87895109, -0.47689051, 4.5191036e-3,\n-0.86892796, -0.49333527, -3.9805981e-2,\n-0.86892796, -0.49333527, -3.9805981e-2,\n-0.61976413, -0.77196644, -0.14128070,\n-0.86759978, -0.49001744, -8.4578586e-2,\n-0.61976413, -0.77196644, -0.14128070,\n-0.38765259, -0.91057036, -0.14348201,\n-0.64865496, -0.68615855, 0.32929193,\n-0.61976413, -0.77196644, -0.14128070,\n-0.16217400, -0.96108610, -0.22363611,\n-0.38765259, -0.91057036, -0.14348201,\n-0.30173061, -0.23793701, 0.92322512,\n-0.40734179, -0.68654723, 0.60226702,\n-0.25956776, -0.59798202, 0.75831529,\n-0.30173061, -0.23793701, 0.92322512,\n-0.65957467, -4.6241541e-3, 0.75162482,\n-0.40734179, -0.68654723, 0.60226702,\n-0.30173061, -0.23793701, 0.92322512,\n-0.33987664, 0.25483586, 0.90528589,\n-0.65957467, -4.6241541e-3, 0.75162482,\n-0.30173061, -0.23793701, 0.92322512,\n-0.24115915, -0.42640671, 0.87179102,\n-0.33987664, 0.25483586, 0.90528589,\n-0.40734179, -0.68654723, 0.60226702,\n-0.12629342, -0.31868853, 0.93940811,\n-0.25956776, -0.59798202, 0.75831529,\n-0.96400559, -7.2587302e-2, 0.25578174,\n-0.87814400, -6.3836483e-2, 0.47411815,\n-0.88078897, -5.2216625e-2, 0.47062110,\n-0.96400559, -7.2587302e-2, 0.25578174,\n-0.91568627, -0.11308729, 0.38565519,\n-0.96165929, -0.14530741, 0.23258799,\n-0.23261550, -0.77365526, 0.58936200,\n-0.40220889, -0.81524448, 0.41665867,\n-0.12406071, -0.63369016, 0.76357431,\n-0.23261550, -0.77365526, 0.58936200,\n-0.49121810, -0.65231765, 0.57722306,\n-0.40220889, -0.81524448, 0.41665867,\n-0.23261550, -0.77365526, 0.58936200,\n-0.68728655, 5.2129329e-2, 0.72451345,\n-0.49121810, -0.65231765, 0.57722306,\n-0.23261550, -0.77365526, 0.58936200,\n-0.37916881, -0.11486196, 0.91817087,\n-0.68728655, 5.2129329e-2, 0.72451345,\n-0.23261550, -0.77365526, 0.58936200,\n0.29948075, -0.23669904, 0.92427531,\n-0.37916881, -0.11486196, 0.91817087,\n-0.23261550, -0.77365526, 0.58936200,\n0.30960366, -0.75166891, 0.58235678,\n0.29948075, -0.23669904, 0.92427531,\n-0.12406071, -0.63369016, 0.76357431,\n0.10167662, -0.70946266, 0.69736977,\n-0.23261550, -0.77365526, 0.58936200,\n-0.12406071, -0.63369016, 0.76357431,\n7.6311589e-5, -7.4892386e-2, 0.99719162,\n0.10167662, -0.70946266, 0.69736977,\n0.10167662, -0.70946266, 0.69736977,\n0.30960366, -0.75166891, 0.58235678,\n-0.23261550, -0.77365526, 0.58936200,\n0.10167662, -0.70946266, 0.69736977,\n0.40027018, -0.81580228, 0.41743315,\n0.30960366, -0.75166891, 0.58235678,\n0.10167662, -0.70946266, 0.69736977,\n0.22577111, 0.17863823, 0.95766163,\n0.40027018, -0.81580228, 0.41743315,\n-0.49571176, -0.10488662, 0.86213030,\n-0.65542922, 6.6729088e-3, 0.75522713,\n-0.84896130, -0.14557959, 0.50800718,\n-0.49571176, -0.10488662, 0.86213030,\n-0.34873248, 0.21680758, 0.91180049,\n-0.76672221, -4.8510313e-2, 0.64014358,\n-0.13650656, -0.57429108, 0.80719001,\n-0.35567326, -0.57093183, 0.73995498,\n-0.26279235, -0.27981111, 0.92338828,\n-0.13650656, -0.57429108, 0.80719001,\n0.13600875, -0.57466798, 0.80700578,\n2.7128683e-5, 7.4843997e-2, 0.99719525,\n-0.13650656, -0.57429108, 0.80719001,\n2.3323846e-5, -0.37052302, 0.92882328,\n0.13600875, -0.57466798, 0.80700578,\n2.7128683e-5, 7.4843997e-2, 0.99719525,\n-0.25718408, 0.10869619, 0.96022991,\n-0.13650656, -0.57429108, 0.80719001,\n2.7128683e-5, 7.4843997e-2, 0.99719525,\n-0.22636334, 0.17886233, 0.95747998,\n-0.25718408, 0.10869619, 0.96022991,\n2.7128683e-5, 7.4843997e-2, 0.99719525,\n7.6311589e-5, -7.4892386e-2, 0.99719162,\n-0.22636334, 0.17886233, 0.95747998,\n2.7128683e-5, 7.4843997e-2, 0.99719525,\n0.22577111, 0.17863823, 0.95766163,\n7.6311589e-5, -7.4892386e-2, 0.99719162,\n-0.25718408, 0.10869619, 0.96022991,\n-0.22636334, 0.17886233, 0.95747998,\n-0.44128325, -4.7334937e-2, 0.89611858,\n-0.25718408, 0.10869619, 0.96022991,\n-0.35567326, -0.57093183, 0.73995498,\n-0.13650656, -0.57429108, 0.80719001,\n-1.2103473e-5, -0.43597365, 0.89995943,\n0.26118273, 0.11802798, 0.95804644,\n-0.26154764, 0.11801676, 0.95794826,\n-1.2103473e-5, -0.43597365, 0.89995943,\n0.43130763, -0.45157420, 0.78105984,\n0.26118273, 0.11802798, 0.95804644,\n-0.21062552, -0.83583219, 0.50697282,\n0.17579182, -0.87781318, 0.44557970,\n-1.2103473e-5, -0.43597365, 0.89995943,\n-0.21062552, -0.83583219, 0.50697282,\n-0.13339038, -0.99099767, -1.1429040e-2,\n0.17579182, -0.87781318, 0.44557970,\n0.17579182, -0.87781318, 0.44557970,\n0.43130763, -0.45157420, 0.78105984,\n-1.2103473e-5, -0.43597365, 0.89995943,\n-0.80992641, -0.24343185, 0.53362923,\n-0.46727909, -0.29760782, 0.83251417,\n-0.52026264, -0.17707227, 0.83544730,\n-0.80992641, -0.24343185, 0.53362923,\n-0.95809385, -7.8437509e-2, 0.27550633,\n-0.88078897, -5.2216625e-2, 0.47062110,\n-0.52026264, -0.17707227, 0.83544730,\n-0.55895982, -0.19726306, 0.80538885,\n-0.80992641, -0.24343185, 0.53362923,\n-0.52026264, -0.17707227, 0.83544730,\n-0.21080299, -0.18174476, 0.96048474,\n-0.30173061, -0.23793701, 0.92322512,\n-0.55895982, -0.19726306, 0.80538885,\n-0.75434161, 1.2083244e-2, 0.65637088,\n-0.80992641, -0.24343185, 0.53362923,\n-0.55895982, -0.19726306, 0.80538885,\n-0.59831320, 6.5349987e-2, 0.79859295,\n-0.75434161, 1.2083244e-2, 0.65637088,\n-0.46174642, 0.20414334, 0.86320087,\n-0.59831320, 6.5349987e-2, 0.79859295,\n-0.55895982, -0.19726306, 0.80538885,\n-0.60386440, 0.44093411, 0.66402176,\n-0.56940212, 0.37201342, 0.73306701,\n-0.72341848, 0.17069269, 0.66897661,\n-0.60386440, 0.44093411, 0.66402176,\n4.6364490e-4, 0.22221012, 0.97499869,\n-0.65957467, -4.6241541e-3, 0.75162482,\n-0.65957467, -4.6241541e-3, 0.75162482,\n-0.56940212, 0.37201342, 0.73306701,\n-0.60386440, 0.44093411, 0.66402176,\n-0.65957467, -4.6241541e-3, 0.75162482,\n-0.33987664, 0.25483586, 0.90528589,\n-0.56940212, 0.37201342, 0.73306701,\n-0.65957467, -4.6241541e-3, 0.75162482,\n-0.12629342, -0.31868853, 0.93940811,\n-0.40734179, -0.68654723, 0.60226702,\n-0.65957467, -4.6241541e-3, 0.75162482,\n4.6364490e-4, 0.22221012, 0.97499869,\n-0.12629342, -0.31868853, 0.93940811,\n-0.56940212, 0.37201342, 0.73306701,\n-0.33987664, 0.25483586, 0.90528589,\n-0.21828117, 0.14979000, 0.96432167,\n-0.33987664, 0.25483586, 0.90528589,\n-0.24115915, -0.42640671, 0.87179102,\n-0.24770664, 0.17483827, 0.95292864,\n-0.33987664, 0.25483586, 0.90528589,\n-4.6439953e-2, 0.67351129, 0.73771666,\n-0.21828117, 0.14979000, 0.96432167,\n-0.88078897, -5.2216625e-2, 0.47062110,\n-0.46727909, -0.29760782, 0.83251417,\n-0.80992641, -0.24343185, 0.53362923,\n-0.88078897, -5.2216625e-2, 0.47062110,\n-0.87814400, -6.3836483e-2, 0.47411815,\n-0.61143263, 9.8354393e-2, 0.78516021,\n-0.88078897, -5.2216625e-2, 0.47062110,\n-0.95809385, -7.8437509e-2, 0.27550633,\n-0.96400559, -7.2587302e-2, 0.25578174,\n-0.61143263, 9.8354393e-2, 0.78516021,\n-0.46727909, -0.29760782, 0.83251417,\n-0.88078897, -5.2216625e-2, 0.47062110,\n-0.61143263, 9.8354393e-2, 0.78516021,\n-0.22565261, -0.61527392, 0.75532701,\n-0.46727909, -0.29760782, 0.83251417,\n-0.61143263, 9.8354393e-2, 0.78516021,\n-0.44556869, -8.6514319e-2, 0.89105770,\n-0.41158868, -0.21430723, 0.88581441,\n-0.46727909, -0.29760782, 0.83251417,\n-0.21080299, -0.18174476, 0.96048474,\n-0.52026264, -0.17707227, 0.83544730,\n-0.46727909, -0.29760782, 0.83251417,\n-0.41158868, -0.21430723, 0.88581441,\n-0.21080299, -0.18174476, 0.96048474,\n-0.46727909, -0.29760782, 0.83251417,\n-0.22565261, -0.61527392, 0.75532701,\n-0.41158868, -0.21430723, 0.88581441,\n7.5690519e-2, 0.25212486, 0.96473001,\n-4.6439953e-2, 0.67351129, 0.73771666,\n-0.24770664, 0.17483827, 0.95292864,\n-0.24770664, 0.17483827, 0.95292864,\n-0.10046358, -0.37828743, 0.92022045,\n7.5690519e-2, 0.25212486, 0.96473001,\n-0.24770664, 0.17483827, 0.95292864,\n-0.24115915, -0.42640671, 0.87179102,\n-0.10046358, -0.37828743, 0.92022045,\n-0.24770664, 0.17483827, 0.95292864,\n-4.6439953e-2, 0.67351129, 0.73771666,\n-0.33987664, 0.25483586, 0.90528589,\n-0.10046358, -0.37828743, 0.92022045,\n-0.24115915, -0.42640671, 0.87179102,\n-0.21080299, -0.18174476, 0.96048474,\n-0.10046358, -0.37828743, 0.92022045,\n-0.11665601, -0.11998114, 0.98589853,\n7.5690519e-2, 0.25212486, 0.96473001,\n-0.57289336, -0.81668933, 6.9366734e-2,\n-0.63735468, -0.21539513, 0.73985401,\n-0.40220889, -0.81524448, 0.41665867,\n-0.57289336, -0.81668933, 6.9366734e-2,\n-0.93700139, -4.2888420e-2, 0.34668283,\n-0.76672221, -4.8510313e-2, 0.64014358,\n-0.40220889, -0.81524448, 0.41665867,\n-0.49121810, -0.65231765, 0.57722306,\n-0.57289336, -0.81668933, 6.9366734e-2,\n-0.40220889, -0.81524448, 0.41665867,\n-0.22636334, 0.17886233, 0.95747998,\n-0.12406071, -0.63369016, 0.76357431,\n-0.40220889, -0.81524448, 0.41665867,\n-0.63735468, -0.21539513, 0.73985401,\n-0.22636334, 0.17886233, 0.95747998,\n-0.49121810, -0.65231765, 0.57722306,\n-0.93700139, -4.2888420e-2, 0.34668283,\n-0.57289336, -0.81668933, 6.9366734e-2,\n-0.44128325, -4.7334937e-2, 0.89611858,\n-0.35567326, -0.57093183, 0.73995498,\n-0.25718408, 0.10869619, 0.96022991,\n-0.44128325, -4.7334937e-2, 0.89611858,\n-0.34873248, 0.21680758, 0.91180049,\n-0.60177925, -1.0929924e-2, 0.79858767,\n-0.44128325, -4.7334937e-2, 0.89611858,\n-0.40154565, -0.12122665, 0.90778037,\n-0.49541686, -8.7265482e-2, 0.86426088,\n-0.22636334, 0.17886233, 0.95747998,\n-0.63735468, -0.21539513, 0.73985401,\n-0.44128325, -4.7334937e-2, 0.89611858,\n-0.22636334, 0.17886233, 0.95747998,\n7.6311589e-5, -7.4892386e-2, 0.99719162,\n-0.12406071, -0.63369016, 0.76357431,\n-0.63735468, -0.21539513, 0.73985401,\n-0.34873248, 0.21680758, 0.91180049,\n-0.44128325, -4.7334937e-2, 0.89611858,\n-0.49541686, -8.7265482e-2, 0.86426088,\n-0.54211313, -7.1446982e-2, 0.83726261,\n-0.49947904, 0.14059794, 0.85484087,\n-0.49541686, -8.7265482e-2, 0.86426088,\n-0.35567326, -0.57093183, 0.73995498,\n-0.44128325, -4.7334937e-2, 0.89611858,\n-0.49541686, -8.7265482e-2, 0.86426088,\n-0.40154565, -0.12122665, 0.90778037,\n-0.54211313, -7.1446982e-2, 0.83726261,\n-0.49947904, 0.14059794, 0.85484087,\n-0.26279235, -0.27981111, 0.92338828,\n-0.49541686, -8.7265482e-2, 0.86426088,\n-0.49947904, 0.14059794, 0.85484087,\n-1.8802096e-5, 3.0354954e-2, 0.99953918,\n-0.26279235, -0.27981111, 0.92338828,\n-0.26279235, -0.27981111, 0.92338828,\n-0.35567326, -0.57093183, 0.73995498,\n-0.49541686, -8.7265482e-2, 0.86426088,\n-0.26279235, -0.27981111, 0.92338828,\n2.3323846e-5, -0.37052302, 0.92882328,\n-0.13650656, -0.57429108, 0.80719001,\n-0.90621754, -0.22216136, 0.35974172,\n-0.68936272, -0.18623286, 0.70006883,\n-0.74851071, -3.1398285e-2, 0.66237894,\n-0.68936272, -0.18623286, 0.70006883,\n-0.60177925, -1.0929924e-2, 0.79858767,\n-0.74851071, -3.1398285e-2, 0.66237894,\n-0.68936272, -0.18623286, 0.70006883,\n-0.40154565, -0.12122665, 0.90778037,\n-0.60177925, -1.0929924e-2, 0.79858767,\n0.18495696, 0.17726974, 0.96662628,\n4.7247561e-5, 0.14452496, 0.98950115,\n-0.18525767, 0.17736123, 0.96655191,\n0.18495696, 0.17726974, 0.96662628,\n0.46136699, 0.20437817, 0.86334817,\n4.7247561e-5, 0.14452496, 0.98950115,\n0.52276813, 0.44983316, 0.72412955,\n4.6364490e-4, 0.22221012, 0.97499869,\n-0.60386440, 0.44093411, 0.66402176,\n0.52276813, 0.44983316, 0.72412955,\n0.65884028, -4.9015345e-3, 0.75226688,\n4.6364490e-4, 0.22221012, 0.97499869,\n0.53982439, 0.35574788, 0.76291092,\n0.72232434, 0.17116584, 0.67003717,\n0.52276813, 0.44983316, 0.72412955,\n0.53982439, 0.35574788, 0.76291092,\n0.87395897, 0.33656660, 0.35059756,\n0.72232434, 0.17116584, 0.67003717,\n0.53982439, 0.35574788, 0.76291092,\n0.68588284, 5.1805806e-2, 0.72586561,\n0.87395897, 0.33656660, 0.35059756,\n-0.75434161, 1.2083244e-2, 0.65637088,\n-0.88867628, -3.5036966e-2, 0.45719457,\n-0.80992641, -0.24343185, 0.53362923,\n-0.75434161, 1.2083244e-2, 0.65637088,\n-0.59831320, 6.5349987e-2, 0.79859295,\n-0.88867628, -3.5036966e-2, 0.45719457,\n-0.13339038, -0.99099767, -1.1429040e-2,\n0.18672033, -0.98239318, -6.2576745e-3,\n0.17579182, -0.87781318, 0.44557970,\n-0.13339038, -0.99099767, -1.1429040e-2,\n0.12153759, -0.97003021, -0.21040439,\n0.18672033, -0.98239318, -6.2576745e-3,\n0.18672033, -0.98239318, -6.2576745e-3,\n0.64868598, -0.68613488, 0.32928016,\n0.17579182, -0.87781318, 0.44557970,\n0.18672033, -0.98239318, -6.2576745e-3,\n0.38776090, -0.91051291, -0.14355393,\n0.64868598, -0.68613488, 0.32928016,\n0.18672033, -0.98239318, -6.2576745e-3,\n0.12153759, -0.97003021, -0.21040439,\n0.38776090, -0.91051291, -0.14355393,\n-0.54211313, -7.1446982e-2, 0.83726261,\n-0.20685974, -0.59552626, 0.77624579,\n-0.49947904, 0.14059794, 0.85484087,\n-0.54211313, -7.1446982e-2, 0.83726261,\n-0.40154565, -0.12122665, 0.90778037,\n-0.68936272, -0.18623286, 0.70006883,\n-0.42498963, -5.6709303e-2, 0.90342010,\n-0.20685974, -0.59552626, 0.77624579,\n-0.54211313, -7.1446982e-2, 0.83726261,\n-0.42498963, -5.6709303e-2, 0.90342010,\n4.8730933e-5, -0.13129320, 0.99134358,\n-0.20685974, -0.59552626, 0.77624579,\n-0.20685974, -0.59552626, 0.77624579,\n4.8730933e-5, -0.13129320, 0.99134358,\n0.20652701, -0.59558661, 0.77628808,\n-0.20685974, -0.59552626, 0.77624579,\n-1.8802096e-5, 3.0354954e-2, 0.99953918,\n-0.49947904, 0.14059794, 0.85484087,\n-0.21080299, -0.18174476, 0.96048474,\n-0.24115915, -0.42640671, 0.87179102,\n-0.30173061, -0.23793701, 0.92322512,\n-0.21080299, -0.18174476, 0.96048474,\n-0.41158868, -0.21430723, 0.88581441,\n-0.10046358, -0.37828743, 0.92022045,\n-0.87814400, -6.3836483e-2, 0.47411815,\n-0.65542922, 6.6729088e-3, 0.75522713,\n-0.61143263, 9.8354393e-2, 0.78516021,\n-0.65542922, 6.6729088e-3, 0.75522713,\n-0.26619529, 0.49510359, 0.82705049,\n-0.61143263, 9.8354393e-2, 0.78516021,\n-0.26619529, 0.49510359, 0.82705049,\n-0.29057698, 0.17734594, 0.94027306,\n-0.61143263, 9.8354393e-2, 0.78516021,\n-0.26619529, 0.49510359, 0.82705049,\n-4.6439953e-2, 0.67351129, 0.73771666,\n-0.29057698, 0.17734594, 0.94027306,\n-0.88867628, -3.5036966e-2, 0.45719457,\n-0.95809385, -7.8437509e-2, 0.27550633,\n-0.80992641, -0.24343185, 0.53362923,\n-0.88867628, -3.5036966e-2, 0.45719457,\n-0.97305656, -0.13209321, 0.18897701,\n-0.95809385, -7.8437509e-2, 0.27550633,\n-0.88867628, -3.5036966e-2, 0.45719457,\n-0.95786070, -7.3061575e-2, 0.27778568,\n-0.97305656, -0.13209321, 0.18897701,\n-0.88867628, -3.5036966e-2, 0.45719457,\n-0.76484436, 5.8178117e-2, 0.64158274,\n-0.95786070, -7.3061575e-2, 0.27778568,\n0.20652701, -0.59558661, 0.77628808,\n-1.8802096e-5, 3.0354954e-2, 0.99953918,\n-0.20685974, -0.59552626, 0.77624579,\n0.20652701, -0.59558661, 0.77628808,\n0.49950065, 0.13987663, 0.85494656,\n-1.8802096e-5, 3.0354954e-2, 0.99953918,\n0.20652701, -0.59558661, 0.77628808,\n0.54186339, -7.1325657e-2, 0.83743460,\n0.49950065, 0.13987663, 0.85494656,\n4.8730933e-5, -0.13129320, 0.99134358,\n0.42453299, -5.6446013e-2, 0.90365125,\n0.20652701, -0.59558661, 0.77628808,\n4.7247561e-5, 0.14452496, 0.98950115,\n-0.31949296, 4.4523327e-2, 0.94654209,\n-0.46174642, 0.20414334, 0.86320087,\n4.7247561e-5, 0.14452496, 0.98950115,\n0.31922323, 4.4724694e-2, 0.94662360,\n-0.31949296, 4.4523327e-2, 0.94654209,\n4.7247561e-5, 0.14452496, 0.98950115,\n0.46136699, 0.20437817, 0.86334817,\n0.31922323, 4.4724694e-2, 0.94662360,\n-0.31949296, 4.4523327e-2, 0.94654209,\n-0.59831320, 6.5349987e-2, 0.79859295,\n-0.46174642, 0.20414334, 0.86320087,\n-0.31949296, 4.4523327e-2, 0.94654209,\n-0.53621332, 0.20882405, 0.81784338,\n-0.59831320, 6.5349987e-2, 0.79859295,\n0.31922323, 4.4724694e-2, 0.94662360,\n1.2901833e-6, 0.37420721, 0.92734511,\n-0.31949296, 4.4523327e-2, 0.94654209,\n0.31922323, 4.4724694e-2, 0.94662360,\n0.53607295, 0.20856977, 0.81800027,\n1.2901833e-6, 0.37420721, 0.92734511,\n-0.60177925, -1.0929924e-2, 0.79858767,\n-0.34873248, 0.21680758, 0.91180049,\n-0.74851071, -3.1398285e-2, 0.66237894,\n-0.60177925, -1.0929924e-2, 0.79858767,\n-0.40154565, -0.12122665, 0.90778037,\n-0.44128325, -4.7334937e-2, 0.89611858,\n7.6311589e-5, -7.4892386e-2, 0.99719162,\n0.22577111, 0.17863823, 0.95766163,\n0.10167662, -0.70946266, 0.69736977,\n0.26118273, 0.11802798, 0.95804644,\n0.43130763, -0.45157420, 0.78105984,\n0.62296523, -4.3173932e-2, 0.78105719,\n0.26118273, 0.11802798, 0.95804644,\n0.42453299, -5.6446013e-2, 0.90365125,\n4.8730933e-5, -0.13129320, 0.99134358,\n-0.68728655, 5.2129329e-2, 0.72451345,\n1.0720955e-5, 0.36150178, 0.93237142,\n-0.46662016, 0.37312653, 0.80189913,\n-0.68728655, 5.2129329e-2, 0.72451345,\n-0.93700139, -4.2888420e-2, 0.34668283,\n-0.49121810, -0.65231765, 0.57722306,\n-0.37916881, -0.11486196, 0.91817087,\n1.0720955e-5, 0.36150178, 0.93237142,\n-0.68728655, 5.2129329e-2, 0.72451345,\n-0.37916881, -0.11486196, 0.91817087,\n0.29948075, -0.23669904, 0.92427531,\n1.0720955e-5, 0.36150178, 0.93237142,\n1.0720955e-5, 0.36150178, 0.93237142,\n0.68588284, 5.1805806e-2, 0.72586561,\n0.53982439, 0.35574788, 0.76291092,\n-1.8802096e-5, 3.0354954e-2, 0.99953918,\n2.3323846e-5, -0.37052302, 0.92882328,\n-0.26279235, -0.27981111, 0.92338828,\n-1.8802096e-5, 3.0354954e-2, 0.99953918,\n0.26273052, -0.27951921, 0.92349428,\n2.3323846e-5, -0.37052302, 0.92882328,\n-1.8802096e-5, 3.0354954e-2, 0.99953918,\n0.49950065, 0.13987663, 0.85494656,\n0.26273052, -0.27951921, 0.92349428,\n-0.95809385, -7.8437509e-2, 0.27550633,\n-0.97305656, -0.13209321, 0.18897701,\n-0.96400559, -7.2587302e-2, 0.25578174,\n-0.41158868, -0.21430723, 0.88581441,\n-0.11665601, -0.11998114, 0.98589853,\n-0.10046358, -0.37828743, 0.92022045,\n-0.41158868, -0.21430723, 0.88581441,\n-0.22565261, -0.61527392, 0.75532701,\n-0.61143263, 9.8354393e-2, 0.78516021,\n-0.41158868, -0.21430723, 0.88581441,\n-0.44556869, -8.6514319e-2, 0.89105770,\n-0.11665601, -0.11998114, 0.98589853,\n-0.11665601, -0.11998114, 0.98589853,\n-0.29057698, 0.17734594, 0.94027306,\n7.5690519e-2, 0.25212486, 0.96473001,\n-0.11665601, -0.11998114, 0.98589853,\n-0.44556869, -8.6514319e-2, 0.89105770,\n-0.29057698, 0.17734594, 0.94027306,\n-0.38765259, -0.91057036, -0.14348201,\n-0.16217400, -0.96108610, -0.22363611,\n-0.13339038, -0.99099767, -1.1429040e-2,\n-0.29057698, 0.17734594, 0.94027306,\n-4.6439953e-2, 0.67351129, 0.73771666,\n7.5690519e-2, 0.25212486, 0.96473001,\n-0.29057698, 0.17734594, 0.94027306,\n-0.44556869, -8.6514319e-2, 0.89105770,\n-0.61143263, 9.8354393e-2, 0.78516021,\n0.29948075, -0.23669904, 0.92427531,\n0.68588284, 5.1805806e-2, 0.72586561,\n1.0720955e-5, 0.36150178, 0.93237142,\n0.12603695, -0.31774285, 0.93976283,\n0.25931619, -0.59762937, 0.75867928,\n5.0971062e-5, -7.0167664e-2, 0.99753521,\n0.12603695, -0.31774285, 0.93976283,\n0.40643326, -0.68638175, 0.60306890,\n0.25931619, -0.59762937, 0.75867928,\n0.12603695, -0.31774285, 0.93976283,\n0.65884028, -4.9015345e-3, 0.75226688,\n0.40643326, -0.68638175, 0.60306890,\n-0.12629342, -0.31868853, 0.93940811,\n4.6364490e-4, 0.22221012, 0.97499869,\n0.12603695, -0.31774285, 0.93976283,\n4.6364490e-4, 0.22221012, 0.97499869,\n0.65884028, -4.9015345e-3, 0.75226688,\n0.12603695, -0.31774285, 0.93976283,\n0.13600875, -0.57466798, 0.80700578,\n0.25671645, 0.10756218, 0.96048271,\n2.7128683e-5, 7.4843997e-2, 0.99719525,\n0.13600875, -0.57466798, 0.80700578,\n0.35487773, -0.57166783, 0.73976867,\n0.25671645, 0.10756218, 0.96048271,\n2.3323846e-5, -0.37052302, 0.92882328,\n0.26273052, -0.27951921, 0.92349428,\n0.13600875, -0.57466798, 0.80700578,\n-0.59831320, 6.5349987e-2, 0.79859295,\n-0.76484436, 5.8178117e-2, 0.64158274,\n-0.88867628, -3.5036966e-2, 0.45719457,\n-0.97305656, -0.13209321, 0.18897701,\n-0.49487469, 0.72973180, 0.47179501,\n-0.91066508, 7.0562681e-2, 0.40707497,\n-0.97305656, -0.13209321, 0.18897701,\n-0.98479688, -8.4335103e-2, 0.15186410,\n-0.96400559, -7.2587302e-2, 0.25578174,\n-0.97305656, -0.13209321, 0.18897701,\n-0.95883338, -0.26001833, 0.11414474,\n-0.49487469, 0.72973180, 0.47179501,\n-0.92278278, 0.27698416, 0.26786511,\n-0.90375789, 4.2337723e-3, 0.42802308,\n-0.17606942, 0.86072714, 0.47764877,\n-0.92278278, 0.27698416, 0.26786511,\n-0.84626256, -0.43148589, 0.31250537,\n-0.90375789, 4.2337723e-3, 0.42802308,\n-0.92278278, 0.27698416, 0.26786511,\n-0.79750299, -0.10088327, 0.59482060,\n-0.84626256, -0.43148589, 0.31250537,\n-0.17606942, 0.86072714, 0.47764877,\n9.2986757e-2, 0.96527303, -0.24413407,\n-0.92278278, 0.27698416, 0.26786511,\n-0.17606942, 0.86072714, 0.47764877,\n-0.49487469, 0.72973180, 0.47179501,\n9.2986757e-2, 0.96527303, -0.24413407,\n9.2986757e-2, 0.96527303, -0.24413407,\n-0.90430449, 0.32749883, -0.27382094,\n-0.92278278, 0.27698416, 0.26786511,\n9.2986757e-2, 0.96527303, -0.24413407,\n6.7542507e-2, 0.47846738, -0.87550384,\n-0.90430449, 0.32749883, -0.27382094,\n9.2986757e-2, 0.96527303, -0.24413407,\n-0.71278163, 0.28864064, -0.63924090,\n6.7542507e-2, 0.47846738, -0.87550384,\n-0.90375789, 4.2337723e-3, 0.42802308,\n-0.91066508, 7.0562681e-2, 0.40707497,\n-0.17606942, 0.86072714, 0.47764877,\n-0.90375789, 4.2337723e-3, 0.42802308,\n-0.86330951, -0.40080933, 0.30667340,\n-0.91066508, 7.0562681e-2, 0.40707497,\n-0.90375789, 4.2337723e-3, 0.42802308,\n-0.84626256, -0.43148589, 0.31250537,\n-0.86330951, -0.40080933, 0.30667340,\n-0.90430449, 0.32749883, -0.27382094,\n-0.21975449, -9.5431810e-2, -0.97087627,\n-0.98383327, -0.17532961, 3.6491568e-2,\n-0.90430449, 0.32749883, -0.27382094,\n-0.79750299, -0.10088327, 0.59482060,\n-0.92278278, 0.27698416, 0.26786511,\n6.7542507e-2, 0.47846738, -0.87550384,\n-0.21975449, -9.5431810e-2, -0.97087627,\n-0.90430449, 0.32749883, -0.27382094,\n6.7542507e-2, 0.47846738, -0.87550384,\n-0.37227176, -0.40038495, -0.83732050,\n-0.21975449, -9.5431810e-2, -0.97087627,\n-0.98383327, -0.17532961, 3.6491568e-2,\n2.2855097e-2, -0.59660400, -0.80221027,\n-0.94628152, -0.32320545, 9.4621095e-3,\n-0.98383327, -0.17532961, 3.6491568e-2,\n-0.79750299, -0.10088327, 0.59482060,\n-0.90430449, 0.32749883, -0.27382094,\n-0.98383327, -0.17532961, 3.6491568e-2,\n-0.78763634, 0.26354526, 0.55693168,\n-0.79750299, -0.10088327, 0.59482060,\n-0.21975449, -9.5431810e-2, -0.97087627,\n2.2855097e-2, -0.59660400, -0.80221027,\n-0.98383327, -0.17532961, 3.6491568e-2,\n-0.21975449, -9.5431810e-2, -0.97087627,\n-0.37227176, -0.40038495, -0.83732050,\n2.2855097e-2, -0.59660400, -0.80221027,\n-0.31213272, -0.94940601, 3.4661138e-2,\n-0.69244195, -0.57303592, 0.43835371,\n-0.87297548, -0.16267373, 0.45983809,\n-0.31213272, -0.94940601, 3.4661138e-2,\n-0.50082438, -0.84845145, 0.17118725,\n-0.69244195, -0.57303592, 0.43835371,\n-0.87297548, -0.16267373, 0.45983809,\n-0.94628152, -0.32320545, 9.4621095e-3,\n-0.31213272, -0.94940601, 3.4661138e-2,\n-0.87297548, -0.16267373, 0.45983809,\n-0.78763634, 0.26354526, 0.55693168,\n-0.94628152, -0.32320545, 9.4621095e-3,\n-0.94628152, -0.32320545, 9.4621095e-3,\n2.2855097e-2, -0.59660400, -0.80221027,\n-0.31213272, -0.94940601, 3.4661138e-2,\n-0.94628152, -0.32320545, 9.4621095e-3,\n-0.78763634, 0.26354526, 0.55693168,\n-0.98383327, -0.17532961, 3.6491568e-2,\n2.2855097e-2, -0.59660400, -0.80221027,\n-0.43641347, -0.85877804, -0.26840933,\n-0.31213272, -0.94940601, 3.4661138e-2,\n-0.69244195, -0.57303592, 0.43835371,\n-0.85051912, 0.16878251, 0.49812618,\n-0.87297548, -0.16267373, 0.45983809,\n-0.69244195, -0.57303592, 0.43835371,\n-0.89674654, -0.14364569, 0.41858280,\n-0.85051912, 0.16878251, 0.49812618,\n-0.69244195, -0.57303592, 0.43835371,\n-0.93308178, -0.22887174, 0.27744569,\n-0.89674654, -0.14364569, 0.41858280,\n-0.85051912, 0.16878251, 0.49812618,\n-0.78763634, 0.26354526, 0.55693168,\n-0.87297548, -0.16267373, 0.45983809,\n-0.85051912, 0.16878251, 0.49812618,\n-0.89674654, -0.14364569, 0.41858280,\n-0.98153528, -0.17920628, -6.6884963e-2,\n-0.85051912, 0.16878251, 0.49812618,\n-0.99482846, 9.9027992e-2, 2.2578762e-2,\n-0.78763634, 0.26354526, 0.55693168,\n-0.91066508, 7.0562681e-2, 0.40707497,\n-0.49487469, 0.72973180, 0.47179501,\n-0.17606942, 0.86072714, 0.47764877,\n-0.91066508, 7.0562681e-2, 0.40707497,\n-0.98479688, -8.4335103e-2, 0.15186410,\n-0.97305656, -0.13209321, 0.18897701,\n-0.86330951, -0.40080933, 0.30667340,\n-0.89674654, -0.14364569, 0.41858280,\n-0.91066508, 7.0562681e-2, 0.40707497,\n-0.86330951, -0.40080933, 0.30667340,\n-0.95853733, -0.28400397, -2.3407817e-2,\n-0.98153528, -0.17920628, -6.6884963e-2,\n-0.84626256, -0.43148589, 0.31250537,\n-0.95853733, -0.28400397, -2.3407817e-2,\n-0.86330951, -0.40080933, 0.30667340,\n-0.84626256, -0.43148589, 0.31250537,\n-0.91075105, -0.10945649, 0.39818563,\n-0.95853733, -0.28400397, -2.3407817e-2,\n-0.79750299, -0.10088327, 0.59482060,\n-0.91075105, -0.10945649, 0.39818563,\n-0.84626256, -0.43148589, 0.31250537,\n-0.78763634, 0.26354526, 0.55693168,\n-0.91075105, -0.10945649, 0.39818563,\n-0.79750299, -0.10088327, 0.59482060,\n-0.98153528, -0.17920628, -6.6884963e-2,\n-0.89674654, -0.14364569, 0.41858280,\n-0.86330951, -0.40080933, 0.30667340,\n-0.98153528, -0.17920628, -6.6884963e-2,\n-0.99482846, 9.9027992e-2, 2.2578762e-2,\n-0.85051912, 0.16878251, 0.49812618,\n-0.98153528, -0.17920628, -6.6884963e-2,\n-0.95161923, -0.12922211, 0.27878753,\n-0.99482846, 9.9027992e-2, 2.2578762e-2,\n-0.98153528, -0.17920628, -6.6884963e-2,\n-0.91075105, -0.10945649, 0.39818563,\n-0.95161923, -0.12922211, 0.27878753,\n-0.89674654, -0.14364569, 0.41858280,\n-0.98113782, -8.5226953e-2, 0.17350775,\n-0.91066508, 7.0562681e-2, 0.40707497,\n-0.99482846, 9.9027992e-2, 2.2578762e-2,\n-0.95161923, -0.12922211, 0.27878753,\n-0.78763634, 0.26354526, 0.55693168,\n-0.95161923, -0.12922211, 0.27878753,\n-0.91075105, -0.10945649, 0.39818563,\n-0.78763634, 0.26354526, 0.55693168,\n-0.95853733, -0.28400397, -2.3407817e-2,\n-0.91075105, -0.10945649, 0.39818563,\n-0.98153528, -0.17920628, -6.6884963e-2,\n-0.49487469, 0.72973180, 0.47179501,\n-0.68675082, 0.72581942, 3.9490275e-2,\n9.2986757e-2, 0.96527303, -0.24413407,\n-0.49487469, 0.72973180, 0.47179501,\n-0.95883338, -0.26001833, 0.11414474,\n-0.68675082, 0.72581942, 3.9490275e-2,\n-0.68675082, 0.72581942, 3.9490275e-2,\n-0.71278163, 0.28864064, -0.63924090,\n9.2986757e-2, 0.96527303, -0.24413407,\n-0.68675082, 0.72581942, 3.9490275e-2,\n-0.95883338, -0.26001833, 0.11414474,\n-0.71278163, 0.28864064, -0.63924090,\n-0.71278163, 0.28864064, -0.63924090,\n-0.37227176, -0.40038495, -0.83732050,\n6.7542507e-2, 0.47846738, -0.87550384,\n-0.71278163, 0.28864064, -0.63924090,\n-0.98969696, -0.14219896, 1.6714462e-2,\n-0.37227176, -0.40038495, -0.83732050,\n-0.37227176, -0.40038495, -0.83732050,\n-0.15992511, -0.60138514, -0.78278980,\n2.2855097e-2, -0.59660400, -0.80221027,\n-0.37227176, -0.40038495, -0.83732050,\n-0.84486498, -0.51528991, -0.14380357,\n-0.15992511, -0.60138514, -0.78278980,\n-0.15992511, -0.60138514, -0.78278980,\n-0.43641347, -0.85877804, -0.26840933,\n2.2855097e-2, -0.59660400, -0.80221027,\n-0.15992511, -0.60138514, -0.78278980,\n-0.84486498, -0.51528991, -0.14380357,\n-0.43641347, -0.85877804, -0.26840933,\n-0.43641347, -0.85877804, -0.26840933,\n-0.50082438, -0.84845145, 0.17118725,\n-0.31213272, -0.94940601, 3.4661138e-2,\n-0.43641347, -0.85877804, -0.26840933,\n-0.87545454, -0.43207600, 0.21654025,\n-0.50082438, -0.84845145, 0.17118725,\n-0.43641347, -0.85877804, -0.26840933,\n-0.93440191, -0.29505803, 0.19958412,\n-0.87545454, -0.43207600, 0.21654025,\n-0.50082438, -0.84845145, 0.17118725,\n-0.87895109, -0.47689051, 4.5191036e-3,\n-0.69244195, -0.57303592, 0.43835371,\n-0.50082438, -0.84845145, 0.17118725,\n-0.87545454, -0.43207600, 0.21654025,\n-0.87895109, -0.47689051, 4.5191036e-3,\n0.30960366, -0.75166891, 0.58235678,\n0.40027018, -0.81580228, 0.41743315,\n0.49004126, -0.65247518, 0.57804473,\n0.30960366, -0.75166891, 0.58235678,\n0.68588284, 5.1805806e-2, 0.72586561,\n0.29948075, -0.23669904, 0.92427531,\n-0.87895109, -0.47689051, 4.5191036e-3,\n-0.93308178, -0.22887174, 0.27744569,\n-0.69244195, -0.57303592, 0.43835371,\n-0.87895109, -0.47689051, 4.5191036e-3,\n-0.91568627, -0.11308729, 0.38565519,\n-0.93308178, -0.22887174, 0.27744569,\n-0.87895109, -0.47689051, 4.5191036e-3,\n-0.87545454, -0.43207600, 0.21654025,\n-0.86892796, -0.49333527, -3.9805981e-2,\n-0.93308178, -0.22887174, 0.27744569,\n-0.98113782, -8.5226953e-2, 0.17350775,\n-0.89674654, -0.14364569, 0.41858280,\n-0.93308178, -0.22887174, 0.27744569,\n-0.91568627, -0.11308729, 0.38565519,\n-0.98113782, -8.5226953e-2, 0.17350775,\n-0.98113782, -8.5226953e-2, 0.17350775,\n-0.98479688, -8.4335103e-2, 0.15186410,\n-0.91066508, 7.0562681e-2, 0.40707497,\n-0.98113782, -8.5226953e-2, 0.17350775,\n-0.91568627, -0.11308729, 0.38565519,\n-0.98479688, -8.4335103e-2, 0.15186410,\n-0.98479688, -8.4335103e-2, 0.15186410,\n-0.91568627, -0.11308729, 0.38565519,\n-0.96400559, -7.2587302e-2, 0.25578174,\n-0.87545454, -0.43207600, 0.21654025,\n-0.93440191, -0.29505803, 0.19958412,\n-0.86892796, -0.49333527, -3.9805981e-2,\n-0.95786070, -7.3061575e-2, 0.27778568,\n-0.95883338, -0.26001833, 0.11414474,\n-0.97305656, -0.13209321, 0.18897701,\n-0.95786070, -7.3061575e-2, 0.27778568,\n-0.97884641, 0.20436686, 9.6896108e-3,\n-0.95883338, -0.26001833, 0.11414474,\n-0.95786070, -7.3061575e-2, 0.27778568,\n-0.83318713, 0.42496745, 0.35383877,\n-0.97884641, 0.20436686, 9.6896108e-3,\n1.2901833e-6, 0.37420721, 0.92734511,\n-0.53621332, 0.20882405, 0.81784338,\n-0.31949296, 4.4523327e-2, 0.94654209,\n1.2901833e-6, 0.37420721, 0.92734511,\n-0.27755314, 0.74436262, 0.60736196,\n-0.53621332, 0.20882405, 0.81784338,\n1.2901833e-6, 0.37420721, 0.92734511,\n0.27755270, 0.74436260, 0.60736219,\n-0.27755314, 0.74436262, 0.60736196,\n-0.53621332, 0.20882405, 0.81784338,\n-0.76484436, 5.8178117e-2, 0.64158274,\n-0.59831320, 6.5349987e-2, 0.79859295,\n-0.53621332, 0.20882405, 0.81784338,\n-0.60240847, 0.58227155, 0.54595227,\n-0.76484436, 5.8178117e-2, 0.64158274,\n-0.76484436, 5.8178117e-2, 0.64158274,\n-0.83318713, 0.42496745, 0.35383877,\n-0.95786070, -7.3061575e-2, 0.27778568,\n-0.76484436, 5.8178117e-2, 0.64158274,\n-0.60240847, 0.58227155, 0.54595227,\n-0.83318713, 0.42496745, 0.35383877,\n-0.95883338, -0.26001833, 0.11414474,\n-0.98969696, -0.14219896, 1.6714462e-2,\n-0.71278163, 0.28864064, -0.63924090,\n-0.27755314, 0.74436262, 0.60736196,\n-0.60240847, 0.58227155, 0.54595227,\n-0.53621332, 0.20882405, 0.81784338,\n-0.27755314, 0.74436262, 0.60736196,\n0.27755270, 0.74436260, 0.60736219,\n9.0655817e-10, 0.98618858, 0.16562634,\n9.0655817e-10, 0.98618858, 0.16562634,\n-0.47032249, 0.86439909, 0.17779476,\n-0.27755314, 0.74436262, 0.60736196,\n9.0655817e-10, 0.98618858, 0.16562634,\n-0.19797983, 0.92283361, -0.33042717,\n-0.47032249, 0.86439909, 0.17779476,\n9.0655817e-10, 0.98618858, 0.16562634,\n0.19797971, 0.92283363, -0.33042719,\n-0.19797983, 0.92283361, -0.33042717,\n-0.47032249, 0.86439909, 0.17779476,\n-0.75463564, 0.60415325, -0.25597639,\n-0.78083871, 0.61729633, 9.6104898e-2,\n-0.47032249, 0.86439909, 0.17779476,\n-0.60240847, 0.58227155, 0.54595227,\n-0.27755314, 0.74436262, 0.60736196,\n-0.47032249, 0.86439909, 0.17779476,\n-0.19797983, 0.92283361, -0.33042717,\n-0.75463564, 0.60415325, -0.25597639,\n-0.97884641, 0.20436686, 9.6896108e-3,\n-0.83318713, 0.42496745, 0.35383877,\n-0.78083871, 0.61729633, 9.6104898e-2,\n-0.97884641, 0.20436686, 9.6896108e-3,\n-0.88897201, 0.16285099, -0.42802840,\n-0.95883338, -0.26001833, 0.11414474,\n-0.78083871, 0.61729633, 9.6104898e-2,\n-0.75463564, 0.60415325, -0.25597639,\n-0.97884641, 0.20436686, 9.6896108e-3,\n-0.78083871, 0.61729633, 9.6104898e-2,\n-0.83318713, 0.42496745, 0.35383877,\n-0.47032249, 0.86439909, 0.17779476,\n-0.75463564, 0.60415325, -0.25597639,\n-0.88897201, 0.16285099, -0.42802840,\n-0.97884641, 0.20436686, 9.6896108e-3,\n-0.83318713, 0.42496745, 0.35383877,\n-0.60240847, 0.58227155, 0.54595227,\n-0.47032249, 0.86439909, 0.17779476,\n-0.19797983, 0.92283361, -0.33042717,\n-0.33574737, 0.50445544, -0.79548628,\n-0.75463564, 0.60415325, -0.25597639,\n-0.19797983, 0.92283361, -0.33042717,\n1.3386983e-8, 0.79146180, -0.61121864,\n-0.33574737, 0.50445544, -0.79548628,\n-0.19797983, 0.92283361, -0.33042717,\n0.19797971, 0.92283363, -0.33042719,\n1.3386983e-8, 0.79146180, -0.61121864,\n-0.33574737, 0.50445544, -0.79548628,\n-0.88897201, 0.16285099, -0.42802840,\n-0.75463564, 0.60415325, -0.25597639,\n-0.33574737, 0.50445544, -0.79548628,\n-0.37045986, 7.1355931e-2, -0.92610357,\n-0.88897201, 0.16285099, -0.42802840,\n-0.33574737, 0.50445544, -0.79548628,\n-5.3317937e-3, 5.4641075e-2, -0.99849183,\n-0.37045986, 7.1355931e-2, -0.92610357,\n-0.33574737, 0.50445544, -0.79548628,\n0.33574730, 0.50445540, -0.79548633,\n-5.3317937e-3, 5.4641075e-2, -0.99849183,\n-0.88897201, 0.16285099, -0.42802840,\n-0.98969696, -0.14219896, 1.6714462e-2,\n-0.95883338, -0.26001833, 0.11414474,\n-0.88897201, 0.16285099, -0.42802840,\n-0.89392480, -0.27397981, -0.35473021,\n-0.98969696, -0.14219896, 1.6714462e-2,\n-0.88897201, 0.16285099, -0.42802840,\n-0.37045986, 7.1355931e-2, -0.92610357,\n-0.89392480, -0.27397981, -0.35473021,\n1.3386983e-8, 0.79146180, -0.61121864,\n0.33574730, 0.50445540, -0.79548633,\n-0.33574737, 0.50445544, -0.79548628,\n-0.98969696, -0.14219896, 1.6714462e-2,\n-0.89392480, -0.27397981, -0.35473021,\n-0.37227176, -0.40038495, -0.83732050,\n-0.89392480, -0.27397981, -0.35473021,\n-0.84486498, -0.51528991, -0.14380357,\n-0.37227176, -0.40038495, -0.83732050,\n-0.37045986, 7.1355931e-2, -0.92610357,\n-0.47206626, 8.2141695e-2, -0.87772786,\n-0.89392480, -0.27397981, -0.35473021,\n-0.37045986, 7.1355931e-2, -0.92610357,\n0.25784760, -0.11679926, -0.95909986,\n-0.47206626, 8.2141695e-2, -0.87772786,\n-5.3317937e-3, 5.4641075e-2, -0.99849183,\n0.25784760, -0.11679926, -0.95909986,\n-0.37045986, 7.1355931e-2, -0.92610357,\n-0.47206626, 8.2141695e-2, -0.87772786,\n-0.84486498, -0.51528991, -0.14380357,\n-0.89392480, -0.27397981, -0.35473021,\n-0.47206626, 8.2141695e-2, -0.87772786,\n-0.84582538, -0.42662300, 0.32026901,\n-0.84486498, -0.51528991, -0.14380357,\n-0.47206626, 8.2141695e-2, -0.87772786,\n-0.33704112, -0.52254544, -0.78316636,\n-0.84582538, -0.42662300, 0.32026901,\n-0.47206626, 8.2141695e-2, -0.87772786,\n0.25784760, -0.11679926, -0.95909986,\n0.37721526, -0.82465124, -0.42149611,\n-0.84486498, -0.51528991, -0.14380357,\n-0.93440191, -0.29505803, 0.19958412,\n-0.43641347, -0.85877804, -0.26840933,\n-0.84582538, -0.42662300, 0.32026901,\n0.37721526, -0.82465124, -0.42149611,\n-0.84486498, -0.51528991, -0.14380357,\n-0.84582538, -0.42662300, 0.32026901,\n-0.33704112, -0.52254544, -0.78316636,\n0.37721526, -0.82465124, -0.42149611,\n-0.16217400, -0.96108610, -0.22363611,\n0.12153759, -0.97003021, -0.21040439,\n-0.13339038, -0.99099767, -1.1429040e-2,\n0.37721526, -0.82465124, -0.42149611,\n-0.33704112, -0.52254544, -0.78316636,\n-0.47206626, 8.2141695e-2, -0.87772786,\n0.84896160, -0.14557917, 0.50800679,\n0.49571158, -0.10488718, 0.86213033,\n0.74851099, -3.1398323e-2, 0.66237862,\n0.84896160, -0.14557917, 0.50800679,\n0.65542980, 6.6728019e-3, 0.75522662,\n0.49571158, -0.10488718, 0.86213033,\n0.84896160, -0.14557917, 0.50800679,\n0.87814398, -6.3836412e-2, 0.47411820,\n0.65542980, 6.6728019e-3, 0.75522662,\n0.74851099, -3.1398323e-2, 0.66237862,\n0.96165920, -0.14530750, 0.23258829,\n0.84896160, -0.14557917, 0.50800679,\n0.74851099, -3.1398323e-2, 0.66237862,\n0.90621762, -0.22215964, 0.35974256,\n0.96165920, -0.14530750, 0.23258829,\n0.74851099, -3.1398323e-2, 0.66237862,\n0.60177950, -1.0929617e-2, 0.79858749,\n0.68936302, -0.18623372, 0.70006830,\n0.74851099, -3.1398323e-2, 0.66237862,\n0.34873212, 0.21680800, 0.91180053,\n0.60177950, -1.0929617e-2, 0.79858749,\n0.96165920, -0.14530750, 0.23258829,\n0.96400558, -7.2587305e-2, 0.25578177,\n0.84896160, -0.14557917, 0.50800679,\n0.96165920, -0.14530750, 0.23258829,\n0.90621762, -0.22215964, 0.35974256,\n0.86760028, -0.49001664, -8.4578025e-2,\n0.96165920, -0.14530750, 0.23258829,\n0.91568679, -0.11308736, 0.38565393,\n0.96400558, -7.2587305e-2, 0.25578177,\n0.72232434, 0.17116584, 0.67003717,\n0.87395897, 0.33656660, 0.35059756,\n0.76672216, -4.8510388e-2, 0.64014363,\n0.72232434, 0.17116584, 0.67003717,\n0.56859073, 0.37133312, 0.73404107,\n0.52276813, 0.44983316, 0.72412955,\n0.76672216, -4.8510388e-2, 0.64014363,\n0.21828117, 0.14978929, 0.96432178,\n0.72232434, 0.17116584, 0.67003717,\n0.76672216, -4.8510388e-2, 0.64014363,\n0.49571158, -0.10488718, 0.86213033,\n0.21828117, 0.14978929, 0.96432178,\n0.76672216, -4.8510388e-2, 0.64014363,\n0.34873212, 0.21680800, 0.91180053,\n0.49571158, -0.10488718, 0.86213033,\n0.76672216, -4.8510388e-2, 0.64014363,\n0.93700192, -4.2888265e-2, 0.34668140,\n0.57289371, -0.81668912, 6.9366277e-2,\n0.21828117, 0.14978929, 0.96432178,\n0.56859073, 0.37133312, 0.73404107,\n0.72232434, 0.17116584, 0.67003717,\n0.21828117, 0.14978929, 0.96432178,\n0.33987785, 0.25483502, 0.90528568,\n0.56859073, 0.37133312, 0.73404107,\n0.21828117, 0.14978929, 0.96432178,\n4.6439601e-2, 0.67351151, 0.73771649,\n0.33987785, 0.25483502, 0.90528568,\n0.81339930, -0.51581856, 0.26891037,\n0.68936302, -0.18623372, 0.70006830,\n0.64738868, -0.27848739, 0.70945942,\n0.81339930, -0.51581856, 0.26891037,\n0.90621762, -0.22215964, 0.35974256,\n0.68936302, -0.18623372, 0.70006830,\n0.64738868, -0.27848739, 0.70945942,\n0.64868598, -0.68613488, 0.32928016,\n0.81339930, -0.51581856, 0.26891037,\n0.64738868, -0.27848739, 0.70945942,\n0.62296523, -4.3173932e-2, 0.78105719,\n0.64868598, -0.68613488, 0.32928016,\n0.64738868, -0.27848739, 0.70945942,\n0.42453299, -5.6446013e-2, 0.90365125,\n0.62296523, -4.3173932e-2, 0.78105719,\n0.64738868, -0.27848739, 0.70945942,\n0.54186339, -7.1325657e-2, 0.83743460,\n0.42453299, -5.6446013e-2, 0.90365125,\n0.64868598, -0.68613488, 0.32928016,\n0.43130763, -0.45157420, 0.78105984,\n0.17579182, -0.87781318, 0.44557970,\n0.64868598, -0.68613488, 0.32928016,\n0.61976350, -0.77196689, -0.14128104,\n0.81339930, -0.51581856, 0.26891037,\n0.64868598, -0.68613488, 0.32928016,\n0.38776090, -0.91051291, -0.14355393,\n0.61976350, -0.77196689, -0.14128104,\n0.25931619, -0.59762937, 0.75867928,\n0.55877568, -0.19709070, 0.80555881,\n0.18495696, 0.17726974, 0.96662628,\n0.25931619, -0.59762937, 0.75867928,\n0.52026232, -0.17707215, 0.83544753,\n0.55877568, -0.19709070, 0.80555881,\n0.87395897, 0.33656660, 0.35059756,\n0.93700192, -4.2888265e-2, 0.34668140,\n0.76672216, -4.8510388e-2, 0.64014363,\n0.62296523, -4.3173932e-2, 0.78105719,\n0.43130763, -0.45157420, 0.78105984,\n0.64868598, -0.68613488, 0.32928016,\n0.62296523, -4.3173932e-2, 0.78105719,\n0.42453299, -5.6446013e-2, 0.90365125,\n0.26118273, 0.11802798, 0.95804644,\n0.61976350, -0.77196689, -0.14128104,\n0.86760028, -0.49001664, -8.4578025e-2,\n0.81339930, -0.51581856, 0.26891037,\n0.86892837, -0.49333455, -3.9805786e-2,\n0.86760028, -0.49001664, -8.4578025e-2,\n0.61976350, -0.77196689, -0.14128104,\n0.86892837, -0.49333455, -3.9805786e-2,\n0.87895109, -0.47689050, 4.5200487e-3,\n0.86760028, -0.49001664, -8.4578025e-2,\n0.86892837, -0.49333455, -3.9805786e-2,\n0.87545349, -0.43207784, 0.21654080,\n0.87895109, -0.47689050, 4.5200487e-3,\n0.86892837, -0.49333455, -3.9805786e-2,\n0.93440169, -0.29505744, 0.19958604,\n0.87545349, -0.43207784, 0.21654080,\n0.86760028, -0.49001664, -8.4578025e-2,\n0.90621762, -0.22215964, 0.35974256,\n0.81339930, -0.51581856, 0.26891037,\n0.86760028, -0.49001664, -8.4578025e-2,\n0.87895109, -0.47689050, 4.5200487e-3,\n0.96165920, -0.14530750, 0.23258829,\n0.40643326, -0.68638175, 0.60306890,\n0.30173193, -0.23793700, 0.92322469,\n0.25931619, -0.59762937, 0.75867928,\n0.40643326, -0.68638175, 0.60306890,\n0.65884028, -4.9015345e-3, 0.75226688,\n0.30173193, -0.23793700, 0.92322469,\n0.30173193, -0.23793700, 0.92322469,\n0.52026232, -0.17707215, 0.83544753,\n0.25931619, -0.59762937, 0.75867928,\n0.30173193, -0.23793700, 0.92322469,\n0.21080343, -0.18174454, 0.96048469,\n0.52026232, -0.17707215, 0.83544753,\n0.96400558, -7.2587305e-2, 0.25578177,\n0.87814398, -6.3836412e-2, 0.47411820,\n0.84896160, -0.14557917, 0.50800679,\n0.96400558, -7.2587305e-2, 0.25578177,\n0.95809421, -7.8438121e-2, 0.27550490,\n0.88078871, -5.2218558e-2, 0.47062136,\n0.96400558, -7.2587305e-2, 0.25578177,\n0.97305650, -0.13209374, 0.18897699,\n0.95809421, -7.8438121e-2, 0.27550490,\n0.96400558, -7.2587305e-2, 0.25578177,\n0.98479700, -8.4334415e-2, 0.15186365,\n0.97305650, -0.13209374, 0.18897699,\n0.96400558, -7.2587305e-2, 0.25578177,\n0.91568679, -0.11308736, 0.38565393,\n0.98479700, -8.4334415e-2, 0.15186365,\n0.49571158, -0.10488718, 0.86213033,\n0.65542980, 6.6728019e-3, 0.75522662,\n0.21828117, 0.14978929, 0.96432178,\n0.49571158, -0.10488718, 0.86213033,\n0.34873212, 0.21680800, 0.91180053,\n0.74851099, -3.1398323e-2, 0.66237862,\n0.25671645, 0.10756218, 0.96048271,\n0.22577111, 0.17863823, 0.95766163,\n2.7128683e-5, 7.4843997e-2, 0.99719525,\n0.25671645, 0.10756218, 0.96048271,\n0.44128413, -4.7333580e-2, 0.89611821,\n0.22577111, 0.17863823, 0.95766163,\n0.25671645, 0.10756218, 0.96048271,\n0.35487773, -0.57166783, 0.73976867,\n0.44128413, -4.7333580e-2, 0.89611821,\n0.55877568, -0.19709070, 0.80555881,\n0.46136699, 0.20437817, 0.86334817,\n0.18495696, 0.17726974, 0.96662628,\n0.55877568, -0.19709070, 0.80555881,\n0.59810804, 6.5528384e-2, 0.79873200,\n0.46136699, 0.20437817, 0.86334817,\n0.52026232, -0.17707215, 0.83544753,\n0.80992623, -0.24343170, 0.53362956,\n0.55877568, -0.19709070, 0.80555881,\n0.52026232, -0.17707215, 0.83544753,\n0.46727812, -0.29760750, 0.83251483,\n0.80992623, -0.24343170, 0.53362956,\n0.52026232, -0.17707215, 0.83544753,\n0.21080343, -0.18174454, 0.96048469,\n0.46727812, -0.29760750, 0.83251483,\n0.80992623, -0.24343170, 0.53362956,\n0.75434088, 1.2083220e-2, 0.65637172,\n0.55877568, -0.19709070, 0.80555881,\n0.80992623, -0.24343170, 0.53362956,\n0.88867645, -3.5037266e-2, 0.45719423,\n0.75434088, 1.2083220e-2, 0.65637172,\n0.80992623, -0.24343170, 0.53362956,\n0.95809421, -7.8438121e-2, 0.27550490,\n0.88867645, -3.5037266e-2, 0.45719423,\n0.46136699, 0.20437817, 0.86334817,\n0.59810804, 6.5528384e-2, 0.79873200,\n0.31922323, 4.4724694e-2, 0.94662360,\n0.56859073, 0.37133312, 0.73404107,\n0.65884028, -4.9015345e-3, 0.75226688,\n0.52276813, 0.44983316, 0.72412955,\n0.56859073, 0.37133312, 0.73404107,\n0.33987785, 0.25483502, 0.90528568,\n0.65884028, -4.9015345e-3, 0.75226688,\n0.65884028, -4.9015345e-3, 0.75226688,\n0.33987785, 0.25483502, 0.90528568,\n0.30173193, -0.23793700, 0.92322469,\n0.33987785, 0.25483502, 0.90528568,\n0.24116120, -0.42640974, 0.87178897,\n0.30173193, -0.23793700, 0.92322469,\n0.33987785, 0.25483502, 0.90528568,\n4.6439601e-2, 0.67351151, 0.73771649,\n0.24770700, 0.17483539, 0.95292908,\n0.46727812, -0.29760750, 0.83251483,\n0.88078871, -5.2218558e-2, 0.47062136,\n0.80992623, -0.24343170, 0.53362956,\n0.46727812, -0.29760750, 0.83251483,\n0.22565143, -0.61527546, 0.75532612,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.88078871, -5.2218558e-2, 0.47062136,\n0.46727812, -0.29760750, 0.83251483,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.87814398, -6.3836412e-2, 0.47411820,\n0.88078871, -5.2218558e-2, 0.47062136,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.26619601, 0.49510339, 0.82705037,\n0.65542980, 6.6728019e-3, 0.75522662,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.29057727, 0.17734710, 0.94027276,\n0.26619601, 0.49510339, 0.82705037,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.22565143, -0.61527546, 0.75532612,\n0.41158879, -0.21430713, 0.88581438,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.44556970, -8.6514088e-2, 0.89105721,\n0.29057727, 0.17734710, 0.94027276,\n0.88078871, -5.2218558e-2, 0.47062136,\n0.87814398, -6.3836412e-2, 0.47411820,\n0.96400558, -7.2587305e-2, 0.25578177,\n0.88078871, -5.2218558e-2, 0.47062136,\n0.95809421, -7.8438121e-2, 0.27550490,\n0.80992623, -0.24343170, 0.53362956,\n0.10046444, -0.37828832, 0.92022000,\n0.24116120, -0.42640974, 0.87178897,\n0.24770700, 0.17483539, 0.95292908,\n0.10046444, -0.37828832, 0.92022000,\n0.21080343, -0.18174454, 0.96048469,\n0.24116120, -0.42640974, 0.87178897,\n0.10046444, -0.37828832, 0.92022000,\n0.41158879, -0.21430713, 0.88581438,\n0.21080343, -0.18174454, 0.96048469,\n0.24770700, 0.17483539, 0.95292908,\n-7.5690586e-2, 0.25212468, 0.96473006,\n0.10046444, -0.37828832, 0.92022000,\n0.24770700, 0.17483539, 0.95292908,\n0.24116120, -0.42640974, 0.87178897,\n0.33987785, 0.25483502, 0.90528568,\n0.24770700, 0.17483539, 0.95292908,\n4.6439601e-2, 0.67351151, 0.73771649,\n-7.5690586e-2, 0.25212468, 0.96473006,\n-7.5690586e-2, 0.25212468, 0.96473006,\n0.11665595, -0.11998118, 0.98589853,\n0.10046444, -0.37828832, 0.92022000,\n-7.5690586e-2, 0.25212468, 0.96473006,\n0.29057727, 0.17734710, 0.94027276,\n0.11665595, -0.11998118, 0.98589853,\n-7.5690586e-2, 0.25212468, 0.96473006,\n4.6439601e-2, 0.67351151, 0.73771649,\n0.29057727, 0.17734710, 0.94027276,\n0.49004126, -0.65247518, 0.57804473,\n0.68588284, 5.1805806e-2, 0.72586561,\n0.30960366, -0.75166891, 0.58235678,\n0.49004126, -0.65247518, 0.57804473,\n0.93700192, -4.2888265e-2, 0.34668140,\n0.68588284, 5.1805806e-2, 0.72586561,\n0.40027018, -0.81580228, 0.41743315,\n0.57289371, -0.81668912, 6.9366277e-2,\n0.49004126, -0.65247518, 0.57804473,\n0.40027018, -0.81580228, 0.41743315,\n0.63735570, -0.21539500, 0.73985317,\n0.57289371, -0.81668912, 6.9366277e-2,\n0.40027018, -0.81580228, 0.41743315,\n0.22577111, 0.17863823, 0.95766163,\n0.63735570, -0.21539500, 0.73985317,\n0.57289371, -0.81668912, 6.9366277e-2,\n0.63735570, -0.21539500, 0.73985317,\n0.76672216, -4.8510388e-2, 0.64014363,\n0.57289371, -0.81668912, 6.9366277e-2,\n0.93700192, -4.2888265e-2, 0.34668140,\n0.49004126, -0.65247518, 0.57804473,\n0.63735570, -0.21539500, 0.73985317,\n0.34873212, 0.21680800, 0.91180053,\n0.76672216, -4.8510388e-2, 0.64014363,\n0.22577111, 0.17863823, 0.95766163,\n0.44128413, -4.7333580e-2, 0.89611821,\n0.63735570, -0.21539500, 0.73985317,\n0.44128413, -4.7333580e-2, 0.89611821,\n0.35487773, -0.57166783, 0.73976867,\n0.49541890, -8.7264484e-2, 0.86425981,\n0.44128413, -4.7333580e-2, 0.89611821,\n0.34873212, 0.21680800, 0.91180053,\n0.63735570, -0.21539500, 0.73985317,\n0.44128413, -4.7333580e-2, 0.89611821,\n0.40154553, -0.12123029, 0.90777993,\n0.60177950, -1.0929617e-2, 0.79858749,\n0.26273052, -0.27951921, 0.92349428,\n0.35487773, -0.57166783, 0.73976867,\n0.13600875, -0.57466798, 0.80700578,\n0.49950065, 0.13987663, 0.85494656,\n0.49541890, -8.7264484e-2, 0.86425981,\n0.26273052, -0.27951921, 0.92349428,\n0.49950065, 0.13987663, 0.85494656,\n0.54186339, -7.1325657e-2, 0.83743460,\n0.49541890, -8.7264484e-2, 0.86425981,\n0.49541890, -8.7264484e-2, 0.86425981,\n0.35487773, -0.57166783, 0.73976867,\n0.26273052, -0.27951921, 0.92349428,\n0.49541890, -8.7264484e-2, 0.86425981,\n0.40154553, -0.12123029, 0.90777993,\n0.44128413, -4.7333580e-2, 0.89611821,\n0.68936302, -0.18623372, 0.70006830,\n0.90621762, -0.22215964, 0.35974256,\n0.74851099, -3.1398323e-2, 0.66237862,\n0.68936302, -0.18623372, 0.70006830,\n0.54186339, -7.1325657e-2, 0.83743460,\n0.64738868, -0.27848739, 0.70945942,\n0.68936302, -0.18623372, 0.70006830,\n0.40154553, -0.12123029, 0.90777993,\n0.54186339, -7.1325657e-2, 0.83743460,\n0.75434088, 1.2083220e-2, 0.65637172,\n0.59810804, 6.5528384e-2, 0.79873200,\n0.55877568, -0.19709070, 0.80555881,\n0.42453299, -5.6446013e-2, 0.90365125,\n0.54186339, -7.1325657e-2, 0.83743460,\n0.20652701, -0.59558661, 0.77628808,\n0.54186339, -7.1325657e-2, 0.83743460,\n0.40154553, -0.12123029, 0.90777993,\n0.49541890, -8.7264484e-2, 0.86425981,\n0.24116120, -0.42640974, 0.87178897,\n0.21080343, -0.18174454, 0.96048469,\n0.30173193, -0.23793700, 0.92322469,\n0.21080343, -0.18174454, 0.96048469,\n0.41158879, -0.21430713, 0.88581438,\n0.46727812, -0.29760750, 0.83251483,\n0.65542980, 6.6728019e-3, 0.75522662,\n0.87814398, -6.3836412e-2, 0.47411820,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.65542980, 6.6728019e-3, 0.75522662,\n0.26619601, 0.49510339, 0.82705037,\n0.21828117, 0.14978929, 0.96432178,\n0.26619601, 0.49510339, 0.82705037,\n4.6439601e-2, 0.67351151, 0.73771649,\n0.21828117, 0.14978929, 0.96432178,\n0.88867645, -3.5037266e-2, 0.45719423,\n0.59810804, 6.5528384e-2, 0.79873200,\n0.75434088, 1.2083220e-2, 0.65637172,\n0.88867645, -3.5037266e-2, 0.45719423,\n0.76484447, 5.8177900e-2, 0.64158263,\n0.59810804, 6.5528384e-2, 0.79873200,\n0.60177950, -1.0929617e-2, 0.79858749,\n0.34873212, 0.21680800, 0.91180053,\n0.44128413, -4.7333580e-2, 0.89611821,\n0.60177950, -1.0929617e-2, 0.79858749,\n0.40154553, -0.12123029, 0.90777993,\n0.68936302, -0.18623372, 0.70006830,\n0.68588284, 5.1805806e-2, 0.72586561,\n0.93700192, -4.2888265e-2, 0.34668140,\n0.87395897, 0.33656660, 0.35059756,\n0.95809421, -7.8438121e-2, 0.27550490,\n0.97305650, -0.13209374, 0.18897699,\n0.88867645, -3.5037266e-2, 0.45719423,\n0.11665595, -0.11998118, 0.98589853,\n0.41158879, -0.21430713, 0.88581438,\n0.10046444, -0.37828832, 0.92022000,\n0.11665595, -0.11998118, 0.98589853,\n0.44556970, -8.6514088e-2, 0.89105721,\n0.41158879, -0.21430713, 0.88581438,\n0.41158879, -0.21430713, 0.88581438,\n0.22565143, -0.61527546, 0.75532612,\n0.46727812, -0.29760750, 0.83251483,\n0.41158879, -0.21430713, 0.88581438,\n0.44556970, -8.6514088e-2, 0.89105721,\n0.61143314, 9.8353366e-2, 0.78515994,\n0.38776090, -0.91051291, -0.14355393,\n0.12153759, -0.97003021, -0.21040439,\n0.61976350, -0.77196689, -0.14128104,\n0.29057727, 0.17734710, 0.94027276,\n4.6439601e-2, 0.67351151, 0.73771649,\n0.26619601, 0.49510339, 0.82705037,\n0.29057727, 0.17734710, 0.94027276,\n0.44556970, -8.6514088e-2, 0.89105721,\n0.11665595, -0.11998118, 0.98589853,\n0.59810804, 6.5528384e-2, 0.79873200,\n0.53607295, 0.20856977, 0.81800027,\n0.31922323, 4.4724694e-2, 0.94662360,\n0.59810804, 6.5528384e-2, 0.79873200,\n0.76484447, 5.8177900e-2, 0.64158263,\n0.53607295, 0.20856977, 0.81800027,\n0.97305650, -0.13209374, 0.18897699,\n0.98479700, -8.4334415e-2, 0.15186365,\n0.91066420, 7.0564273e-2, 0.40707666,\n0.97305650, -0.13209374, 0.18897699,\n0.95786076, -7.3061946e-2, 0.27778539,\n0.88867645, -3.5037266e-2, 0.45719423,\n0.97305650, -0.13209374, 0.18897699,\n0.95883275, -0.26001992, 0.11414641,\n0.95786076, -7.3061946e-2, 0.27778539,\n-9.2985729e-2, 0.96527304, -0.24413442,\n0.49487556, 0.72973022, 0.47179656,\n0.17607053, 0.86072719, 0.47764827,\n-9.2985729e-2, 0.96527304, -0.24413442,\n0.68675192, 0.72581795, 3.9498142e-2,\n0.49487556, 0.72973022, 0.47179656,\n-9.2985729e-2, 0.96527304, -0.24413442,\n0.71278197, 0.28863690, -0.63924221,\n0.68675192, 0.72581795, 3.9498142e-2,\n0.17607053, 0.86072719, 0.47764827,\n0.92278326, 0.27698442, 0.26786320,\n-9.2985729e-2, 0.96527304, -0.24413442,\n0.17607053, 0.86072719, 0.47764827,\n0.90375842, 4.2337142e-3, 0.42802196,\n0.92278326, 0.27698442, 0.26786320,\n0.17607053, 0.86072719, 0.47764827,\n0.91066420, 7.0564273e-2, 0.40707666,\n0.90375842, 4.2337142e-3, 0.42802196,\n0.17607053, 0.86072719, 0.47764827,\n0.49487556, 0.72973022, 0.47179656,\n0.91066420, 7.0564273e-2, 0.40707666,\n0.92278326, 0.27698442, 0.26786320,\n0.90430412, 0.32750033, -0.27382036,\n-9.2985729e-2, 0.96527304, -0.24413442,\n0.92278326, 0.27698442, 0.26786320,\n0.79750256, -0.10088194, 0.59482141,\n0.90430412, 0.32750033, -0.27382036,\n0.90375842, 4.2337142e-3, 0.42802196,\n0.84626388, -0.43148527, 0.31250266,\n0.92278326, 0.27698442, 0.26786320,\n0.90430412, 0.32750033, -0.27382036,\n-6.7541651e-2, 0.47846752, -0.87550383,\n-9.2985729e-2, 0.96527304, -0.24413442,\n0.90430412, 0.32750033, -0.27382036,\n0.21975120, -9.5430780e-2, -0.97087712,\n-6.7541651e-2, 0.47846752, -0.87550383,\n0.90430412, 0.32750033, -0.27382036,\n0.98383342, -0.17532838, 3.6493295e-2,\n0.21975120, -9.5430780e-2, -0.97087712,\n0.90430412, 0.32750033, -0.27382036,\n0.79750256, -0.10088194, 0.59482141,\n0.98383342, -0.17532838, 3.6493295e-2,\n-6.7541651e-2, 0.47846752, -0.87550383,\n0.71278197, 0.28863690, -0.63924221,\n-9.2985729e-2, 0.96527304, -0.24413442,\n-6.7541651e-2, 0.47846752, -0.87550383,\n0.37227171, -0.40038504, -0.83732048,\n0.71278197, 0.28863690, -0.63924221,\n0.21975120, -9.5430780e-2, -0.97087712,\n0.37227171, -0.40038504, -0.83732048,\n-6.7541651e-2, 0.47846752, -0.87550383,\n0.98383342, -0.17532838, 3.6493295e-2,\n-2.2853355e-2, -0.59660465, -0.80220983,\n0.21975120, -9.5430780e-2, -0.97087712,\n0.98383342, -0.17532838, 3.6493295e-2,\n0.78763624, 0.26354435, 0.55693224,\n0.94628194, -0.32320408, 9.4663552e-3,\n0.94628194, -0.32320408, 9.4663552e-3,\n-2.2853355e-2, -0.59660465, -0.80220983,\n0.98383342, -0.17532838, 3.6493295e-2,\n0.94628194, -0.32320408, 9.4663552e-3,\n0.78763624, 0.26354435, 0.55693224,\n0.87297590, -0.16267217, 0.45983785,\n0.87297590, -0.16267217, 0.45983785,\n0.31213546, -0.94940504, 3.4663170e-2,\n0.94628194, -0.32320408, 9.4663552e-3,\n0.87297590, -0.16267217, 0.45983785,\n0.69244322, -0.57303376, 0.43835452,\n0.31213546, -0.94940504, 3.4663170e-2,\n0.87297590, -0.16267217, 0.45983785,\n0.85051996, 0.16878240, 0.49812478,\n0.69244322, -0.57303376, 0.43835452,\n0.87297590, -0.16267217, 0.45983785,\n0.78763624, 0.26354435, 0.55693224,\n0.85051996, 0.16878240, 0.49812478,\n0.31213546, -0.94940504, 3.4663170e-2,\n-2.2853355e-2, -0.59660465, -0.80220983,\n0.94628194, -0.32320408, 9.4663552e-3,\n0.31213546, -0.94940504, 3.4663170e-2,\n0.43641299, -0.85877848, -0.26840870,\n-2.2853355e-2, -0.59660465, -0.80220983,\n0.31213546, -0.94940504, 3.4663170e-2,\n0.50082371, -0.84845164, 0.17118826,\n0.43641299, -0.85877848, -0.26840870,\n-2.2853355e-2, -0.59660465, -0.80220983,\n0.37227171, -0.40038504, -0.83732048,\n0.21975120, -9.5430780e-2, -0.97087712,\n-2.2853355e-2, -0.59660465, -0.80220983,\n0.15992743, -0.60138538, -0.78278914,\n0.37227171, -0.40038504, -0.83732048,\n-2.2853355e-2, -0.59660465, -0.80220983,\n0.43641299, -0.85877848, -0.26840870,\n0.15992743, -0.60138538, -0.78278914,\n0.69244322, -0.57303376, 0.43835452,\n0.50082371, -0.84845164, 0.17118826,\n0.31213546, -0.94940504, 3.4663170e-2,\n0.69244322, -0.57303376, 0.43835452,\n0.87895109, -0.47689050, 4.5200487e-3,\n0.50082371, -0.84845164, 0.17118826,\n0.69244322, -0.57303376, 0.43835452,\n0.93308173, -0.22887162, 0.27744598,\n0.87895109, -0.47689050, 4.5200487e-3,\n0.85051996, 0.16878240, 0.49812478,\n0.89674641, -0.14364515, 0.41858327,\n0.69244322, -0.57303376, 0.43835452,\n0.85051996, 0.16878240, 0.49812478,\n0.98153525, -0.17920784, -6.6881251e-2,\n0.89674641, -0.14364515, 0.41858327,\n0.85051996, 0.16878240, 0.49812478,\n0.99482852, 9.9026350e-2, 2.2583156e-2,\n0.98153525, -0.17920784, -6.6881251e-2,\n0.91066420, 7.0564273e-2, 0.40707666,\n0.86330947, -0.40080972, 0.30667301,\n0.90375842, 4.2337142e-3, 0.42802196,\n0.91066420, 7.0564273e-2, 0.40707666,\n0.89674641, -0.14364515, 0.41858327,\n0.86330947, -0.40080972, 0.30667301,\n0.91066420, 7.0564273e-2, 0.40707666,\n0.49487556, 0.72973022, 0.47179656,\n0.97305650, -0.13209374, 0.18897699,\n0.91066420, 7.0564273e-2, 0.40707666,\n0.98113796, -8.5225857e-2, 0.17350750,\n0.89674641, -0.14364515, 0.41858327,\n0.91066420, 7.0564273e-2, 0.40707666,\n0.98479700, -8.4334415e-2, 0.15186365,\n0.98113796, -8.5225857e-2, 0.17350750,\n0.86330947, -0.40080972, 0.30667301,\n0.84626388, -0.43148527, 0.31250266,\n0.90375842, 4.2337142e-3, 0.42802196,\n0.86330947, -0.40080972, 0.30667301,\n0.95853707, -0.28400491, -2.3407041e-2,\n0.84626388, -0.43148527, 0.31250266,\n0.84626388, -0.43148527, 0.31250266,\n0.79750256, -0.10088194, 0.59482141,\n0.92278326, 0.27698442, 0.26786320,\n0.84626388, -0.43148527, 0.31250266,\n0.91075116, -0.10945587, 0.39818556,\n0.79750256, -0.10088194, 0.59482141,\n0.79750256, -0.10088194, 0.59482141,\n0.78763624, 0.26354435, 0.55693224,\n0.98383342, -0.17532838, 3.6493295e-2,\n0.79750256, -0.10088194, 0.59482141,\n0.91075116, -0.10945587, 0.39818556,\n0.78763624, 0.26354435, 0.55693224,\n0.78763624, 0.26354435, 0.55693224,\n0.99482852, 9.9026350e-2, 2.2583156e-2,\n0.85051996, 0.16878240, 0.49812478,\n0.78763624, 0.26354435, 0.55693224,\n0.95161788, -0.12922260, 0.27879192,\n0.99482852, 9.9026350e-2, 2.2583156e-2,\n0.78763624, 0.26354435, 0.55693224,\n0.91075116, -0.10945587, 0.39818556,\n0.95161788, -0.12922260, 0.27879192,\n0.89674641, -0.14364515, 0.41858327,\n0.98153525, -0.17920784, -6.6881251e-2,\n0.86330947, -0.40080972, 0.30667301,\n0.89674641, -0.14364515, 0.41858327,\n0.93308173, -0.22887162, 0.27744598,\n0.69244322, -0.57303376, 0.43835452,\n0.89674641, -0.14364515, 0.41858327,\n0.98113796, -8.5225857e-2, 0.17350750,\n0.93308173, -0.22887162, 0.27744598,\n0.98153525, -0.17920784, -6.6881251e-2,\n0.95853707, -0.28400491, -2.3407041e-2,\n0.86330947, -0.40080972, 0.30667301,\n0.98153525, -0.17920784, -6.6881251e-2,\n0.91075116, -0.10945587, 0.39818556,\n0.95853707, -0.28400491, -2.3407041e-2,\n0.99482852, 9.9026350e-2, 2.2583156e-2,\n0.95161788, -0.12922260, 0.27879192,\n0.98153525, -0.17920784, -6.6881251e-2,\n0.95161788, -0.12922260, 0.27879192,\n0.91075116, -0.10945587, 0.39818556,\n0.98153525, -0.17920784, -6.6881251e-2,\n0.95853707, -0.28400491, -2.3407041e-2,\n0.91075116, -0.10945587, 0.39818556,\n0.84626388, -0.43148527, 0.31250266,\n0.49487556, 0.72973022, 0.47179656,\n0.95883275, -0.26001992, 0.11414641,\n0.97305650, -0.13209374, 0.18897699,\n0.68675192, 0.72581795, 3.9498142e-2,\n0.95883275, -0.26001992, 0.11414641,\n0.49487556, 0.72973022, 0.47179656,\n0.71278197, 0.28863690, -0.63924221,\n0.95883275, -0.26001992, 0.11414641,\n0.68675192, 0.72581795, 3.9498142e-2,\n0.71278197, 0.28863690, -0.63924221,\n0.98969692, -0.14219932, 1.6714005e-2,\n0.95883275, -0.26001992, 0.11414641,\n0.37227171, -0.40038504, -0.83732048,\n0.98969692, -0.14219932, 1.6714005e-2,\n0.71278197, 0.28863690, -0.63924221,\n0.37227171, -0.40038504, -0.83732048,\n0.89392426, -0.27398006, -0.35473136,\n0.98969692, -0.14219932, 1.6714005e-2,\n0.37227171, -0.40038504, -0.83732048,\n0.84486524, -0.51528925, -0.14380443,\n0.89392426, -0.27398006, -0.35473136,\n0.15992743, -0.60138538, -0.78278914,\n0.84486524, -0.51528925, -0.14380443,\n0.37227171, -0.40038504, -0.83732048,\n0.43641299, -0.85877848, -0.26840870,\n0.84486524, -0.51528925, -0.14380443,\n0.15992743, -0.60138538, -0.78278914,\n0.43641299, -0.85877848, -0.26840870,\n0.93440169, -0.29505744, 0.19958604,\n0.84486524, -0.51528925, -0.14380443,\n0.50082371, -0.84845164, 0.17118826,\n0.87545349, -0.43207784, 0.21654080,\n0.43641299, -0.85877848, -0.26840870,\n0.87895109, -0.47689050, 4.5200487e-3,\n0.91568679, -0.11308736, 0.38565393,\n0.96165920, -0.14530750, 0.23258829,\n0.87895109, -0.47689050, 4.5200487e-3,\n0.87545349, -0.43207784, 0.21654080,\n0.50082371, -0.84845164, 0.17118826,\n0.93308173, -0.22887162, 0.27744598,\n0.91568679, -0.11308736, 0.38565393,\n0.87895109, -0.47689050, 4.5200487e-3,\n0.98113796, -8.5225857e-2, 0.17350750,\n0.91568679, -0.11308736, 0.38565393,\n0.93308173, -0.22887162, 0.27744598,\n0.98479700, -8.4334415e-2, 0.15186365,\n0.91568679, -0.11308736, 0.38565393,\n0.98113796, -8.5225857e-2, 0.17350750,\n0.87545349, -0.43207784, 0.21654080,\n0.93440169, -0.29505744, 0.19958604,\n0.43641299, -0.85877848, -0.26840870,\n0.95786076, -7.3061946e-2, 0.27778539,\n0.76484447, 5.8177900e-2, 0.64158263,\n0.88867645, -3.5037266e-2, 0.45719423,\n0.95786076, -7.3061946e-2, 0.27778539,\n0.83318755, 0.42496712, 0.35383816,\n0.76484447, 5.8177900e-2, 0.64158263,\n0.53607295, 0.20856977, 0.81800027,\n0.27755270, 0.74436260, 0.60736219,\n1.2901833e-6, 0.37420721, 0.92734511,\n0.53607295, 0.20856977, 0.81800027,\n0.60240823, 0.58227127, 0.54595283,\n0.27755270, 0.74436260, 0.60736219,\n0.76484447, 5.8177900e-2, 0.64158263,\n0.60240823, 0.58227127, 0.54595283,\n0.53607295, 0.20856977, 0.81800027,\n0.95883275, -0.26001992, 0.11414641,\n0.97884637, 0.20436707, 9.6898902e-3,\n0.95786076, -7.3061946e-2, 0.27778539,\n0.95883275, -0.26001992, 0.11414641,\n0.88897194, 0.16285070, -0.42802867,\n0.97884637, 0.20436707, 9.6898902e-3,\n0.95883275, -0.26001992, 0.11414641,\n0.98969692, -0.14219932, 1.6714005e-2,\n0.88897194, 0.16285070, -0.42802867,\n0.27755270, 0.74436260, 0.60736219,\n0.47032259, 0.86439907, 0.17779456,\n9.0655817e-10, 0.98618858, 0.16562634,\n0.27755270, 0.74436260, 0.60736219,\n0.60240823, 0.58227127, 0.54595283,\n0.47032259, 0.86439907, 0.17779456,\n0.47032259, 0.86439907, 0.17779456,\n0.78083848, 0.61729662, 9.6104840e-2,\n0.75463559, 0.60415341, -0.25597614,\n0.47032259, 0.86439907, 0.17779456,\n0.83318755, 0.42496712, 0.35383816,\n0.78083848, 0.61729662, 9.6104840e-2,\n0.47032259, 0.86439907, 0.17779456,\n0.60240823, 0.58227127, 0.54595283,\n0.83318755, 0.42496712, 0.35383816,\n0.47032259, 0.86439907, 0.17779456,\n0.19797971, 0.92283363, -0.33042719,\n9.0655817e-10, 0.98618858, 0.16562634,\n0.97884637, 0.20436707, 9.6898902e-3,\n0.83318755, 0.42496712, 0.35383816,\n0.95786076, -7.3061946e-2, 0.27778539,\n0.97884637, 0.20436707, 9.6898902e-3,\n0.88897194, 0.16285070, -0.42802867,\n0.75463559, 0.60415341, -0.25597614,\n0.75463559, 0.60415341, -0.25597614,\n0.78083848, 0.61729662, 9.6104840e-2,\n0.97884637, 0.20436707, 9.6898902e-3,\n0.75463559, 0.60415341, -0.25597614,\n0.19797971, 0.92283363, -0.33042719,\n0.47032259, 0.86439907, 0.17779456,\n0.75463559, 0.60415341, -0.25597614,\n0.33574730, 0.50445540, -0.79548633,\n0.19797971, 0.92283363, -0.33042719,\n0.75463559, 0.60415341, -0.25597614,\n0.88897194, 0.16285070, -0.42802867,\n0.33574730, 0.50445540, -0.79548633,\n0.78083848, 0.61729662, 9.6104840e-2,\n0.83318755, 0.42496712, 0.35383816,\n0.97884637, 0.20436707, 9.6898902e-3,\n0.83318755, 0.42496712, 0.35383816,\n0.60240823, 0.58227127, 0.54595283,\n0.76484447, 5.8177900e-2, 0.64158263,\n0.19797971, 0.92283363, -0.33042719,\n0.33574730, 0.50445540, -0.79548633,\n1.3386983e-8, 0.79146180, -0.61121864,\n0.88897194, 0.16285070, -0.42802867,\n0.37045953, 7.1355467e-2, -0.92610374,\n0.33574730, 0.50445540, -0.79548633,\n0.98969692, -0.14219932, 1.6714005e-2,\n0.89392426, -0.27398006, -0.35473136,\n0.88897194, 0.16285070, -0.42802867,\n0.89392426, -0.27398006, -0.35473136,\n0.37045953, 7.1355467e-2, -0.92610374,\n0.88897194, 0.16285070, -0.42802867,\n0.89392426, -0.27398006, -0.35473136,\n0.47206472, 8.2141833e-2, -0.87772867,\n0.37045953, 7.1355467e-2, -0.92610374,\n0.89392426, -0.27398006, -0.35473136,\n0.84486524, -0.51528925, -0.14380443,\n0.47206472, 8.2141833e-2, -0.87772867,\n0.37045953, 7.1355467e-2, -0.92610374,\n7.9747838e-3, -3.8615769e-2, -0.99922231,\n0.33574730, 0.50445540, -0.79548633,\n0.37045953, 7.1355467e-2, -0.92610374,\n-0.25784824, -0.11679898, -0.95909972,\n7.9747838e-3, -3.8615769e-2, -0.99922231,\n0.47206472, 8.2141833e-2, -0.87772867,\n0.33703869, -0.52254582, -0.78316715,\n-0.37721564, -0.82465139, -0.42149548,\n0.47206472, 8.2141833e-2, -0.87772867,\n-0.25784824, -0.11679898, -0.95909972,\n0.37045953, 7.1355467e-2, -0.92610374,\n0.84486524, -0.51528925, -0.14380443,\n0.84582626, -0.42662223, 0.32026771,\n0.47206472, 8.2141833e-2, -0.87772867,\n0.84486524, -0.51528925, -0.14380443,\n-0.37721564, -0.82465139, -0.42149548,\n0.84582626, -0.42662223, 0.32026771,\n0.84582626, -0.42662223, 0.32026771,\n0.33703869, -0.52254582, -0.78316715,\n0.47206472, 8.2141833e-2, -0.87772867,\n-0.37721564, -0.82465139, -0.42149548,\n0.33703869, -0.52254582, -0.78316715,\n0.84582626, -0.42662223, 0.32026771,\n-0.37721564, -0.82465139, -0.42149548,\n-0.25784824, -0.11679898, -0.95909972,\n0.47206472, 8.2141833e-2, -0.87772867,\n  ],\n};\n\nexport {\n  HeadData\n}","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","/**\r\n * Created by Rick on 2022-01-11.\r\n */\r\n'use strict';\r\n\r\n/** @function createGLcontext\r\n * Create a WebGLRenderingContext from a canvas id.\r\n *\r\n * @param {string} canvas_id The html dom id for the canvas.\r\n * @param {string} context_type The context type. Acceptable values are '2d', 'webgl', 'webgl2', 'bitmaprenderer'.\r\n * @param {Object} options A set of options for the context. See {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext}.\r\n * @returns {{gl: WebGLRenderingContext, canvas: HTMLElement}}\r\n */\r\nfunction createGLcontext(canvas_id, context_type='webgl2', options){\r\n  // One-time initialization of the scene.\r\n  const canvas = document.getElementById(canvas_id);\r\n  if(!canvas){\r\n    throw new Error(`HelperFunctions-createGLContext-Error: Could not locate canvas element with id ${canvas_id}`);\r\n  }\r\n  // Create a WebGLRenderingContext\r\n  const gl = canvas.getContext(context_type, options);\r\n\r\n  return {\r\n    gl: gl,\r\n    canvas: canvas\r\n  };\r\n}\r\n\r\n/** @function\r\n * Initialize the WebGLRenderingContext by clearing the canvas and giving by default a white background.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to be initialized.\r\n * @param {number[]} color_v4 A 4 element array where the first three values are the normalized RGB values for\r\n *   the canvas background. The fourth is the alpha value.\r\n */\r\nfunction initializeContext(gl, color_v4 = [0.9, 0.9, 0.9, 1]){\r\n  // Clear the canvas (red, gree, blue, alpha)\r\n  gl.clearColor(color_v4[0], color_v4[1], color_v4[2], color_v4[3]);  // clear to black, fully opaque\r\n  gl.clearDepth(1.0);  // clear everything\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n  gl.enable(gl.DEPTH_TEST);\r\n  gl.depthFunc(gl.LEQUAL);\r\n}\r\n\r\n/** @function\r\n * Check that the size of the canvas with the css values for width and height are the same.\r\n *\r\n * @param {HTMLElement} canvas The HTML canvas element whose size is to be checked.\r\n * @returns {boolean} Returns TRUE if the size was reassigned.\r\n */\r\nfunction resizeCanvasToDisplaySize(canvas){\r\n  // Lookup the size the browser is displaying the canvas in css pixels\r\n  const displayWidth = canvas.clientWidth;\r\n  const displayHeight = canvas.clientHeight;\r\n\r\n  // Check if the canvas is not the same size\r\n  const needResize = canvas.width !== displayWidth ||\r\n    canvas.height !== displayHeight;\r\n\r\n  if(needResize) {\r\n    // Make the canvas the same size\r\n    canvas.width = displayWidth;\r\n    canvas.height = displayHeight;\r\n  }\r\n\r\n  return needResize;\r\n}\r\n\r\n/**\r\n * // Given a canvas element, expand it to the size of the window\r\n // and ensure that it automatically resizes as the window changes\r\n * @param {HTMLElement} canvas The HTML canvas element whose size is to be resized.\r\n */\r\nfunction autoResizeCanvas(canvas){\r\n  const expandFullScreen = () => {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n  };\r\n  expandFullScreen();\r\n  // Resize screen when the browser has triggered the resize event\r\n  window.addEventListener('resize', expandFullScreen);\r\n}\r\n\r\n/** @function\r\n * Create a complete rendering program {WebGLProgram}\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGL context from the canvas.\r\n * @param {WebGLShader} vertex_shader The program's vertex shader.\r\n * @param {WebGLShader} frag_shader The program's fragment shader.\r\n * @returns {WebGLProgram}\r\n */\r\nfunction createProgram(gl, vertex_shader, frag_shader){\r\n  const program = gl.createProgram();\r\n\r\n  // Attach the shader objects\r\n  gl.attachShader(program, vertex_shader);\r\n  gl.attachShader(program, frag_shader);\r\n\r\n  // Link the WebGLProgram object\r\n  gl.linkProgram(program);\r\n\r\n  // Check for success\r\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n\r\n  if(!success) {\r\n    const program_info = gl.getProgramInfoLog(program);\r\n    gl.deleteProgram(program);\r\n    throw new Error(`HelperFunctions-createProgram-Error: ${program_info}`);\r\n  }else {\r\n    return program;\r\n  }\r\n}\r\n\r\n/** @function\r\n * Creates a shader object {WebGLShader} given\r\n *   the source code. See [WebGLShader]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLShader}\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGL context from the canvas\r\n * @param {number} type The type of shader, either gl.VERTEX_SHADER or gl.FRAGMENT_SHADER.\r\n * @param {string} source The code/text of the shader.\r\n * @returns {WebGLShader}\r\n */\r\nfunction createShader(gl, type, source){\r\n  const shader = gl.createShader(type);\r\n  // Put the source code into the gl shader object\r\n  gl.shaderSource(shader, source);\r\n  // Compile the shader code\r\n  gl.compileShader(shader);\r\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n\r\n  if(!success){\r\n    const shader_info = gl.getShaderInfoLog(shader);\r\n    gl.deleteShader(shader);\r\n    throw new Error(`HelperFunctions-createShader-Error: ${shader_info}`);\r\n  }else {\r\n    return shader;\r\n  }\r\n}\r\n\r\n/**\r\n * Clean the Vertex Array Object(vbo) buffer, the\r\n *   vertex buffer, and the element array buffer.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGL context from the canvas\r\n */\r\nfunction cleanBuffers(gl){\r\n  if(gl !== undefined){\r\n    gl.bindVertexArray(null);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n  }\r\n}\r\n\r\n// Returns computed normals for provided vertices.\r\n// Note: Indices have to be completely defined--NO TRIANGLE_STRIP only TRIANGLES.\r\nfunction calculateNormals(vs, ind) {\r\n  const\r\n    x = 0,\r\n    y = 1,\r\n    z = 2,\r\n    ns = [];\r\n\r\n  // For each vertex, initialize normal x, normal y, normal z\r\n  for (let i = 0; i < vs.length; i += 3) {\r\n    ns[i + x] = 0.0;\r\n    ns[i + y] = 0.0;\r\n    ns[i + z] = 0.0;\r\n  }\r\n\r\n  // We work on triads of vertices to calculate\r\n  for (let i = 0; i < ind.length; i += 3) {\r\n    // Normals so i = i+3 (i = indices index)\r\n    const v1 = [], v2 = [], normal = [];\r\n\r\n    // p2 - p1\r\n    v1[x] = vs[3 * ind[i + 2] + x] - vs[3 * ind[i + 1] + x];\r\n    v1[y] = vs[3 * ind[i + 2] + y] - vs[3 * ind[i + 1] + y];\r\n    v1[z] = vs[3 * ind[i + 2] + z] - vs[3 * ind[i + 1] + z];\r\n\r\n    // p0 - p1\r\n    v2[x] = vs[3 * ind[i] + x] - vs[3 * ind[i + 1] + x];\r\n    v2[y] = vs[3 * ind[i] + y] - vs[3 * ind[i + 1] + y];\r\n    v2[z] = vs[3 * ind[i] + z] - vs[3 * ind[i + 1] + z];\r\n\r\n    // Cross product by Sarrus Rule\r\n    normal[x] = v1[y] * v2[z] - v1[z] * v2[y];\r\n    normal[y] = v1[z] * v2[x] - v1[x] * v2[z];\r\n    normal[z] = v1[x] * v2[y] - v1[y] * v2[x];\r\n\r\n    // Update the normals of that triangle: sum of vectors\r\n    for (let j = 0; j < 3; j++) {\r\n      ns[3 * ind[i + j] + x] = ns[3 * ind[i + j] + x] + normal[x];\r\n      ns[3 * ind[i + j] + y] = ns[3 * ind[i + j] + y] + normal[y];\r\n      ns[3 * ind[i + j] + z] = ns[3 * ind[i + j] + z] + normal[z];\r\n    }\r\n  }\r\n\r\n  // Normalize the result.\r\n  // The increment here is because each vertex occurs.\r\n  for (let i = 0; i < vs.length; i += 3) {\r\n    // With an offset of 3 in the array (due to x, y, z contiguous values)\r\n    const nn = [];\r\n    nn[x] = ns[i + x];\r\n    nn[y] = ns[i + y];\r\n    nn[z] = ns[i + z];\r\n\r\n    let len = Math.sqrt((nn[x] * nn[x]) + (nn[y] * nn[y]) + (nn[z] * nn[z]));\r\n    if (len === 0) len = 1.0;\r\n\r\n    nn[x] = nn[x] / len;\r\n    nn[y] = nn[y] / len;\r\n    nn[z] = nn[z] / len;\r\n\r\n    ns[i + x] = nn[x];\r\n    ns[i + y] = nn[y];\r\n    ns[i + z] = nn[z];\r\n  }\r\n\r\n  return ns;\r\n}\r\n\r\n/**\r\n * Convert hex string color to rgb array\r\n *\r\n * @param hex_str A hex string in form '#_____'\r\n * @returns {number[]} An 3 element array of integers for RGB color\r\n */\r\nfunction hexToRGB(hex_str) {\r\n  const hex = parseInt(hex_str.replace(/^#/, ''), 16);\r\n  const red = (hex >> 16) & 0xFF;\r\n  const green = (hex >> 8) & 0xFF;\r\n  const blue = hex & 0xFF;\r\n  return [red, green, blue];\r\n}\r\n\r\n/**\r\n * Convert rgb array to hex string\r\n *\r\n * @param {number[]} rgb A integer array for RGB color\r\n * @returns {string} A hex string of the RGB color\r\n */\r\nfunction rgbToHex(rgb){\r\n  const red = rgb[0] << 16;\r\n  const green = rgb[1] << 8;\r\n  const blue = rgb[2];\r\n\r\n  return \"#\" + ((1 << 24) + red + green + blue).toString(16).slice(1,7);\r\n}\r\n\r\n/**\r\n * De-normalize colors from 0-1 to 0-255\r\n *\r\n * @param {number[]} color A normalized color array with values from 0-1\r\n * @returns {number[]} An integer color array with values from 0-255\r\n */\r\nfunction denormalizeColor(color) {\r\n  return color.map((c) => c * 255);\r\n}\r\n\r\n// Normalize colors from 0-255 to 0-1\r\n/**\r\n *\r\n * @param color An integer RGB color array with values from 0-255\r\n * @returns {number[]} A normalized RGB color array with values from 0-1\r\n */\r\nfunction normalizeColor(color) {\r\n  return color.map((c) => c / 255);\r\n}\r\n\r\nexport{\r\n  createGLcontext,\r\n  initializeContext,\r\n  resizeCanvasToDisplaySize,\r\n  autoResizeCanvas,\r\n  createProgram,\r\n  createShader,\r\n  cleanBuffers,\r\n  calculateNormals,\r\n  hexToRGB,\r\n  rgbToHex,\r\n  denormalizeColor,\r\n  normalizeColor\r\n}","/**\n * Created by Rick on 2021-12-11.\n */\n'use strict';\n\n/**\n * ArrayBufferClass provides functions for working with a vertex shader's attribute variables.\n *   The class establishes an array buffer for sending vertex attributes, such as vertex coordinates,\n *   texture coordinate data, or vertex color data through the graphics hardware pipeline.\n *   See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/WebGLBuffer) for a\n *     description of data buffers.\n *   See [WebGL Fundamentals](https://webgl2fundamentals.org/webgl/lessons/webgl-fundamentals.html) for\n *     an explanation on data buffers.\n *\n */\nexport default class ArrayBufferClass {\n  /**\n   * Create an AttributeClass instance\n   * @param {WebGLRenderingContext} gl The WebGL context\n   * @param {number} type  Specifying the [data type]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer}\n   *   of each element in the array.\n   * @param {WebGLProgram} program The WebGL program.\n   * @param {string} name The name of the attribute variable used in the vertex shader code.\n   */\n  constructor(gl,type, program, name) {\n    this.gl = gl;\n    this.buffer_type = 'ARRAY';\n    this.data_type = type;\n    // Look up where the attribute needs to go\n    this.attributeLocation = this.gl.getAttribLocation(program, name);\n    this.arrayBuffer = this.gl.createBuffer();\n  }\n\n  /**\n   * Describes how the attribute is read from the buffer pipeline.\n   * @param {number} size  The number of components per vertex attribute. Must be 1, 2, 3, or 4.\n   * @param {boolean} normalize Specifying whether integer data values should be normalized.\n   * @param {number} stride Specifying the offset in bytes between the beginning of consecutive vertex attributes.\n   * @param {number} offset Specifying an offset in bytes of the first component in the vertex attribute array.\n   */\n  bufferFormat(size, normalize, stride, offset) {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.arrayBuffer);\n    // Tell the attribute how to get data out of the internal ARRAY_BUFFER\n    this.gl.vertexAttribPointer(\n      this.attributeLocation,\n      size,\n      this.data_type,\n      normalize,\n      stride,\n      offset\n    );\n    this.gl.enableVertexAttribArray(this.attributeLocation);\n  }\n\n  /**\n   * Initializes and creates the buffer object's data store.\n   * @param {Array} attributes Array containing\n   *   vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.\n   * @param {number} usage Specifies the intended [usage pattern]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData} of the data store for optimization purposes.\n   */\n  setData(attributes, usage){\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.arrayBuffer);\n    // Check if we need to flatten 'attributes'\n    let values;\n    values = attributes;\n    if(typeof(attributes[0]) == 'number'){\n      values = new Array(attributes.length);\n      for(let i = 0; i<attributes.length; i++)\n        values[i] = attributes[i];\n    }else if(Array.isArray(attributes)){\n      values = new Array(attributes.length * attributes[0].length);\n      for(let i = 0; i < attributes.length; i++) {\n        for(let j = 0; j < attributes[0].length; j++){\n          values[i * attributes[0].length + j] = attributes[i][j];\n        }\n      }\n    }\n\n    // Set geometry\n    switch(this.data_type){\n      case this.gl.FLOAT:\n        this.gl.bufferData(\n          this.gl.ARRAY_BUFFER,\n          new Float32Array(values),\n          usage\n        );\n      break;\n      case this.gl.UNSIGNED_BYTE:\n        this.gl.bufferData(\n          this.gl.ARRAY_BUFFER,\n          new Uint8Array(values),\n          usage\n        );\n        break;\n    }\n  }\n\n  /**\n   * Delete this classes array buffer instance\n   */\n  delete(){\n    this.gl.deleteBuffer(this.arrayBuffer);\n  }\n}","/**\n * Created by Rick on 2022-01-01.\n */\n'use strict';\n\nimport {toRadian as m4_toRadian} from \"gl-matrix/esm/common\";\nimport {\n  create as m4_create,\n  fromScaling as m4_fromScaling,\n  fromTranslation as m4_fromTranslation,\n  fromRotation as m4_fromRotation,\n  fromXRotation as m4_fromXRotation,\n  fromYRotation as m4_fromYRotation,\n  fromZRotation as m4_fromZRotation,\n  ortho as m4_ortho,\n  perspective as m4_perspective\n} from \"gl-matrix/esm/mat4\";\n\n/**\n * TransformsClass provides convenience functions for\n *   creating transform related matrices from the\n *   [gl-matrix library]{@link https://glmatrix.net/}\n */\nexport default class TransformsClass {\n  /**\n   * Creates a flattened 4x4 orthogonal projection matrix with the given bounds.\n   * @param {number} left\n   * @param {number} right\n   * @param {number} bottom\n   * @param {number} top\n   * @param {number} near\n   * @param {number} far\n   * @returns {Float32Array} A flattened 4x4 orthogonal projection matrix\n   */\n  static getOrthoMatrix(left, right, bottom, top, near, far){\n    const ortho_m4 = m4_create();\n    m4_ortho(ortho_m4, left, right, bottom, top, near, far);\n    return ortho_m4;\n  }\n\n  /**\n   * Creates a flattened 4x4 perspective matrix\n   * @param {number} fov Vertical field of view in degrees.\n   * @param {number} aspect Aspect ratio. typically viewport width/height.\n   * @param {number} zNear Near bound of the frustum.\n   * @param {number}zFar Far bound of the frustum, can be null or Infinity.\n   * @returns {Float32Array} A flattened 4x4 perspective matrix.\n   */\n  static getPerspectiveMatrix(fov, aspect, zNear, zFar){\n    const perspective_m4 = m4_create();\n    m4_perspective(perspective_m4, m4_toRadian(fov), aspect, zNear, zFar);\n    return perspective_m4;\n  }\n\n  /**\n   * Creates a 4x4 flattened translation matrix\n   * @param {Float32Array} translate_v A 3 element float array of x, y, z translation.\n   * @returns {Float32Array} A flattened 4x4 translation matrix.\n   */\n  static getTranslationMatrix(translate_v){\n    const translate_m4 = m4_create();\n    m4_fromTranslation(translate_m4, translate_v);\n    return translate_m4\n  }\n\n  /**\n   * Creates a flattened 4x4 matrix from a given angle around a given axis.\n   * @param {number} rotation_deg The angle to rotate the matrix by\n   * @param {number[]} axis_v The three element vector that defines\n   *   the line of rotation from [0,0,0] to axis[dx,dy,dz].\n   * @returns {Float32Array} A flattened 4x4 rotation matrix\n   */\n  static getRotationMatrix(rotation_deg, axis_v){\n    const rotate_m4 = m4_create();\n    m4_fromRotation(rotate_m4, m4_toRadian(rotation_deg), axis_v);\n    return rotate_m4;\n  }\n\n  /**\n   * Creates a flattened 4x4 rotation matrix for a specific axis.\n   * @param {string} axis Axis of rotation \"x\", \"Y\", or \"z\".\n   * @param {number} rotation_deg in degrees\n   * @returns {Float32Array} A flattened 4x4 rotation matrix\n   */\n  static getXYZRotationMatrix(axis, rotation_deg){\n    const rotate_m4 = m4_create();\n    if(axis === 'x'){\n      m4_fromXRotation(rotate_m4, m4_toRadian(rotation_deg));\n    }else if(axis === 'y'){\n      m4_fromYRotation(rotate_m4, m4_toRadian(rotation_deg));\n    }else if(axis === 'z'){\n      m4_fromZRotation(rotate_m4, m4_toRadian(rotation_deg));\n    }\n    return rotate_m4;\n  }\n\n  /**\n   * Creates a flattened 4x4 scaling matrix\n   * @param {Float32Array} scale_v A 3 element float array of x, y, z scaling.\n   * @returns {Float32Array} A flattened 4x4 scale matrix\n   */\n  static getScaleMatrix(scale_v){\n    const scale_m4 = m4_create();\n    m4_fromScaling(scale_m4, scale_v);\n    return scale_m4;\n  }\n}","/**\r\n * Created by Rick on 2021-12-11.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * UniformClass creates and sets various types\r\n *   of [uniform variables]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform}\r\n *   defined in shader code.\r\n */\r\nexport default class UniformClass {\r\n  /**\r\n   * Create a UninformClass instance\r\n   * @param {WebGLRenderingContext} gl The WebGL context.\r\n   * @param {WebGLProgram} program The WebGL program.\r\n   * @param {string} name The name of the uniform variable used in the shader code.\r\n   * @param {string} type The type of uniform variable.\r\n   */\r\n  constructor(gl, program, name, type) {\r\n    this.gl = gl;\r\n    this.data_type = type;\r\n    this.data = null;\r\n    // Look up where the uniform needs to go\r\n    this.uniformLocation = gl.getUniformLocation(program, name);\r\n  }\r\n\r\n  /**\r\n   * Set the value of the uniform variable.\r\n   * @param {number[]} args Array of values for the uniform variable.\r\n   *   The number of array elements submitted depends on the type of\r\n   *   variable being set.\r\n   */\r\n  setData(...args){\r\n    switch (this.data_type) {\r\n      case 'uniform1i':\r\n        this.gl.uniform1i(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniform1f':\r\n        this.gl.uniform1f(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniform2f':\r\n        this.gl.uniform2f(this.uniformLocation, args[0], args[1]);\r\n        this.data = [args[0], args[1]];\r\n        break;\r\n      case 'uniform4f':\r\n        this.gl.uniform4f(this.uniformLocation, args[0], args[1], args[2], args[3]);\r\n        this.data = [args[0], args[1], args[2], args[3]];\r\n        break;\r\n      case 'uniform2fv':\r\n        this.gl.uniform2fv(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniform3fv':\r\n        this.gl.uniform3fv(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniform4fv':\r\n        this.gl.uniform4fv(this.uniformLocation, args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniformMatrix3fv':\r\n        this.gl.uniformMatrix3fv(this.uniformLocation,false,args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      case 'uniformMatrix4fv':\r\n        this.gl.uniformMatrix4fv(this.uniformLocation,false,args[0]);\r\n        this.data = args[0];\r\n        break;\r\n      default:\r\n        throw new Error(`UniformClass: function ${this.type} has not been implemented.`);\r\n    }\r\n  }\r\n}","/**\r\n * Created by Rick on 2021-12-11.\r\n */\r\n'use strict';\r\n\r\nimport {HeadData} from '../../positions-colors/HeadData.js';\r\nimport {vertex_shader, fragment_shader} from \"./shaders.js\";\r\nimport {ArrayBufferClass} from \"web-gl-helpers\";\r\nimport {UniformClass} from \"web-gl-helpers\";\r\nimport {TransformsClass} from \"web-gl-helpers\";\r\nimport {resizeCanvasToDisplaySize} from \"web-gl-helpers\"\r\nimport {createShader} from \"web-gl-helpers\";\r\nimport {createGLcontext} from \"web-gl-helpers\";\r\nimport {createProgram} from \"web-gl-helpers\";\r\nimport {initializeContext} from \"web-gl-helpers\";\r\n\r\nimport {\r\n  create as m4_create,\r\n  multiply as m4_multiply,\r\n  invert as m4_invert,\r\n  targetTo as m4_targetTo\r\n} from 'gl-matrix/esm/mat4';\r\n\r\nimport {toRadian} from 'gl-matrix/esm/common';\r\n\r\nfunction vectorMultiply(v,m){\r\n  let dst = [];\r\n  for(let i = 0; i < 4; ++i){\r\n    dst[i] = 0.0;\r\n    for(let j = 0; j < 4; ++j){\r\n      dst[i] += v[j] * m[j * 4 + i];\r\n    }\r\n  }\r\n  return dst;\r\n}\r\n\r\ntry {\r\n  const context = createGLcontext('my_canvas');\r\n  const gl = context.gl;\r\n  const canvas = context.canvas;\r\n\r\n  gl.enable(gl.DEPTH_TEST); // enable depth testing\r\n  gl.enable(gl.CULL_FACE);  // enable culling of backfacing triangles\r\n  gl.depthFunc(gl.LEQUAL); // near things obscure far things\r\n\r\n  // Check canvas width and height\r\n  resizeCanvasToDisplaySize(canvas);\r\n\r\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n  // Create shader objects\r\n  const vShader = createShader(gl, gl.VERTEX_SHADER, vertex_shader);\r\n  const fShader = createShader(gl, gl.FRAGMENT_SHADER, fragment_shader);\r\n\r\n  // Create a WebGLProgram\r\n  const program = createProgram(gl, vShader, fShader);\r\n  // Tell context to use our program (a pair of shaders)\r\n  gl.useProgram(program);\r\n\r\n  // Set up position attribute for 'a_position'\r\n  // Create and set the attribute position data (a_position_v4)\r\n  const position_type = gl.FLOAT; // the data is 32bit floats\r\n  const positionAttrib = new ArrayBufferClass(gl, position_type, program,'a_position_v4');\r\n  // Define the head data\r\n  const positions = new Float32Array(HeadData.positions)\r\n  const primitiveType = gl.TRIANGLES;\r\n  const prim_offset = 0;\r\n  const triangle_count = positions.length / 3;\r\n\r\n  const scaling_m4 = TransformsClass.getScaleMatrix([6, 6, 6]);\r\n  const yRotation_m4 = TransformsClass.getXYZRotationMatrix('y', 180);\r\n\r\n  const headTransform_m4 = m4_create();\r\n  m4_multiply(headTransform_m4, scaling_m4, yRotation_m4);\r\n  for(let i = 0; i < positions.length; i += 3){\r\n    let v_m3 = vectorMultiply(\r\n      [positions[i], positions[i + 1], positions[i + 2], 1],\r\n      headTransform_m4\r\n    )\r\n    positions[i] = v_m3[0];\r\n    positions[i + 1] = v_m3[1];\r\n    positions[i + 2] = v_m3[2];\r\n  }\r\n  // Set the position data\r\n  positionAttrib.setData(positions, gl.STATIC_DRAW);\r\n\r\n  // Set up varying color attribute for 'a_color_v4'\r\n  const color_type = gl.UNSIGNED_BYTE; // the data is UNSIGNED_BYTE\r\n  const colorAttrib = new ArrayBufferClass(gl, color_type, program,'a_color_v4');\r\n  // Define the head color data\r\n  const normals_list_m3 = HeadData.normals;\r\n  const colors_list = new Uint8Array(normals_list_m3.length);\r\n  let offset = 0;\r\n  for(let i = 0; i < colors_list.length; i += 3){\r\n    for(let ii = 0; ii < 3; ++ii){\r\n      colors_list[offset] = (normals_list_m3[offset] * 0.5 + 0.5) * 255;\r\n      ++offset;\r\n    }\r\n  }\r\n  colorAttrib.setData(colors_list, gl.STATIC_DRAW);\r\n\r\n  // Associate shader attributes with corresponding data buffers\r\n  const vao = gl.createVertexArray();\r\n  // Make vao the one we're currently working with\r\n  gl.bindVertexArray(vao);\r\n\r\n  // Specify how to pull the position data out\r\n  {\r\n    const size = 3; // 3 components per iteration\r\n    const normalize = false; // don't normalize the data\r\n    const stride = 0; // 0 = move forward size * sizeof(type) each\r\n    //  iteration to get the next position\r\n    const offset = 0; // start at the beginning of the buffer\r\n    positionAttrib.bufferFormat(size, normalize, stride, offset);\r\n  }\r\n\r\n  // Specify how to pull the color data out\r\n  {\r\n    const size = 3; // 3 components per iteration\r\n    const normalize = true; // don't normalize the data\r\n    const stride = 0; // 0 = move forward size * sizeof(type) each\r\n    //  iteration to get the next position\r\n    const offset = 0; // start at the beginning of the buffer\r\n    colorAttrib.bufferFormat(size, normalize, stride, offset);\r\n  }\r\n\r\n  // Set up the uniforms\r\n  // Set up matrix uniform 'u_matrix'\r\n  const matrixUniform = new UniformClass(gl, program, 'u_matrix_m4', 'uniformMatrix4fv')\r\n\r\n  // Define the initial values for the perspective projection\r\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n  const zNear = 1;\r\n  const zFar = 3000;\r\n  const fov = 60; // Note: fov in degrees does not change\r\n  // Compute the perspective/projection matrix with a constant fov\r\n  const perspective_m4 = TransformsClass.getPerspectiveMatrix(fov, aspect, zNear, zFar);\r\n\r\n  // Set initial target position in 3D space\r\n  let target_position_v3 = [0, 200, 300];\r\n  // Set initial target angle position\r\n  let target_angle = 0;\r\n  // Set constant target radius\r\n  const target_radius = 300;\r\n\r\n  function updateTargetAngle(value){\r\n    // Redefine target position in the x-z plane\r\n    const angle_radians = toRadian(value);\r\n    target_position_v3[0] = Math.sin(angle_radians) * target_radius;\r\n    target_position_v3[2] = Math.cos(angle_radians) * target_radius;\r\n    drawScene();\r\n  }\r\n\r\n  function updateTargetHeight(value){\r\n    // Redefine target position along the y axis\r\n    target_position_v3[1] = value;\r\n    drawScene();\r\n  }\r\n\r\n  // Create a camera view matrix which when applied to head locations\r\n  //   will put them in perspective view and turn heads toward the camera\r\n  const camera_to_target_v = [0, -100, 0];\r\n  const camera_position_v = [500, 300, 500];\r\n  // Define 'up' on the Y axis\r\n  const up = [0, 1, 0];\r\n\r\n  // Compute the matrix that makes/transforms the camera to look at the target\r\n  const cameraToTarget_m4 = m4_create();\r\n  m4_targetTo(cameraToTarget_m4, camera_position_v, camera_to_target_v, up);\r\n\r\n  // Make a view matrix from the cameraToTarget_m4 matrix\r\n  // Inverting cameraToTarget_m4 provides a transform for\r\n  //   everything else in the scene\r\n  const view_m4 = m4_create();\r\n  m4_invert(view_m4, cameraToTarget_m4);\r\n\r\n  // Compute a view projection/perspective matrix to be used\r\n  //   to transform each F\r\n  const viewPerspective_m4 = m4_create();\r\n  m4_multiply(viewPerspective_m4, perspective_m4, view_m4);\r\n\r\n\r\n  // Define a function for drawing a head\r\n  function drawHead(head_transform_m4){\r\n    const uniform_m4 = m4_create();\r\n    m4_multiply(uniform_m4, viewPerspective_m4, head_transform_m4);\r\n    // Set the 'u_matrix' shader attribute\r\n    matrixUniform.setData(uniform_m4);\r\n\r\n    // Draw the head\r\n    gl.drawArrays(primitiveType, prim_offset, triangle_count);\r\n  }\r\n\r\n  // Define a function for drawing the scene\r\n  function drawScene(){\r\n    initializeContext(gl);\r\n\r\n    // Draw many heads in a grid\r\n    const deep = 5;\r\n    const across = 5;\r\n    let cameraToTarget_m4 = m4_create();\r\n    for (let zz = 0; zz < deep; ++zz) {\r\n      let v = zz / (deep - 1);\r\n      let z = (v - .5) * deep * 150;\r\n      for (let xx = 0; xx < across; ++xx) {\r\n        let u = xx / (across - 1);\r\n        let x = (u - .5) * across * 150;\r\n        let head_loc_v3 = [x, 0, z]\r\n        m4_targetTo(cameraToTarget_m4, head_loc_v3, target_position_v3, up);\r\n        drawHead(cameraToTarget_m4);\r\n      }\r\n    }\r\n\r\n    // Draw the single target head\r\n    const single_head_translation_m4 = TransformsClass.getTranslationMatrix(target_position_v3);\r\n    drawHead(single_head_translation_m4);\r\n  }\r\n\r\n  // Set up the user interface for changes to the parameters\r\n  // Define the target angle\r\n  const targetAngle_slider = document.getElementById('targetAngle');\r\n  const targetAngle_output = document.getElementById('targetAngle_output');\r\n  targetAngle_slider.step = 1;\r\n  targetAngle_slider.min = -360;\r\n  targetAngle_slider.max = 360;\r\n\r\n  targetAngle_slider.value = target_angle;\r\n  targetAngle_output.textContent = target_angle;\r\n\r\n  targetAngle_slider.addEventListener('input', ()=> {\r\n    const targetAngle = +targetAngle_slider.value;\r\n    targetAngle_output.textContent = targetAngle_slider.value;\r\n    updateTargetAngle(targetAngle);\r\n  });\r\n\r\n  // Define the target angle\r\n  const targetHeight_slider = document.getElementById('targetHeight');\r\n  const targetHeight_output = document.getElementById('targetHeight_output');\r\n  targetHeight_slider.step = 1;\r\n  targetHeight_slider.min = 50;\r\n  targetHeight_slider.max = 300;\r\n\r\n  targetHeight_slider.value = target_position_v3[1];\r\n  targetHeight_output.textContent = target_position_v3[1];\r\n\r\n  targetHeight_slider.addEventListener('input', ()=> {\r\n    const targetHeight = +targetHeight_slider.value;\r\n    targetHeight_output.textContent = targetHeight_slider.value;\r\n    updateTargetHeight(targetHeight);\r\n  });\r\n\r\n  // Draw the initial scene\r\n  drawScene();\r\n}catch (e) {\r\n  console.log(e);\r\n}\r\n"],"names":["$2ee13d958b90ca61$export$d90591ec8547dbb","$78ae820aa9ececfa$export$b67359430d3b1b2","Float32Array","Array","Math","random","$78ae820aa9ececfa$var$degree","PI","$78ae820aa9ececfa$export$408b8ee5959eefd5","a","$26675c4f95835ef1$export$185802fd694ee1f5","out","$26675c4f95835ef1$export$2060d2db72cce88f","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","hypot","y","i","arguments","length","sqrt","$26675c4f95835ef1$export$541149539f3a4684","fovy","aspect","near","far","nf","f","tan","Infinity","$26675c4f95835ef1$export$4f2167e613cfc87b","left","right","bottom","top","lr","bt","$26675c4f95835ef1$export$aa67782f4dc9e52c","eye","target","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","z2","len","x0","x1","x2","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","$f8517097745e6edf$export$1750aa77609e1fb","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shader_info","getShaderInfoLog","deleteShader","Error","constructor","program","name","this","buffer_type","data_type","attributeLocation","getAttribLocation","arrayBuffer","createBuffer","bufferFormat","size","normalize","stride","offset","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","enableVertexAttribArray","setData","attributes","usage","values","isArray","j","FLOAT","bufferData","UNSIGNED_BYTE","Uint8Array","delete","deleteBuffer","static","ortho_m4","fov","zNear","zFar","perspective_m4","translate_v","translate_m4","v","rotation_deg","axis_v","rotate_m4","rad","axis","s","c","t","x","z","sin","cos","$26675c4f95835ef1$export$7dc997d67d2b7f33","$26675c4f95835ef1$export$ad5ddaedc8f405df","scale_v","scale_m4","$f8517097745e6edf$export$3889134346f53239","data","uniformLocation","getUniformLocation","args","uniform1i","uniform1f","uniform2f","uniform4f","uniform2fv","uniform3fv","$efd3ba4ec2608b1d$var$vectorMultiply","m","dst","context","canvas_id","context_type","options","canvas","document","getElementById","getContext","$f8517097745e6edf$export$904a8156d3f18680","enable","DEPTH_TEST","CULL_FACE","depthFunc","LEQUAL","displayWidth","clientWidth","displayHeight","clientHeight","needResize","width","height","$f8517097745e6edf$export$4d986a341d0b1b6c","viewport","vShader","VERTEX_SHADER","fShader","FRAGMENT_SHADER","vertex_shader","frag_shader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","program_info","getProgramInfoLog","deleteProgram","$f8517097745e6edf$export$327d24a04cd0dc17","useProgram","position_type","positionAttrib","$f8517097745e6edf$export$295f27c869b9e2d8","positions","primitiveType","TRIANGLES","prim_offset","triangle_count","scaling_m4","$f8517097745e6edf$export$9fd27ddb4fd2d937","getScaleMatrix","yRotation_m4","getXYZRotationMatrix","headTransform_m4","v_m3","STATIC_DRAW","color_type","colorAttrib","normals_list_m3","colors_list","i1","ii","vao","createVertexArray","bindVertexArray","matrixUniform","getPerspectiveMatrix","target_position_v3","target_angle","target_radius","camera_to_target_v","camera_position_v","cameraToTarget_m41","view_m4","viewPerspective_m4","$efd3ba4ec2608b1d$var$drawHead","head_transform_m4","uniform_m4","drawArrays","$efd3ba4ec2608b1d$var$drawScene","color_v4","clearColor","clearDepth","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","$f8517097745e6edf$export$881f7fb71351b304","cameraToTarget_m42","zz","xx","getTranslationMatrix","targetAngle_slider","targetAngle_output","step","min","max","value","textContent","addEventListener","targetAngle","angle_radians","$efd3ba4ec2608b1d$var$updateTargetAngle","targetHeight_slider","targetHeight_output","targetHeight","e"],"version":3,"file":"index.f37a752c.js.map"}