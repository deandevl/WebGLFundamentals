const t=[0,0,30,0,0,150,0,150,30,0,30,150,30,0,100,0,30,30,30,30,100,0,100,30,30,60,67,60,30,90,30,90,67,60,67,90];"undefined"!=typeof Float32Array&&Float32Array,Math.random;var e=Math.PI/180;function n(t){return t*e}Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});class o{constructor(t,e,n,o){this.gl=t,this.type=e,this.attributeLocation=this.gl.getAttribLocation(n,o),this.buffer=this.gl.createBuffer()}bufferFormat(t,e,n,o){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.gl.vertexAttribPointer(this.attributeLocation,t,this.type,e,n,o),this.gl.enableVertexAttribArray(this.attributeLocation)}setData(t,e){switch(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.type){case this.gl.FLOAT:this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),e);break;case this.gl.UNSIGNED_BYTE:this.gl.bufferData(this.gl.ARRAY_BUFFER,new Uint8Array(t),e)}}}class a{constructor(t,e,n,o){this.gl=t,this.type=o,this.uniformLocation=t.getUniformLocation(e,n)}setData(...t){switch(this.type){case"uniform1f":this.gl.uniform1f(this.uniformLocation,t[0]);break;case"uniform2f":this.gl.uniform2f(this.uniformLocation,t[0],t[1]);break;case"uniform4f":this.gl.uniform4f(this.uniformLocation,t[0],t[1],t[2],t[3]);break;case"uniform2fv":this.gl.uniform2fv(this.uniformLocation,t[0]);break;case"uniform3fv":this.gl.uniform3fv(this.uniformLocation,t[0]);break;case"uniform4fv":this.gl.uniform4fv(this.uniformLocation,t[0]);break;case"uniformMatrix3fv":this.gl.uniformMatrix3fv(this.uniformLocation,!1,t[0]);break;case"uniformMatrix4fv":this.gl.uniformMatrix4fv(this.uniformLocation,!1,t[0]);break;default:throw new Error(`UniformClass: function ${this.type} has not been implemented.`)}}}function i(t,e,n){const o=t.createShader(e);t.shaderSource(o,n),t.compileShader(o);if(t.getShaderParameter(o,t.COMPILE_STATUS))return o;{const e=t.getShaderInfoLog(o);throw t.deleteShader(o),new Error("createShader: "+e)}}try{const e=function(t,e="webgl2",n){const o=document.getElementById(t);if(!o)throw new Error(`createGLContext: Could not locate canvas element with id ${t}`);return{gl:o.getContext(e,n),canvas:o}}("my_canvas"),s=e.gl;!function(t){const e=t.clientWidth,n=t.clientHeight,o=t.width!==e||t.height!==n;o&&(t.width=e,t.height=n)}(e.canvas),s.viewport(0,0,s.canvas.width,s.canvas.height);const c=i(s,s.VERTEX_SHADER,"#version 300 es\n\nin vec2 a_position_v2;\n\nuniform vec2 u_resolution_v2;\nuniform vec2 u_translation_v2;\nuniform vec2 u_rotation_v2;\nuniform vec2 u_scale_v2;\n\nvoid main() {\n  // define scale\n  vec2 scaledPosition_v2 = a_position_v2 * u_scale_v2;\n\n  // define rotation\n  vec2 rotatedPosition_v2 = vec2(\n    scaledPosition_v2.x * u_rotation_v2.y + scaledPosition_v2.y * u_rotation_v2.x,\n    scaledPosition_v2.y * u_rotation_v2.y - scaledPosition_v2.x * u_rotation_v2.x\n  );\n\n  // add in the translation and rotation\n  vec2 position_v2 = rotatedPosition_v2 + u_translation_v2;\n\n  // convert the position from pixels to 0.0 to 1.0\n  vec2 zeroToOne_v2 = position_v2 / u_resolution_v2;\n\n  // convert from 0->1 to 0->2\n  vec2 zeroToTwo_v2 = zeroToOne_v2 * 2.0;\n\n  // convert from 0->2 to -1 -> +1 (clip space)\n  vec2 clipSpace_v2 = zeroToTwo_v2 - 1.0;\n\n  gl_Position = vec4(clipSpace_v2 * vec2(1, -1), 0, 1);\n}\n"),u=i(s,s.FRAGMENT_SHADER,"#version 300 es\n\nprecision highp float;\n\nuniform vec4 u_color_v4;\n\n// We need to declare an output for the fragment shader\nout vec4 outColor_v4;\n\nvoid main() {\n  outColor_v4 = u_color_v4;\n}"),l=function(t,e,n){const o=t.createProgram();if(t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),t.getProgramParameter(o,t.LINK_STATUS))return o;{const e=t.getProgramInfoLog(o);throw t.deleteProgram(o),new Error("createProgram: "+e)}}(s,c,u);s.useProgram(l);const m=s.FLOAT,f=new o(s,m,l,"a_position_v2");f.setData(t,s.STATIC_DRAW);const v=s.createVertexArray();s.bindVertexArray(v);{const t=2,e=!1,n=0,o=0;f.bufferFormat(t,e,n,o)}new a(s,l,"u_resolution_v2","uniform2f").setData(s.canvas.width,s.canvas.height);new a(s,l,"u_color_v4","uniform4f").setData(Math.random(),Math.random(),Math.random(),1);const h=new a(s,l,"u_translation_v2","uniform2f");let _=[0,0];h.setData(_[0],_[1]);const d=new a(s,l,"u_rotation_v2","uniform2f");let g=[0,1];d.setData(g[0],g[1]);const p=new a(s,l,"u_scale_v2","uniform2f");let x=[1,1];p.setData(x[0],x[1]);let y=0;function r(){!function(t,e=[0,0,0,1]){t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.clearColor(e[0],e[1],e[2],e[3]),t.clearDepth(1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}(s);const t=s.TRIANGLES;s.drawArrays(t,0,18)}const E=document.getElementById("x_translate"),A=document.getElementById("y_translate"),L=document.getElementById("x_translate_output"),b=document.getElementById("y_translate_output");E.step=A.step=4,E.min=A.min=0,E.max=A.max=800,E.value=L.textContent=_[0],A.value=b.textContent=_[1],E.addEventListener("input",(()=>{_[0]=L.textContent=+E.value,h.setData(_[0],_[1]),r()})),A.addEventListener("input",(()=>{_[1]=b.textContent=+A.value,h.setData(_[0],_[1]),r()}));const w=document.getElementById("x_rotate"),B=document.getElementById("y_rotate"),C=document.getElementById("x_rotate_output"),I=document.getElementById("y_rotate_output");w.step=B.step=.1,w.min=B.min=-1,w.max=B.max=1,w.value=C.textContent=g[0],B.value=I.textContent=g[1],w.addEventListener("input",(()=>{g[0]=C.textContent=(+w.value).toFixed(2),g[1]=I.textContent=Math.sqrt(1-Math.pow(g[0],2)).toFixed(2),d.setData(g[0],g[1]),r()})),B.addEventListener("input",(()=>{g[1]=I.textContent=(+B.value).toFixed(2),g[0]=C.textContent=Math.sqrt(1-Math.pow(g[1],2)).toFixed(2),d.setData(g[0],g[1]),r()}));const F=document.getElementById("x_scale"),D=document.getElementById("y_scale"),P=document.getElementById("x_scale_output"),R=document.getElementById("y_scale_output");F.step=D.step=.2,F.min=D.min=.2,F.max=D.max=4,F.value=P.textContent=x[0],D.value=R.textContent=x[1],F.addEventListener("input",(()=>{x[0]=P.textContent=+F.value,p.setData(x[0],x[1]),r()})),D.addEventListener("input",(()=>{x[1]=R.textContent=+D.value,p.setData(x[0],x[1]),r()}));const S=document.getElementById("angle"),M=document.getElementById("angle_output");S.step=5,S.min=0,S.max=360,S.value=M.textContent=y,S.addEventListener("input",(()=>{y=M.textContent=+S.value;const t=n(y);d.setData(Math.sin(t),Math.cos(t)),r()})),r()}catch(t){console.log(t.message)}
//# sourceMappingURL=index.4f8051e0.js.map
